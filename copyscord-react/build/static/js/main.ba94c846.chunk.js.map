{"version":3,"sources":["App/UserLogo/UserLogo.module.css","App/FriendList/FriendList.module.css","App/ServerName/ServerSettings/Overview.module.css","App/CreateJoinServer/AddCreate.module.css","App/ServerName/ServerName.module.css","App/ChannelList/ChannelSettings/Overview.module.css","App/PopupUserProfile/PopupUserProfile.module.css","App/ContextProvider/CurrentServer.js","App/ContextProvider/ServerList.js","App/config.js","App/Util/fetcher.js","App/CreateJoinServer/AddServer.js","App/CreateJoinServer/JoinServer.js","App/CreateJoinServer/CreateJoinServer.js","App/ServerButton/ServerLogo.js","App/ServerButton/ServerButton.js","App/ContextProvider/Server/ChannelsList.js","App/ContextProvider/Server/UsersList.js","App/ContextProvider/CurrentUser.js","App/ContextProvider/CurrentChannel.js","App/ContextProvider/currentMessages.js","App/ContextProvider/Server/VocieUsers.js","App/ServerList/ServerList.js","App/Popup/Popup.js","App/AddCategory/AddCategory.js","App/Settings/Settings.js","App/UserLogo/UserLogo.js","App/ServerName/ServerSettings/Overview.js","App/ServerName/ServerSettings/BansComponent/BansHandler.js","App/ServerName/ServerSettings/Bans.js","App/ServerName/ServerSettings/InvitesCoponent/InvitesHandler.js","App/ServerName/ServerSettings/Invites.js","App/ServerName/ServerSettings/ServerSettings.js","App/ServerName/invitePopup/ManageInvite.js","App/ServerName/invitePopup/InvitePopup.js","App/ServerName/ServerName.js","App/StatusChanger/StatusChanger.js","App/UserContainer/UserSettings/MyAccount.js","App/UserContainer/UserSettings/UserSettings.js","App/ContextProvider/CurrentVoiceChannel.js","App/VoiceStatus/VoiceStatus.js","App/UserContainer/UserContainer.js","App/FriendChannelButton/FriendButton.js","App/FriendChannelButton/FriendChannelButton.js","App/ChannelList/FriendsChannels.js","App/ServerCategory/ServerChannel.js","App/AddChannel/AddChannel.js","App/ServerCategory/ServerCategory.js","App/ChannelList/ChannelSettings/Overview.js","App/ChannelList/ChannelSettings/ChannelSettings.js","App/ChannelList/CategorySettings/Overview.js","App/ChannelList/CategorySettings/CategorySettings.js","App/ChannelList/ServerChannels.js","App/ChannelList/ChannelList.js","App/TopBar/ContextButton.js","App/TopBar/TopBar.js","App/ChannelName/ChannelName.js","App/FriendList/FriendListButton.js","App/FriendList/AddFriend.js","App/ContextProvider/FriendsList.js","App/FriendList/ListPane.js","App/ContextProvider/CurrentFriendsPanel.js","App/FriendsTypeSwitcher/FriendsTypeButton.js","App/FriendsTypeSwitcher/FriendsTypeSwitcher.js","App/FriendList/FriendList.js","App/Chat/ChatBox.js","App/UserTippyProfile/UserTippyProfile.js","App/PopupUserProfile/Sub/CommonFriends.js","App/PopupUserProfile/Sub/CommonServer.js","App/PopupUserProfile/PopupUserProfile.js","App/Chat/Message.js","App/Chat/MainChat.js","App/UserList/MemberButton.js","App/UserList/RankSeparator.js","App/UserList/UserList.js","App/Chat/Chat.js","App/Login/Login.js","App/Login/Register.js","App/App.js","SocketEvent.js","index.js","App/UserList/UserList.module.css","App/Login/Register.module.css","App/Login/Login.module.css","App/Chat/Chat.module.css","App/Chat/Message.module.css","App/ServerButton/ServerButton.module.css","App/UserTippyProfile/UserTippyProfile.module.css","App/ServerName/ServerSettings/BansComponent/BansHandler.module.css","App/CreateJoinServer/CreateJoinServer.module.css","App/UserContainer/UserContainer.module.css","App/FriendChannelButton/FriendChannelButton.module.css","App/UserContainer/UserSettings/UserSettings.module.css","App/FriendsTypeSwitcher/FriendsTypeSwitcher.module.css","App/PopupUserProfile/Sub/Common.module.css","App/StatusChanger/StatusChanger.module.css","App/ChannelList/ChannelList.module.css","App/FriendList/AddFriend.module.css","App/ServerCategory/ServerCategory.module.css","App/TopBar/TopBar.module.css","App/ServerName/ServerSettings/ServerSettings.module.css","App/Settings/Settings.module.css","App/VoiceStatus/VoiceStatus.module.css","App/AddChannel/AddChannel.module.css","App/ChannelName/ChannelName.module.css","App/Popup/Popup.module.css","App/App.module.css","App/ChannelList/ChannelSettings/ChannelSettings.module.css","App/ServerList/ServerList.module.css","App/ServerName/invitePopup/ManageInvite.module.css"],"names":["module","exports","ServerContext","React","createContext","CurrentServer","children","useState","currentFriendsPanel","setCurrentFriendsPanel","Provider","value","activeServer","setServer","values","Consumer","ServerListContext","ServersList","serversList","setCurrentChannel","serverList","setServers","config","TopBar","APIUrl","eventSocket","GET","requestUrl","a","params","authorization","header","Headers","set","url","URL","Object","keys","forEach","key","searchParams","append","fetch","toString","method","mode","headers","request","json","error","POST","body","DELETE","PUT","AddServer","back","close","useCookies","Authorization","setError","name","setName","useContext","history","useHistory","createServer","e","preventDefault","then","id","serverName","toUpperCase","slice","length","logoUrl","push","className","style","popupHandler","top","title","onSubmit","topContent","fontWeight","fontSize","onChange","target","type","input","alert","closebtn","onClick","bot","botContent","backButton","icon","faLongArrowAltLeft","marginLeft","createButton","JoinServer","invitation","setInvitation","joinServer","color","joinButton","CreateJoinServer","outside","setType","closePopup","currentTarget","popup","content","joinCreate","margin","icons","faPlusSquare","create","faSignInAlt","join","ServerLogo","active","image","src","width","height","alt","dm","ServerButton","serverId","addServer","changeServer","serverContext","serverPopup","setServerPopup","animation","substring","placement","arrow","button","addServerCross","serverButt","faInbox","to","textDecoration","serverButton","ChannelsContext","ChannelsList","currentChannels","channelsList","setChannels","usersListContext","UsersList","activeChannel","currentChannel","usersList","setUsersList","UserContext","CurrentUser","currentUser","setCurrentUser","setUser","ChannelContext","CurrentChannel","setChannel","MessageContext","CurrentMessage","Messages","currentMessages","setMessage","messages","setMessages","VoiceUsersContext","VoiceUsers","voiceUserList","setVoiceUserList","setVoiceUsers","ServerList","loaded","setLoaded","UsersListContext","useParams","ServerID","ChannelID","channelContext","useEffect","list","catch","useCallback","undefined","voiceList","server","defaultText","me","members","find","x","isAdmin","role","isOwner","assign","channels","some","check","y","handler","serverHandler","serverSeparator","map","i","Popup","bottom","AddCategory","createChannel","cancelButton","titleHandler","form","subTitle","inputText","maxLength","channelName","borderError","Settings","NavBar","settings","navBar","buttonList","UserLogo","bgcolor","status","borderRadius","backgroundColor","borderColor","Overview","exit","setServerName","serverNameError","setServerNameError","titleExit","exitButton","faTimes","overview","display","alignItems","flexDirection","imageInput","event","FormData","files","logo","changeAvatar","deleteServerPicture","padding","justifyContent","position","changeName","inputHandler","errorBorder","lineHeight","right","save","BansHandler","code","author","authorLogo","authorCode","removeBan","banned","substr","padStart","marginRight","Bans","banList","setBanList","bans","splice","autoHide","flex","ban","username","userCode","InvitesHandler","invite","date","removeInvite","Date","toLocaleDateString","day","month","year","hour","hour12","minute","second","Invites","InvitesList","setInvitesList","invites","ServerSettings","currentMenu","setCurrentMenu","exitSettings","keyCode","window","addEventListener","removeEventListener","navButton","activeNav","ManageInvite","inviteList","setInviteList","setInvite","delete","deleteInvite","InvitePopup","setPopup","lastInvite","inviteError","setInviteError","manage","setManage","doneButton","inviteInput","readOnly","ServerName","leaveServer","deleteServer","addCategory","setAddCategory","popupType","setPopupType","instance","setInstance","serverSettings","setServerSettings","leaveServerFnct","hide","deleteServerFnct","invitePopup","leaveButton","trigger","offset","interactive","hideOnClick","onTrigger","show","render","attrs","contextMenu","slideIn","normalContext","contextButton","leave","StatusChanger","statusChanger","select","MyAccount","edit","setEdit","setUsername","email","setEmail","password","setPassword","newPassword","setNewPassword","updatePassword","setUpdatePassword","emailError","setEmailError","usernameError","setUsernameError","passwordError","setPasswordError","passError","test","whatToUpdate","newpassword","errorCode","userContainer","deleteProfilePicture","userInfo","userInfoHandler","userInfoTitle","autoComplete","errorText","changePassword","canReceiveDM","bool","dmFromEveryone","updateButton","userInfoText","end","UserSettings","deleteCookie","navSeparator","logout","VoiceChannelContext","CurrentVoiceChannel","currentVoiceChannel","setCurrentVoiceChannel","activeVoiceChannel","setVoiceChannel","voiceConnected","Map","VoiceStatus","voiceSocket","setVoiceSocket","currentState","setCurrentState","isDisconnecting","setIsDisconnecting","disconnect","emit","serverID","channelId","authorizationToken","on","console","log","removeListener","routerRtpCapabilities","receiverTransportOption","senderTransportOption","device","Device","load","createRecvTransport","receiver","createSendTransport","sender","callback","dtlsParameters","producerOptions","myId","rtpCapabilities","producerId","navigator","mediaDevices","getUserMedia","audio","echoCancellation","stream","produce","track","getTracks","ConsumerOptions","consume","consumer","document","createElement","srcObject","MediaStream","play","clear","ip","port","socket","connected","connecting","faPhoneSlash","UserContainer","changeStatus","setChangeStatus","userSettings","setUserSettings","isDeaf","setIsDeaf","isMute","setIsMute","muteMe","deafMe","stat","userLogo","infoWrapper","usercode","controller","controlButton","faMicrophoneSlash","faMicrophone","faVolumeMute","faVolumeUp","faCog","FriendButton","faUserFriends","friendsButton","friendsText","FriendChannelButton","friendChannel","channelObject","nameLogo","remove","filter","item","FriendsChannels","dmSeparator","channelList","ServerChannel","categoryId","setSettings","deleteCha","setDeleteCha","deleteChannel","z","channel","nonactiveChannel","faAt","faHashtag","channelOption","userList","voiceUser","voiceUsername","deleteButton","AddChannel","categoryName","channelType","activeType","checkbox","checked","checkboxSpan","channelTypeFa","ServerCategory","extended","setExtended","setAddServer","deleteCat","setDeleteCat","deletedId","category","nameDiv","faAngleDown","rotation","addChannel","faPlus","hidden","setChannelName","channelNameErr","setChannelNameErr","j","action","buttonHandler","saveButton","ChannelSettings","setCategoryName","categoryNameErr","setCategoryNameErr","CategorySettings","ServerChannels","ChannelList","FriendID","handlerBR","ContextButton","fa","menuButton","topBar","appName","controlMenu","faMinus","hoverColor","faSquare","ChannelType","channelInfo","channelLogo","FriendListButton","removeFriend","sent","acceptFriend","removeRequest","friendDeletePopup","setFriendDeletePopup","removeFriendPopup","user","separator","faCommentAlt","faEllipsisV","AddFriend","setInput","success","setSuccess","splitter","split","isNaN","parseInt","pop","addFriend","placeholder","FriendsListContext","FriendsList","friendsList","setFriendsListS","setFriendsList","ListPane","currentType","userId","received","FriendsPanelContext","CurrentFriendsPanel","activeFPanel","setFriendsPanel","FriendsTypeButton","text","switcher","FriendsTypeSwitcher","switch","switcherText","addFriendButton","FriendList","ChannelName","verticalSeparator","ChatBox","setEditMessage","textValue","setTextValue","editing","setEditing","chatInput","border","autoHeight","boxContainer","onKeyPress","authorId","lastMessage","now","sort","dude","newMessage","spellCheck","textbox","cancel","UserTippyProfile","left","showProfile","dmMessage","setDmMessage","dmError","setDmError","profile","slideLeft","slideRight","profileTop","profileLogo","profileUsername","profileUsernameID","profileBot","dmHandler","dmInputHandler","dmInput","CommonFriends","mutualFriends","profileRedirect","listUser","CommonServer","mutualServers","serverRedirect","serverLogo","PopupUserProfile","currentTab","setCurrentTab","addedToFriend","setAddedToFriend","stateId","setId","commonServer","commonFriends","friendRequested","space","userNameCode","addedFriend","disabled","areFriends","navBarContent","navActive","commonServers","Message","messageID","deleteMsg","instanceProfile","setInstanceProfile","userProfile","setUserProfile","editMessage","hidePopup","deletePopup","setProps","getReferenceClientRect","clientY","clientX","message","appendTo","getElementById","profileRank","messageContent","MainChat","setChannelState","noMoreMsg","setNoMoreMsg","scroll","setScroll","scrollHeight","setScrollHeight","limit","reverse","ref","scrollToBottom","onUpdate","scrolled","scrollTop","from","concat","time","MemberButton","rank","setActive","banPopup","setBanPopup","rankUpdate","banButton","onHide","member","memberName","RankSeparator","users","rankSeparator","rankName","UserList","statusColor","Chat","chatFlex","alignSelf","zIndex","Login","setCookie","useRef","login","slideInTop","current","loginToken","inputForm","required","inputButton","redirect","Register","Copyscord","container","path","io","SocketEvent","subServer","setSubServer","subUser","setSubUser","addUser","removeUser","channelID","authorID","authorName","newContent","authorStatus","categoryID","newChannelName","newCategoryName","userID","ReactDOM","CookiesProvider"],"mappings":"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","file":"static/js/main.ba94c846.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"UserLogo_handler__3BGJ6\",\"status\":\"UserLogo_status__1h0xI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"FriendList_handler__vNeFm\",\"top\":\"FriendList_top__3J7Hk\",\"verticalSeparator\":\"FriendList_verticalSeparator__C5Pl2\",\"list\":\"FriendList_list__179OJ\",\"title\":\"FriendList_title__49KdK\",\"subTitle\":\"FriendList_subTitle__2fSeK\",\"user\":\"FriendList_user__1PgTU\",\"action\":\"FriendList_action__mgv_H\",\"userLogo\":\"FriendList_userLogo__1F5kl\",\"username\":\"FriendList_username__TOuVL\",\"separator\":\"FriendList_separator__1DTif\",\"userCode\":\"FriendList_userCode__3kYA0\",\"contextMenu\":\"FriendList_contextMenu__1iSxq\",\"contextButton\":\"FriendList_contextButton__1C5Oh\",\"delete\":\"FriendList_delete__324dl\",\"cancelButton\":\"FriendList_cancelButton__2TKxM\",\"deleteButton\":\"FriendList_deleteButton__1QrmQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"Overview_handler__1cZMK\",\"titleExit\":\"Overview_titleExit__26uA9\",\"title\":\"Overview_title__3VT6D\",\"exitButton\":\"Overview_exitButton__29Wjd\",\"overview\":\"Overview_overview__1wlWD\",\"logo\":\"Overview_logo__342z4\",\"imageInput\":\"Overview_imageInput__1MP-V\",\"changeAvatar\":\"Overview_changeAvatar__7WKf4\",\"changeName\":\"Overview_changeName__AzTz6\",\"inputHandler\":\"Overview_inputHandler__26DW3\",\"input\":\"Overview_input__28_Xc\",\"save\":\"Overview_save__2gFM2\",\"errorBorder\":\"Overview_errorBorder__CZFGk\",\"deleteServerPicture\":\"Overview_deleteServerPicture__rbL0P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popupHandler\":\"AddCreate_popupHandler__2r185\",\"title\":\"AddCreate_title__F2zhH\",\"top\":\"AddCreate_top__1PGCP\",\"topContent\":\"AddCreate_topContent__3xXjf\",\"bot\":\"AddCreate_bot__RAb1L\",\"botContent\":\"AddCreate_botContent__1X-yE\",\"backButton\":\"AddCreate_backButton__3VBGj\",\"createButton\":\"AddCreate_createButton__1HTHD\",\"joinButton\":\"AddCreate_joinButton__PrtVe\",\"input\":\"AddCreate_input__19Z_t\",\"error\":\"AddCreate_error__1NtCe\",\"alert\":\"AddCreate_alert__hktmC\",\"closebtn\":\"AddCreate_closebtn__16e5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slideIn\":\"ServerName_slideIn__1qtVQ\",\"handler\":\"ServerName_handler__2nf68\",\"serverName\":\"ServerName_serverName__rb49u\",\"contextMenu\":\"ServerName_contextMenu__2KWx1\",\"contextButton\":\"ServerName_contextButton__1wLLp\",\"leave\":\"ServerName_leave__1B4tG\",\"normalContext\":\"ServerName_normalContext__1bexb\",\"leaveButton\":\"ServerName_leaveButton__UO8qG\",\"cancelButton\":\"ServerName_cancelButton__2Jm7g\",\"inviteInput\":\"ServerName_inviteInput__1bp_r\",\"errorBorder\":\"ServerName_errorBorder__163yc\",\"doneButton\":\"ServerName_doneButton__k5C5r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"Overview_handler__srLRI\",\"titleExit\":\"Overview_titleExit__3w42h\",\"title\":\"Overview_title__3jL07\",\"exitButton\":\"Overview_exitButton__1sL2g\",\"overview\":\"Overview_overview__2_X2e\",\"subTitle\":\"Overview_subTitle__9ww3Y\",\"inputHandler\":\"Overview_inputHandler__GM9DX\",\"input\":\"Overview_input__1QDUQ\",\"buttonHandler\":\"Overview_buttonHandler__XEZaG\",\"saveButton\":\"Overview_saveButton__1RT8o\",\"errorBorder\":\"Overview_errorBorder__3zNkw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"PopupUserProfile_popup__3DEOv\",\"handler\":\"PopupUserProfile_handler__1uWaF\",\"top\":\"PopupUserProfile_top__YlU-a\",\"topContent\":\"PopupUserProfile_topContent__10Gik\",\"space\":\"PopupUserProfile_space__3vMpr\",\"userNameCode\":\"PopupUserProfile_userNameCode__2mz50\",\"username\":\"PopupUserProfile_username__11RUm\",\"userCode\":\"PopupUserProfile_userCode__3vZDe\",\"navBar\":\"PopupUserProfile_navBar__3676t\",\"navBarContent\":\"PopupUserProfile_navBarContent__uw_0A\",\"navButton\":\"PopupUserProfile_navButton__zCs4L\",\"navActive\":\"PopupUserProfile_navActive__Dx2ym\",\"bot\":\"PopupUserProfile_bot__2ce5b\",\"botContent\":\"PopupUserProfile_botContent__3Fe6j\",\"addFriend\":\"PopupUserProfile_addFriend__2IK62\",\"addedFriend\":\"PopupUserProfile_addedFriend__ukQ0i\"};","import React, { useState } from \"react\";\r\n\r\nconst ServerContext = React.createContext({});\r\n\r\n\r\nexport const CurrentServer = ({ children }) => {\r\n    const [currentFriendsPanel, setCurrentFriendsPanel] = useState({});\r\n\r\n    const setServer = (values) => {\r\n        setCurrentFriendsPanel(values)\r\n    };\r\n    return (\r\n        <ServerContext.Provider value={{ activeServer: currentFriendsPanel, setServer  }} >\r\n            {children}\r\n        </ServerContext.Provider>\r\n    );\r\n};\r\n\r\nexport const ServerConsumer = ServerContext.Consumer;\r\n\r\nexport default ServerContext;","import React, { useState } from \"react\";\n\nconst ServerListContext = React.createContext([]);\n\n\nexport const ServersList = ({ children }) => {\n    const [serversList, setCurrentChannel] = useState([]);\n    const setServers = (values) => {\n        setCurrentChannel(values)\n    };\n    return (\n        <ServerListContext.Provider value={{ serverList: serversList, setServers }} >\n            {children}\n        </ServerListContext.Provider>\n    );\n};\n\nexport const ServerListConsumer = ServerListContext.Consumer;\n\nexport default ServerListContext;","const config = {\r\n    TopBar: false,\r\n    APIUrl: \"https://192.168.0.111:8080\", // http://urApiLink:port without '/' at end !\r\n    eventSocket: 'https://192.168.0.111:8008',\r\n}\r\n\r\nexport default config","import config from \"../config\"\r\n\r\nconst GET = async (requestUrl, params = {}, authorization = null) => {\r\n    let header = new Headers();\r\n    if (authorization) {\r\n        header.set('Authorization', authorization)\r\n    }\r\n    let url = new URL(`${config.APIUrl}/${requestUrl}`)\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\r\n    try {\r\n        let request = await fetch(url.toString(), {\r\n            method: \"GET\",\r\n            mode: 'cors',\r\n            headers: header,\r\n        })\r\n        return await request.json()\r\n    } catch (e) {\r\n        return {error: e}\r\n    }\r\n}\r\n\r\n\r\nconst POST = async (requestUrl, params, authorization = null, body=null) => {\r\n    let header = new Headers();\r\n    if (authorization) {\r\n        header.set('Authorization', authorization)\r\n    }\r\n    let url = new URL(`${config.APIUrl}/${requestUrl}`)\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\r\n    try {\r\n        let request = await fetch(url.toString(), {\r\n            method: \"POST\",\r\n            mode: 'cors',\r\n            headers: header,\r\n            body:body\r\n        })\r\n        return await request.json()\r\n    } catch (e) {\r\n        return {error: e}\r\n    }\r\n}\r\n\r\nconst DELETE = async (requestUrl, params, authorization = null) => {\r\n    let header = new Headers();\r\n    if (authorization) {\r\n        header.set('Authorization', authorization)\r\n    }\r\n    let url = new URL(`${config.APIUrl}/${requestUrl}`)\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\r\n    try {\r\n        let request = await fetch(url.toString(), {\r\n            method: \"DELETE\",\r\n            mode: 'cors',\r\n            headers: header,\r\n        })\r\n        return await request.json()\r\n    } catch (e) {\r\n        return {error: e}\r\n\r\n    }\r\n}\r\n\r\nconst PUT = async (requestUrl, params, authorization = null, body=null) => {\r\n    let header = new Headers();\r\n    if (authorization) {\r\n        header.set('Authorization', authorization)\r\n    }\r\n    let url = new URL(`${config.APIUrl}/${requestUrl}`)\r\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\r\n    try {\r\n        let request = await fetch(url.toString(), {\r\n            method: \"PUT\",\r\n            mode: 'cors',\r\n            headers: header,\r\n            body:body\r\n        })\r\n        return await request.json()\r\n    } catch (e) {\r\n        return {error: e}\r\n\r\n    }\r\n}\r\n\r\n\r\nexport {GET, POST, PUT, DELETE}","import React, {useContext, useState} from 'react';\nimport style from \"./AddCreate.module.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faLongArrowAltLeft} from \"@fortawesome/free-solid-svg-icons\";\nimport ServerListContext from \"../ContextProvider/ServerList\";\nimport {POST} from \"../Util/fetcher\";\nimport {useCookies} from \"react-cookie\";\nimport {useHistory} from \"react-router-dom\"\n\nfunction AddServer({back, close}) {\n    const [{Authorization}] = useCookies()\n    const [error, setError] = useState('')\n    const [name, setName] = useState('')\n    const {serverList, setServers} = useContext(ServerListContext);\n    const history = useHistory()\n\n    const createServer = (e) => {\n        e.preventDefault()\n        if (!name) return setError('Server name required')\n        POST(`server`, {name}, Authorization).then(({error, id, serverName}) => {\n            if (!error) {\n                setServers([...serverList, {id, logoUrl: 'default', name: serverName}])\n                history.push(`/${id}`)\n                close()\n            } else {\n                setError(`${(error[0]) ? error[0].toUpperCase(): 'error'}${(error[0])?error.slice(1, error.length):''}`)\n            }\n        })\n    }\n\n    return (\n\n        <div className={style.popupHandler}>\n\n            <div className={style.top}>\n                <div className={style.title}>\n                    <p>CREATE YOUR SERVER</p>\n                </div>\n                <form onSubmit={createServer}>\n                    <div className={style.topContent}>\n                        <p style={{fontWeight: 700, fontSize: '11px'}}>SERVER NAME: </p>\n                        <input value={name} onChange={(e) => setName(e.target.value)} type={'text'}\n                               className={`${style.input} ${(error) ? style.error : null}`}/>\n                    </div>\n                </form>\n                {(error) ?\n                    <div className={`${style.alert}`}>\n                        <span className={style.closebtn} onClick={() => setError('')}>&times;</span>\n                        {error}\n                    </div>\n                    : null\n                }\n            </div>\n\n\n            <div className={style.bot}>\n                <div className={style.botContent}>\n                    <button type={\"button\"} onClick={back} className={style.backButton}>\n                        <FontAwesomeIcon icon={faLongArrowAltLeft}/>\n                        <p style={{marginLeft: 5}}>BACK</p>\n                    </button>\n                    <button className={style.createButton} type={\"submit\"} onClick={createServer}>Create</button>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default AddServer;","import React, {useContext, useState} from 'react';\nimport style from \"./AddCreate.module.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faLongArrowAltLeft} from \"@fortawesome/free-solid-svg-icons\";\nimport {useCookies} from \"react-cookie\";\nimport ServerListContext from \"../ContextProvider/ServerList\";\nimport {useHistory} from \"react-router-dom\";\nimport {POST} from \"../Util/fetcher\";\n\nfunction JoinServer({back, close}) {\n    const [{Authorization}] = useCookies()\n    const [error, setError] = useState('')\n    const [invitation, setInvitation] = useState('')\n    const {serverList, setServers} = useContext(ServerListContext);\n    const history = useHistory()\n\n    const joinServer = (e) => {\n        e.preventDefault()\n        if (!invitation) return setError('Invitation required')\n        POST(`server/join`, {invitation}, Authorization).then(({error, serverName, logoUrl, id}) => {\n            if (!error) {\n                (serverList[0])?setServers([...serverList, {id, logoUrl: logoUrl, name: serverName}]):setServers([{id, logoUrl: logoUrl, name: serverName}])\n                history.push(`/${id}`)\n                close()\n            } else {\n                setError(`${(error[0]) ? error[0].toUpperCase(): 'error'}${(error[0])?error.slice(1, error.length):''}`)\n            }\n        })\n    }\n\n    return (\n        <div className={style.popupHandler}>\n            <div className={style.top}>\n                <div className={style.title} style={{color: '#27AE60'}}>\n                    <p>JOIN A SERVER</p>\n                </div>\n                <form onSubmit={joinServer}>\n                    <div className={style.topContent}>\n\n                        <p style={{fontWeight: 700, fontSize: '11px'}}>INVITATION: </p>\n                        <input type={'text'} value={invitation} onChange={(e) => setInvitation(e.target.value)} className={`${style.input} ${(error) ? style.error : null}`}/>\n                    </div>\n                </form>\n                {(error) ?\n                    <div className={`${style.alert}`}>\n                        <span className={style.closebtn} onClick={() => setError('')}>&times;</span>\n                        {error}\n                    </div>\n                    : null\n                }\n            </div>\n            <div className={style.bot}>\n                <div className={style.botContent}>\n                    <button onClick={back} className={style.backButton}>\n                        <FontAwesomeIcon icon={faLongArrowAltLeft}/>\n                        <p style={{marginLeft: 5}}>BACK</p>\n                    </button>\n                    <button className={style.joinButton} onClick={joinServer}>Join</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default JoinServer;","import React, {useState} from 'react';\nimport style from \"./CreateJoinServer.module.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faSignInAlt, faPlusSquare} from \"@fortawesome/free-solid-svg-icons\";\nimport AddServer from \"./AddServer\";\nimport JoinServer from \"./JoinServer\";\n\nfunction CreateJoinServer({outside}) {\n    const [type, setType] = useState(0)\n    const closePopup = (e) => {\n        if (e) {\n            e.preventDefault();\n            if (e.currentTarget === e.target) {\n                outside()\n            }\n        }else{\n            outside()\n        }\n    }\n    return (\n        <div className={style.popup} onClick={closePopup}>\n            {(!type) ?\n                <div className={style.popupHandler}>\n                    <div className={style.title}>Join or create a server</div>\n                    <div className={style.content}>\n                        <div className={style.joinCreate} onClick={() => setType(1)}>\n                            <p style={{margin: 0}}><span style={{fontWeight: 700}}>Create</span> a server</p>\n                            <FontAwesomeIcon className={style.icons} icon={faPlusSquare}/>\n                            <button className={style.create}>Create server</button>\n                        </div>\n                        <div className={style.joinCreate} onClick={() => setType(2)}>\n                            <p style={{margin: 0}}><span style={{fontWeight: 700}}>Join</span> a server</p>\n                            <FontAwesomeIcon className={style.icons} icon={faSignInAlt}/>\n                            <button className={style.join}>Join server</button>\n                        </div>\n                    </div>\n                </div> :\n                (type - 1) ? <JoinServer close={closePopup} back={() => setType(0)}/> :\n                    <AddServer close={closePopup} back={() => setType(0)}/>\n            }\n        </div>\n    );\n}\n\nexport default CreateJoinServer;","import React from 'react';\nimport style from \"./ServerButton.module.css\";\nimport config from \"../config\";\n\nfunction ServerLogo({active, name, logoUrl}) {\n    return (\n        (logoUrl === 'default' || !logoUrl) ?\n            <>\n                <div className={`${style.dm} ${((active) ? style.active : null)}`}>\n                    {name[0].toUpperCase()}\n                </div>\n            </> :\n            <img className={(active) ? style.active : style.image} src={`${config.APIUrl}${logoUrl}`} width={\"48\"} height={\"48\"} alt={\"\"}/>\n    );\n}\n\nexport default ServerLogo;","import React, {useContext, useState} from 'react';\r\nimport style from './ServerButton.module.css'\r\nimport Tippy from '@tippyjs/react';\r\nimport {Link} from 'react-router-dom'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faInbox} from \"@fortawesome/free-solid-svg-icons\";\r\nimport 'tippy.js/dist/tippy.css';\r\nimport '../tippy.css';\r\nimport serverContext from '../ContextProvider/CurrentServer'\r\nimport CreateJoinServer from \"../CreateJoinServer/CreateJoinServer\";\r\nimport ServerLogo from \"./ServerLogo\";\r\n\r\nconst ServerButton = ({serverId, serverName, src, dm, addServer, changeServer}) => {\r\n    const {activeServer} = useContext(serverContext);\r\n    const [serverPopup, setServerPopup] = useState(false)\r\n\r\n    if (addServer) {\r\n        return (\r\n            <>\r\n                {(serverPopup) ? <CreateJoinServer outside={() => setServerPopup(false)}/> : null}\r\n                <Tippy\r\n                    animation={false}\r\n                    content={(serverName.length > 30) ? `${serverName.substring(0, 30)}...` : serverName}\r\n                    placement={'right'}\r\n                    className={\"serverTips\"}\r\n                    arrow={true}\r\n                >\r\n                    <div className={style.button}>\r\n                        <div className={`${style.dm} ${style.addServer}`} onClick={() => setServerPopup(true)}>\r\n                            <p className={style.addServerCross}>+</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Tippy>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const serverButt = () => {\r\n        return (\r\n            <div className={style.button}>\r\n                {(dm != null) ?\r\n                    <div className={`${style.dm} ${((activeServer.id === serverId) ? style.active : null)}`}>\r\n                        <FontAwesomeIcon color={\"white\"} icon={faInbox}/>\r\n                    </div>\r\n                    : ServerLogo({active: (activeServer.id === serverId), name: serverName, logoUrl: src})\r\n\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Tippy\r\n            animation={false}\r\n            content={(serverName.length > 30) ? `${serverName.substring(0, 30)}...` : serverName}\r\n            placement={'right'}\r\n            className={\"serverTips\"}\r\n            arrow={true}\r\n        >\r\n            {(activeServer.id === serverId) ?\r\n                serverButt()\r\n                :\r\n                <Link to={`/${serverId}`} style={{textDecoration: 'none'}} className={style.serverButton} onClick={() => changeServer(serverId)}>\r\n                    {serverButt()}\r\n                </Link>\r\n            }\r\n\r\n        </Tippy>\r\n    );\r\n}\r\nexport default ServerButton;","import React, { useState } from \"react\";\n\nconst ChannelsContext = React.createContext( []);\n\n\nexport const ChannelsList = ({ children }) => {\n  const [currentChannels, setCurrentChannel] = useState( []);\n  const setChannels = (values) => {\n    setCurrentChannel(values);\n  };\n  return <ChannelsContext.Provider value={{ channelsList: currentChannels, setChannels }}>{children}</ChannelsContext.Provider>;\n};\n\nexport const ChannelConsumer = ChannelsContext.Consumer;\n\nexport default ChannelsContext;\n","import React, { useState } from \"react\";\n\nconst usersListContext = React.createContext({\n  id: \"@me\",\n});\n\n\nexport const UsersList = ({ children, activeChannel }) => {\n  const [currentChannel, setCurrentChannel] = useState({\n    id: \"@me\",\n  });\n  const setUsersList = (values) => {\n    setCurrentChannel(values);\n  };\n  return <usersListContext.Provider value={{ usersList: currentChannel, setUsersList }}>{children}</usersListContext.Provider>;\n};\n\nexport const ChannelConsumer = usersListContext.Consumer;\n\nexport default usersListContext;\n","import React, { useState } from \"react\";\n\nconst UserContext = React.createContext({});\n\n\nexport const CurrentUser = ({ children}) => {\n    const [currentUser, setCurrentUser] = useState({});\n\n    const setUser = (values) => {\n        setCurrentUser(values)\n    };\n    return (\n        <UserContext.Provider value={{ currentUser, setUser }} >\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nexport const UserConsumer = UserContext.Consumer;\n\nexport default UserContext;","import React, {useState} from \"react\";\r\n\r\nconst ChannelContext = React.createContext({\r\n    id: \"@me\",\r\n});\r\n\r\nexport const CurrentChannel = ({children, activeChannel}) => {\r\n    const [currentChannel, setCurrentChannel] = useState({\r\n        id: \"@me\",\r\n    });\r\n    const setChannel = (values) => {\r\n        setCurrentChannel(values);\r\n    };\r\n    return <ChannelContext.Provider value={{activeChannel: currentChannel, setChannel}}>{children}</ChannelContext.Provider>;\r\n};\r\n\r\nexport const ChannelConsumer = ChannelContext.Consumer;\r\n\r\nexport default ChannelContext;\r\n","import React, { useState } from \"react\";\n\nconst MessageContext = React.createContext([]);\n\n\n\nexport const CurrentMessage = ({ children, Messages }) => {\n    const [currentMessages, setMessage] = useState([]);\n    const setMessages = (values) => {\n        setMessage(values)\n    };\n    return (\n        <MessageContext.Provider value={{ messages: currentMessages, setMessages }} >\n            {children}\n        </MessageContext.Provider>\n    );\n};\n\nexport const MessageConsumer = MessageContext.Consumer;\n\nexport default MessageContext;","import React, { useState } from \"react\";\n\nconst VoiceUsersContext = React.createContext([]);\n\n\nexport const VoiceUsers = ({ children }) => {\n  const [voiceUserList, setVoiceUserList] = useState([]);\n  const setVoiceUsers = (values) => {\n    setVoiceUserList(values);\n  };\n  return <VoiceUsersContext.Provider value={{ voiceUserList, setVoiceUsers }}>{children}</VoiceUsersContext.Provider>;\n};\n\nexport const ChannelConsumer = VoiceUsersContext.Consumer;\n\nexport default VoiceUsersContext;\n","import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport ServerButton from '../ServerButton/ServerButton';\r\nimport style from './ServerList.module.css';\r\nimport ServerListContext from '../ContextProvider/ServerList'\r\nimport {useParams, useHistory} from \"react-router-dom\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport {GET} from \"../Util/fetcher\";\r\nimport ChannelsContext from \"../ContextProvider/Server/ChannelsList\";\r\nimport UsersListContext from \"../ContextProvider/Server/UsersList\";\r\nimport UserContext from \"../ContextProvider/CurrentUser\";\r\nimport channelContext from \"../ContextProvider/CurrentChannel\";\r\nimport MessageContext from \"../ContextProvider/currentMessages\";\r\nimport serverContext from \"../ContextProvider/CurrentServer\";\r\nimport VoiceUsersContext from \"../ContextProvider/Server/VocieUsers\";\r\n\r\nconst ServerList = () => {\r\n    const [{Authorization}] = useCookies()\r\n    const {serverList, setServers} = useContext(ServerListContext);\r\n    const {setVoiceUsers} = useContext(VoiceUsersContext);\r\n    const [loaded, setLoaded] = useState(false)\r\n    const history = useHistory();\r\n\r\n\r\n    const {activeServer, setServer} = useContext(serverContext);\r\n    const {setChannels} = useContext(ChannelsContext);\r\n    const {setUsersList} = useContext(UsersListContext);\r\n    const {currentUser} = useContext(UserContext);\r\n    const {ServerID, ChannelID} = useParams();\r\n    const {setChannel} = useContext(channelContext);\r\n    const {setMessages} = useContext(MessageContext);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!loaded) {\r\n            GET('server', {}, Authorization).then((list) => {\r\n                if (list[0]) {\r\n                    setLoaded(true)\r\n                    setServers(list)\r\n                } else {\r\n                    setLoaded(true)\r\n                }\r\n            }).catch(() => {\r\n                history.push('/@me')\r\n            })\r\n        }\r\n    }, [ServerID, Authorization, loaded, history, setServers])\r\n\r\n\r\n    const changeServer = useCallback(\r\n        (serverId, ChannelID = undefined) => {\r\n            setChannels([])\r\n            setUsersList([])\r\n            setMessages([])\r\n            if (serverId !== '@me' && currentUser.id) {\r\n                GET(`server/${serverId}/voice`, {}, Authorization).then((voiceList) => {\r\n                    if(!voiceList.error){\r\n                        setVoiceUsers(voiceList)\r\n                    }\r\n                })\r\n                GET(`server/${serverId}`, {}, Authorization).then((server) => {\r\n                    if (!server.error) {\r\n                        let me = server.members.find(x => x.id === currentUser.id)\r\n                        let isAdmin = (me && (me.role === 1 || me.role === 2))\r\n                        let isOwner = (me && (me.role === 2))\r\n                        setServer(Object.assign(server, {isAdmin, isOwner}))\r\n                        let defaultText;\r\n                        if (ChannelID) {\r\n                            server.channels.some(x => {\r\n                                let check = x.channelsList.find(y => y.id === ChannelID)\r\n                                if (check) return defaultText = check\r\n                                return false\r\n                            })\r\n                        } else {\r\n                            server.channels.some(x => {\r\n                                let check = x.channelsList.find(y => y.type === 0)\r\n                                if (check) return defaultText = check\r\n                                return false\r\n                            })\r\n                        }\r\n                        setChannels(server.channels)\r\n                        setUsersList(server.members)\r\n                        if (defaultText) {\r\n                            setChannel(defaultText)\r\n                            if (!ChannelID) history.push(`/${serverId}/${defaultText.id}`)\r\n                        }\r\n                    }else {\r\n                        history.push(`/@me`)\r\n                    }\r\n                })\r\n            } else {\r\n                GET(`client/dm`, {}, Authorization).then((server) => {\r\n\r\n                    setServer({id: '@me'})\r\n                    setChannels(server)\r\n                })\r\n            }\r\n\r\n        }, [setVoiceUsers, Authorization, currentUser.id, history, setChannel, setChannels, setMessages, setServer, setUsersList])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!activeServer.id && currentUser.id) {\r\n            if (ServerID) {\r\n                setServer({id: ServerID})\r\n                changeServer(ServerID, (ChannelID) ? ChannelID : null)\r\n            } else {\r\n                setServer({id: '@me'})\r\n                changeServer('@me')\r\n            }\r\n        }\r\n    }, [changeServer, activeServer, ServerID, currentUser.id, setServer, ChannelID])\r\n\r\n\r\n    return (\r\n        <div className={style.handler}>\r\n            <div className={style.serverHandler}>\r\n                <ServerButton changeServer={changeServer} serverId={\"@me\"} serverName={\"Home\"} active dm/>\r\n                <div className={style.serverSeparator}/>\r\n                {(loaded) ?\r\n                    (serverList[0]) ?\r\n                        (serverList[0] !== 'error') ?\r\n                            serverList.map(({id, logoUrl, name}, i) => {\r\n                                return (\r\n                                    <ServerButton key={i} changeServer={changeServer} serverId={id} serverName={name} src={logoUrl}/>\r\n                                )\r\n                            }) : null : null : null\r\n                }\r\n                <ServerButton serverName={\"Add server\"} addServer/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServerList","import React from 'react';\nimport style from './Popup.module.css'\n\nfunction Popup({top, bottom, outside}) {\n    return (\n        <div className={style.popup} onClick={(e) => {\n            e.preventDefault();\n            if(e.currentTarget === e.target){\n                outside()\n            }\n        }}>\n            <div className={style.popupHandler}>\n                <div className={style.top}>\n                    {top}\n                </div>\n                <div className={style.bottom}>\n                    {bottom}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Popup;","import React, {useState} from 'react';\nimport Popup from \"../Popup/Popup\";\nimport style from '../AddChannel/AddChannel.module.css'\nimport {useParams} from \"react-router-dom\";\nimport {POST} from \"../Util/fetcher\";\nimport {useCookies} from \"react-cookie\";\n\nfunction AddCategory({outside}) {\n    const [{Authorization}] = useCookies();\n    const [name, setName] = useState('')\n    const [error, setError] = useState('')\n    const {ServerID} = useParams();\n\n    const createChannel = (e) => {\n        e.preventDefault();\n        if (!name) return setError('Category name required')\n        POST(`server/${ServerID}/category`, {name}, Authorization).then(({error, id, name}) => {\n            outside()\n            }\n        )\n    }\n\n    return (\n        <Popup outside={outside}\n               bottom={\n                   <>\n                       <button onClick={createChannel} className={style.createButton}>\n                           <p>Create category</p>\n                       </button>\n                       <button className={style.cancelButton} onClick={outside}>\n                           <p>Cancel</p>\n                       </button>\n                   </>\n               }\n               top={\n                   <div className={style.content}>\n                       <form onSubmit={createChannel}>\n                           <div className={style.titleHandler}>\n                               <p className={style.title}>CREATE CATEGORY</p>\n                           </div>\n\n                           <div className={style.form}>\n                               <p className={style.subTitle}>CATEGORY NAME</p>\n                               <div className={style.inputText}>\n                                   <input value={name} onChange={(e) => setName(e.target.value)} maxLength={100} type={'text'} className={`${style.channelName} ${(error) ? style.borderError : null}`}/>\n                                   {(error) ? <p className={style.error}>{error}</p> : null}\n                               </div>\n                           </div>\n                       </form>\n                   </div>\n               }\n\n        />\n    );\n}\n\nexport default AddCategory;","import React from 'react';\nimport style from './Settings.module.css'\n\nfunction Settings({NavBar, title, content}) {\n    return (\n        <div className={style.settings}>\n            <div className={style.navBar}>\n                <div className={style.buttonList}>\n                    <div className={style.title}><p>{title}</p></div>\n                    {NavBar}\n                </div>\n            </div>\n            <div className={style.content}>\n                {content}\n            </div>\n        </div>\n    );\n}\n\nexport default Settings;","import React from 'react';\r\nimport style from './UserLogo.module.css';\r\nimport config from \"../config\";\r\n//0: Offline, 1: Online, 2: idle, 3: DnD,\r\nconst color = ['#BDBDBD', '#27AE60', '#F2994A', '#EB5757']\r\n\r\nconst UserLogo = ({bgcolor, status, src, width}) => {\r\n\r\n    return (\r\n            <div className={style.handler}>\r\n                <img alt={\"\"} width={(width) ? width : 32} height={(width) ? width : 32} style={{borderRadius: '50%'}} src={`${config.APIUrl}${src}`}/>\r\n                {(status != null) ? <div className={style.status} style={{backgroundColor: color[status],  borderColor: bgcolor}}/> : null}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default UserLogo;","import React, {useContext, useState} from 'react';\nimport style from \"./Overview.module.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport UserLogo from \"../../UserLogo/UserLogo\";\nimport serverContext from \"../../ContextProvider/CurrentServer\";\nimport {DELETE, PUT} from \"../../Util/fetcher\";\nimport {useCookies} from \"react-cookie\";\nimport ServerListContext from \"../../ContextProvider/ServerList\";\n\nfunction Overview({exit}) {\n    const {activeServer, setServer} = useContext(serverContext);\n\n    const [{Authorization}] = useCookies();\n    const {serverList, setServers} = useContext(ServerListContext);\n\n    // Data\n    const [serverName, setServerName] = useState(activeServer.name)\n    // Error\n    const [serverNameError, setServerNameError] = useState('')\n\n    const updateServer = (e) => {\n        e.preventDefault()\n        if (serverName !== activeServer.name) {\n            if (!serverName) return setServerNameError('Server name required')\n            if (serverNameError) setServerNameError('')\n            PUT(`server/${activeServer.id}/`, {name: serverName}, Authorization).then(({error}) => {\n                if (!error) {\n                    activeServer.name = serverName\n                    serverList.some(x => {\n                        if (x.id === activeServer.id) {\n                            x.name = serverName\n                            setServers([...serverList])\n                            return true\n                        }\n                        return false\n                    })\n                    setServer({...activeServer})\n                }\n            })\n        }\n    }\n\n    const uploadImage = (event) => {\n        let form = new FormData()\n        form.append('logo', event.target.files[0])\n        PUT(`server/${activeServer.id}/logo`, {}, Authorization, form).then(({error, logoUrl}) => {\n            if (!error) {\n                activeServer.logoUrl = logoUrl\n                serverList.some(x => {\n                    if (x.id === activeServer.id) {\n                        x.logoUrl = logoUrl\n                        setServers([...serverList])\n                        return true\n                    }\n                    return false\n                })\n                setServer({...activeServer})\n            }\n        })\n    }\n\n    const deleteServerPicture = () => {\n        DELETE(`server/${activeServer.id}/logo`, {}, Authorization).then(({error}) => {\n            if (!error) {\n                activeServer.logoUrl = 'default'\n                serverList.some(x => {\n                    if (x.id === activeServer.id) {\n                        x.logoUrl = 'default'\n                        setServers([...serverList])\n                        return true\n                    }\n                    return false\n                })\n                setServer({...activeServer})\n            }\n        })\n    }\n    return (\n        <div className={style.handler}>\n            <div className={style.titleExit}>\n                <p className={style.title}>OVERVIEW</p>\n                <div className={style.exitButton} onClick={exit}>\n                    <FontAwesomeIcon icon={faTimes}/>\n                </div>\n            </div>\n            <form onSubmit={updateServer}>\n\n                <div className={style.overview}>\n                    <div style={{margin: '0 10px 0 0', display:'flex', alignItems:'center', flexDirection:'column'}}>\n\n                        <label>\n                            <input type={\"file\"} className={style.imageInput} onChange={uploadImage}/>\n                            {(activeServer.logoUrl) ?\n                                (activeServer.logoUrl === 'default') ?\n                                    <>\n                                        <div className={style.logo}>\n                                            {activeServer.name[0].toUpperCase()}\n                                        </div>\n                                    </>\n                                    : <div className={style.logo}>\n                                        <UserLogo width={128} src={activeServer.logoUrl}/>\n                                    </div>\n                                : null\n                            }\n                            <div className={style.changeAvatar}>\n                                <p>CHANGE</p>\n                                <p>AVATAR</p>\n                            </div>\n                        </label>\n                        <div className={style.deleteServerPicture} onClick={deleteServerPicture}>REMOVE</div>\n                    </div>\n                    <div style={{padding: '5px 0', display: 'flex', flexDirection: 'column', justifyContent: 'center', width: '100%', position: 'relative'}}>\n                        <div className={style.changeName}>\n                            <div style={{position: \"absolute\", top: 30, fontSize: 13, color: '#828282', fontWeight: 900}}>SERVER NAME:</div>\n                            <div className={`${style.inputHandler} ${(serverNameError) ? style.errorBorder : null}`}>\n                                <input value={serverName} onChange={(e) => setServerName(e.target.value)} type={\"text\"} className={style.input}/>\n                            </div>\n                            {(serverNameError) ? <p style={{color: \"#EB5757\", lineHeight: 0}}>{serverNameError}</p> : null}\n\n                        </div>\n                        <div style={{position: 'absolute', bottom: 0, right: 0}}>\n                            <button className={style.save} type={\"submit\"}>Save</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n\n        </div>\n    );\n}\n\nexport default Overview;","import React from 'react';\nimport style from './BansHandler.module.css'\nimport UserLogo from \"../../../UserLogo/UserLogo\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction BansHandler({name, code, logoUrl, id,author, authorLogo, authorCode, removeBan}) {\n    return (\n        <div className={style.handler}>\n            <div className={style.banned}>\n                <UserLogo width={35} src={`${logoUrl}`}/>\n                <p>{(name.length > 30)? `${name.substr(0,30)}...`:name}#{code.toString().padStart(4,'0')}</p>\n            </div>\n           <div className={style.banned}>\n               <p style={{marginRight:5}}>Banned by: </p>\n               <UserLogo width={35} src={`${authorLogo}`}/>\n               <p>{(author.length > 30)? `${author.substr(0,30)}...`:author}#{authorCode.toString().padStart(4,'0')}</p>\n           </div>\n            <div className={style.removeBan} onClick={() => removeBan(id)}>\n                <FontAwesomeIcon icon={faTimes}/>\n            </div>\n        </div>\n    );\n}\n\nexport default BansHandler;","import React, {useContext, useEffect, useState} from 'react';\nimport BansHandler from \"./BansComponent/BansHandler\";\nimport style from \"./Overview.module.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {DELETE, GET} from \"../../Util/fetcher\";\nimport serverContext from \"../../ContextProvider/CurrentServer\";\nimport {useCookies} from \"react-cookie\";\nimport {Scrollbars} from \"react-custom-scrollbars\";\n\nfunction Bans({exit}) {\n    const [banList, setBanList] = useState([])\n    const {activeServer} = useContext(serverContext);\n    const [{Authorization}] = useCookies();\n\n    useEffect(() => {\n        GET(`server/${activeServer.id}/bans`, {}, Authorization).then((bans) => {\n            setBanList(bans)\n        })\n    }, [Authorization, activeServer.id])\n\n    const removeBan = (id) => {\n        DELETE(`server/${activeServer.id}/bans/${id}`, {}, Authorization).then(({error}) => {\n            if (!error) {\n                banList.some((x, i) => {\n                    if (x.banned.id === id) {\n                        banList.splice(i, 1)\n                        setBanList([...banList])\n                        return true\n                    }\n                    return false\n                })\n            }\n        })\n\n    }\n\n    return (\n        <div className={style.handler}>\n            <div className={style.titleExit}>\n                <p className={style.title}>BANS</p>\n                <div className={style.exitButton} onClick={exit}>\n                    <FontAwesomeIcon icon={faTimes}/>\n                </div>\n            </div>\n            <Scrollbars autoHide style={{flex: 1}}>\n                <div style={{marginRight: 36, height: \"100%\", padding: '15px 0'}}>\n                    {banList[0] ?\n                        banList.map((ban, i) => (\n                            <BansHandler key={i}\n                                         name={ban.banned.username}\n                                         code={ban.banned.userCode}\n                                         logoUrl={ban.banned.logoUrl}\n                                         id={ban.banned.id}\n                                         author={ban.author.username}\n                                         authorLogo={ban.author.logoUrl}\n                                         authorCode={ban.author.userCode}\n                                         removeBan={removeBan}\n                            />\n\n                        )) : <div style={{color: '#FFFFFF', fontWeight: 900}}>Nothing to show</div>\n                    }\n                </div>\n            </Scrollbars>\n        </div>\n    );\n}\n\nexport default Bans;\n\n","import React from 'react';\nimport style from '../BansComponent/BansHandler.module.css'\nimport UserLogo from \"../../../UserLogo/UserLogo\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction InvitesHandler({name, code, logoUrl, invite, date, removeInvite}) {\n    return (\n        <div className={style.handler}>\n            <div className={style.banned}>\n                <UserLogo width={35} src={`${logoUrl}`}/>\n                <p>{(name.length > 30)? `${name.substr(0,30)}...`:name}#{code.toString().padStart(4,'0')}</p>\n            </div>\n           <div className={style.banned} style={{flex: 1}}>\n               <p>{invite}</p>\n           </div>\n            <div className={style.banned}>\n                <p>Creation date: {new Date(date).toLocaleDateString('en-EN', {\n                    day: 'numeric',\n                    month: 'numeric',\n                    year: 'numeric',\n                    hour: 'numeric',\n                    hour12: false,\n                    minute: 'numeric',\n                    second: 'numeric'\n                })}</p>\n           </div>\n            <div className={style.removeBan} onClick={() => removeInvite(invite)}>\n                <FontAwesomeIcon icon={faTimes}/>\n            </div>\n        </div>\n    );\n}\n\nexport default InvitesHandler;","import React, {useContext, useEffect, useState} from 'react';\nimport style from \"./Overview.module.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {DELETE, GET} from \"../../Util/fetcher\";\nimport serverContext from \"../../ContextProvider/CurrentServer\";\nimport {useCookies} from \"react-cookie\";\nimport InvitesHandler from \"./InvitesCoponent/InvitesHandler\";\nimport {Scrollbars} from \"react-custom-scrollbars\";\n\nfunction Invites({exit}) {\n    const [InvitesList, setInvitesList] = useState([])\n    const {activeServer} = useContext(serverContext);\n    const [{Authorization}] = useCookies();\n\n    useEffect(() => {\n        GET(`server/${activeServer.id}/invites/all`, {}, Authorization).then((invites) => {\n            setInvitesList(invites)\n        })\n    }, [Authorization, activeServer.id])\n\n    const removeInvite = (id) => {\n        DELETE(`server/${activeServer.id}/invites/`, {invite:id}, Authorization).then(({error}) => {\n            if (!error) {\n                InvitesList.some((x, i) => {\n                    if (x.invite === id) {\n                        InvitesList.splice(i, 1)\n                        setInvitesList([...InvitesList])\n                        return true\n                    }\n                    return false\n                })\n            }\n        })\n\n    }\n\n    return (\n\n            <div className={style.handler}>\n                <div className={style.titleExit}>\n                    <p className={style.title}>BANS</p>\n                    <div className={style.exitButton} onClick={exit}>\n                        <FontAwesomeIcon icon={faTimes}/>\n                    </div>\n                </div>\n                <Scrollbars autoHide style={{flex:1}}>\n\n                <div style={{marginRight: 36, height: \"100%\", padding: '15px 0'}}>\n\n                    {InvitesList[0] ?\n                        InvitesList.map((invite, i) => (\n                            <InvitesHandler key={i}\n                                            name={invite.username}\n                                            code={invite.userCode}\n                                            logoUrl={invite.logoUrl}\n                                            invite={invite.invite}\n                                            date={invite.date}\n                                            removeInvite={removeInvite}\n                            />\n\n                        )) : <div style={{color: '#FFFFFF', fontWeight: 900}}>Nothing to show</div>\n                    }\n\n                </div>\n                </Scrollbars>\n\n            </div>\n\n    );\n}\n\nexport default Invites;","import React, {useContext, useEffect, useState} from 'react';\nimport Settings from \"../../Settings/Settings\";\nimport style from \"./ServerSettings.module.css\";\nimport serverContext from \"../../ContextProvider/CurrentServer\";\nimport Overview from \"./Overview\";\nimport Bans from \"./Bans\";\nimport Invites from \"./Invites\";\n\nfunction ServerSettings({exit}) {\n    const {activeServer} = useContext(serverContext);\n    const [currentMenu, setCurrentMenu] = useState(0)\n\n    useEffect(() => {\n        const exitSettings = (event) =>  {\n            if(event.keyCode === 27){\n                exit()\n            }\n        }\n        window.addEventListener('keyup', exitSettings);\n        return () => {\n            window.removeEventListener('keyup', exitSettings);\n        };\n    }, [exit]);\n\n    return (\n        <Settings\n            title={activeServer.name}\n            NavBar={\n                <>\n                    <button onClick={() => (currentMenu !== 0) ? setCurrentMenu(0) : null} className={`${style.navButton} ${(currentMenu === 0) ? style.activeNav : null}`}>Overview</button>\n                    <button onClick={() => (currentMenu !== 1) ? setCurrentMenu(1) : null} className={`${style.navButton} ${(currentMenu === 1) ? style.activeNav : null}`}>Bans</button>\n                    <button onClick={() => (currentMenu !== 2) ? setCurrentMenu(2) : null} className={`${style.navButton} ${(currentMenu === 2) ? style.activeNav : null}`}>Invites</button>\n                </>\n            }\n            content={\n                [Overview({exit}), Bans({exit}), Invites({exit})][currentMenu]\n            }\n        />\n    );\n}\n\nexport default ServerSettings;","import React from 'react';\nimport {useCookies} from \"react-cookie\";\nimport {DELETE} from \"../../Util/fetcher\";\nimport style from './ManageInvite.module.css'\nimport {Scrollbars} from \"react-custom-scrollbars\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nfunction ManageInvite(id, inviteList, setInviteList, setInvite) {\n\n\n    const [{Authorization}] = useCookies();\n\n    const deleteInvite = (invite) => {\n        if(inviteList.length === 1) return false\n        DELETE(`server/${id}/invites`, {invite}, Authorization).then(({error})=> {\n            if(!error){\n                inviteList.some((x,i) => {\n                    if(x.invite === invite){\n                        inviteList.splice(i,1)\n                        if(inviteList[0])setInvite(inviteList[inviteList.length - 1].invite)\n                        setInviteList([...inviteList])\n                        return true\n                    }\n                    return false\n                })\n            }\n        })\n    }\n\n    return (\n\n\n        <div className={style.handler}>\n            <Scrollbars autoHide style={{height: \"100%\"}}>\n            {(inviteList[0])?\n                inviteList.map((x,i) => (\n                    <div key={i} className={style.invite}>\n                        <div>{x.invite}</div>\n                        <div>{new Date(x.date).toLocaleDateString('en-EN', {\n                            day: 'numeric',\n                            month: 'numeric',\n                            year: 'numeric',\n                            hour: 'numeric',\n                            hour12: false,\n                            minute: 'numeric',\n                            second: 'numeric'\n                        })}</div>\n                        <div className={style.delete} onClick={() => deleteInvite(x.invite)}>\n                            <FontAwesomeIcon icon={faTimes}/>\n                        </div>\n                    </div>\n                ))\n                :<p style={{color:'#FFFFFF'}}>No invites</p>}\n            </Scrollbars>\n        </div>\n\n    );\n}\n\nexport default ManageInvite;","import React, {useEffect, useState} from 'react';\nimport style from \"../ServerName.module.css\";\nimport Popup from \"../../Popup/Popup\";\nimport {GET, POST} from \"../../Util/fetcher\";\nimport {useCookies} from \"react-cookie\";\nimport ManageInvite from \"./ManageInvite\";\n\nfunction InvitePopup({setPopup, id}) {\n    const [lastInvite, setInvite] = useState('')\n    const [inviteList, setInviteList] = useState([])\n    const [inviteError, setInviteError] = useState('')\n    const [manage, setManage] = useState(0)\n    const [{Authorization}] = useCookies();\n\n    const createInvite = () => {\n        POST(`server/${id}/invites`, {}, Authorization).then(({invite, date, error}) => {\n            if (!error) {\n                setInviteList([...inviteList,{invite, date}])\n                setInvite(invite)\n            } else {\n                setInviteError(`${error[0].toUpperCase()}${error.slice(1, error.length)}`)\n            }\n        })\n    }\n\n    useEffect(() => {\n      if(!lastInvite || inviteList.length === 0)  GET(`server/${id}/invites`, {}, Authorization).then((invites) => {\n            if (!invites.error) {\n                if (inviteError) setInviteError('')\n                if (!invites.length) {\n                    POST(`server/${id}/invites`, {}, Authorization).then((invite) => {\n                        setInviteList([invite])\n                        setInvite(invite.invite)\n                    })\n                } else {\n                    setInviteList(invites)\n                    setInvite(invites[invites.length - 1].invite)\n                }\n            } else {\n                setInviteError(`${invites.error[0].toUpperCase()}${invites.error.slice(1, invites.error.length)}`)\n            }\n        })\n    }, [Authorization, id, inviteError, inviteList.length, lastInvite])\n\n    return (\n        <Popup\n            outside={() => setPopup(false)}\n            bottom={\n                [\n                    <>\n                        <button\n                            className={style.doneButton}\n                            onClick={() => setPopup(false)}>\n                            <p>DONE</p>\n                        </button>\n                        <button\n                            className={style.doneButton}\n                            onClick={() => createInvite()}>\n                            <p>New invite</p>\n                        </button>\n                        <button\n                            className={style.doneButton}\n                            onClick={() =>setManage(1)}>\n                            <p>Manage invite</p>\n                        </button>\n                    </>,\n                    <>\n                        <button\n                            className={style.cancelButton}\n                            onClick={() => setManage(0)}>\n                            <p>Back</p>\n                        </button>\n                    </>\n                ][manage]\n            }\n            top={\n                [<div style={{width: '100%'}}>\n                    <p style={{color: '#FFFFFF', fontSize: '12px', fontWeight: 900}}>\n                        INVITATION :\n                    </p>\n                    <input className={`${style.inviteInput} ${(inviteError) ? style.errorBorder : null}`} type={'text'} value={lastInvite} readOnly/>\n                    <div style={{fontSize: '13px', color: '#EB5757'}}>{inviteError}</div>\n                </div>,\n                    ManageInvite(id, inviteList, setInviteList, setInvite)\n                ][manage]\n            }/>\n    );\n}\n\nexport default InvitePopup;","import React, {useContext, useState} from 'react';\r\nimport Tippy from '@tippyjs/react/headless';\r\nimport style from './ServerName.module.css'\r\nimport ServerContext from \"../ContextProvider/CurrentServer\";\r\nimport Popup from \"../Popup/Popup\";\r\nimport AddCategory from \"../AddCategory/AddCategory\";\r\nimport ServerSettings from \"./ServerSettings/ServerSettings\";\r\nimport InvitePopup from \"./invitePopup/InvitePopup\";\r\n\r\nconst ServerName = ({name, type, leaveServer, deleteServer}) => {\r\n    const {activeServer} = useContext(ServerContext);\r\n    const [addCategory, setAddCategory] = useState(false)\r\n    const [popup, setPopup] = useState(false)\r\n    //0: Nothing, 1: invite, 2: leave, 3: delete\r\n    const [popupType, setPopupType] = useState(0)\r\n    const [instance, setInstance] = useState()\r\n    const [serverSettings, setServerSettings] = useState(false)\r\n\r\n    const leaveServerFnct = () => {\r\n        instance.hide()\r\n        setPopupType(3)\r\n        setPopup(true)\r\n    }\r\n    const deleteServerFnct = () => {\r\n        instance.hide()\r\n        setPopupType(2)\r\n        setPopup(true)\r\n    }\r\n\r\n    const invitePopup = () => {\r\n        instance.hide()\r\n        setPopupType(1)\r\n        setPopup(true)\r\n    }\r\n\r\n    if (!type) {\r\n        return (\r\n            <div className={style.handler}>\r\n                <div className={style.serverName}>\r\n                    <p>{name}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (<>\r\n                {(addCategory) ? <AddCategory outside={() => setAddCategory(false)} />:null}\r\n                {(serverSettings && activeServer.name) ? <ServerSettings exit={() => setServerSettings(false)} />:null}\r\n                {(popup) ?\r\n                    (popupType === 2 || popupType === 3) ?\r\n                        <Popup outside={() => setPopup(false)}\r\n                               bottom={\r\n                                   <>\r\n                                       <button className={style.leaveButton}\r\n                                               onClick={() => {\r\n                                                   setPopup(false)\r\n                                                   if (popupType === 2) {\r\n                                                       deleteServer(activeServer.id)\r\n                                                   } else {\r\n                                                       leaveServer(activeServer.id)\r\n                                                   }\r\n                                               }}\r\n                                       >\r\n                                           <p>{(popupType === 2) ? 'DELETE' : 'Leave'}</p>\r\n                                       </button>\r\n\r\n                                       <button className={style.cancelButton} onClick={() => setPopup(false)}>\r\n                                           <p>Cancel</p>\r\n                                       </button>\r\n                                   </>\r\n                               }\r\n\r\n                               top={\r\n                                   <p style={{color: '#FFFFFF', fontSize: '15px', fontWeight: 400}}>\r\n                                       Are you sure to {(popupType === 2) ?\r\n                                       <span style={{color: '#EB5757'}}>DELETE</span> : 'leave'}\r\n                                       <span style={{fontWeight: 900}}> '{(name.length > 30) ? `${name.substr(0,30)}...`:name}'</span>?\r\n                                   </p>\r\n                               }\r\n                        /> : (popupType === 1) ?\r\n                            <InvitePopup setPopup={setPopup} id={activeServer.id}/>\r\n                        : null\r\n                    : null\r\n                }\r\n                <Tippy\r\n                    trigger={'click'}\r\n                    placement={'bottom-start'}\r\n                    arrow={false}\r\n                    offset={[15,5]}\r\n                    interactive={true}\r\n                    hideOnClick={true}\r\n                    onTrigger={((instance, event) => {\r\n                        setInstance(instance)\r\n                        instance.show();\r\n                    })}\r\n                    render={(attrs, content) => (\r\n                        <div className={`${style.contextMenu} ${style.slideIn}`}>\r\n                            {(activeServer.isAdmin) ?\r\n                                <button className={`${style.normalContext} ${style.contextButton}`} onClick={() => {\r\n                                    instance.hide()\r\n                                    setServerSettings(true)\r\n                                }}>Edit server</button> : null\r\n                            }\r\n                            <button className={`${style.normalContext} ${style.contextButton}`} onClick={invitePopup}>\r\n                                Invite\r\n                            </button>\r\n                            {(activeServer.isAdmin) ?\r\n                                <button className={`${style.normalContext} ${style.contextButton}`} onClick={() => {\r\n                                    instance.hide()\r\n                                    setAddCategory(true)\r\n                                }}>Create category </button> : null\r\n                            }\r\n                            {(activeServer.isOwner) ?\r\n                                <button className={`${style.leave} ${style.contextButton}`} onClick={deleteServerFnct}>DELETE server</button> :\r\n                                <button className={`${style.leave} ${style.contextButton}`} onClick={leaveServerFnct}>Leave server</button>\r\n                            }\r\n                        </div>\r\n                    )}\r\n                >\r\n                    <div className={style.handler}>\r\n                        <div className={style.serverName}>\r\n                            {name}\r\n                        </div>\r\n                    </div>\r\n                </Tippy></>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ServerName;","import React, {useContext} from 'react';\nimport style from './StatusChanger.module.css'\nimport UserContext from \"../ContextProvider/CurrentUser\";\n\nfunction StatusChanger({statusChanger}) {\n    const {currentUser} = useContext(UserContext);\n\n\n    return (\n        <div className={style.handler}>\n                <div onClick={() => statusChanger(1)} className={`${style.select} ${(currentUser.status === 1) ? style.active : null}`}>\n                    <div style={{width: 15, height: 15, borderRadius: '50%', backgroundColor: '#27AE60'}}/>\n                    <p>Online</p>\n                </div>\n                <div onClick={() => statusChanger(2)} className={`${style.select} ${(currentUser.status === 2) ? style.active : null}`}>\n                    <div style={{width: 15, height: 15, borderRadius: '50%', backgroundColor: '#F2994A'}}/>\n                    <p>Idle</p>\n                </div>\n                <div onClick={() => statusChanger(3)} className={`${style.select} ${(currentUser.status === 3) ? style.active : null}`}>\n                    <div style={{width: 15, height: 15, borderRadius: '50%', backgroundColor: '#EB5757'}}/>\n                    <p>Do not disturb</p>\n                </div>\n                <div onClick={() => statusChanger(0)} className={`${style.select} ${(currentUser.status === 0) ? style.active : null}`}>\n                    <div style={{width: 15, height: 15, borderRadius: '50%', backgroundColor: '#BDBDBD'}}/>\n                    <p>Offline</p>\n                </div>\n            </div>\n    );\n}\n\nexport default StatusChanger;","import React, {useContext, useState} from 'react';\nimport style from './UserSettings.module.css'\nimport UserLogo from \"../../UserLogo/UserLogo\";\nimport UserContext from \"../../ContextProvider/CurrentUser\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {DELETE, PUT} from \"../../Util/fetcher\";\nimport {useCookies} from \"react-cookie\";\n\nfunction MyAccount({exit}) {\n    const {currentUser, setUser} = useContext(UserContext);\n    const [edit, setEdit] = useState(false)\n    const [{Authorization}] = useCookies();\n\n    // Value\n    const [username, setUsername] = useState(currentUser.username)\n    const [email, setEmail] = useState(currentUser.email)\n    const [password, setPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [updatePassword, setUpdatePassword] = useState(false)\n\n    // Error handler\n    const [emailError, setEmailError] = useState('')\n    const [usernameError, setUsernameError] = useState('')\n    const [passwordError, setPasswordError] = useState('')\n\n\n    const updateProfile = (e) => {\n        e.preventDefault()\n        let error = false;\n        let passError = false;\n        if (!password) {\n            setPasswordError('Password required')\n            error = true\n            passError = true\n        }\n        if (!username) {\n            setUsernameError('No username')\n            error = true\n        } else if (usernameError) setUsernameError('')\n        if (!email) {\n            setEmailError('No email')\n            error = true\n        }\n\n        if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n            setEmailError('Invalid email')\n            error = true\n        } else if (emailError) setEmailError('')\n\n        if (updatePassword && !newPassword && !passError) {\n            error = true\n            passError = true\n            setPasswordError('New password required')\n        }\n\n        if (updatePassword && newPassword === password && !passError) {\n            setPasswordError('New and old password are the same')\n            passError = true\n            error = true\n        } else if (passwordError && !passError) setPasswordError('')\n\n        if (updatePassword && newPassword.length < 5 && !passError) {\n            setPasswordError('New password is too short')\n        } else if (passwordError && !passError) setPasswordError('')\n\n        if (!error) {\n            let whatToUpdate = {username: '', email: '',}\n\n\n            if (currentUser.username !== username) whatToUpdate.username = username\n            if (currentUser.email !== email) whatToUpdate.email = email\n\n\n            PUT(`client`, {password, username: whatToUpdate.username, newpassword: newPassword, email: whatToUpdate.email}, Authorization).then(({error, errorCode, userCode}) => {\n                if (!error) {\n                    currentUser.email = email\n                    if (username) currentUser.username = username\n                    if (userCode) currentUser.userCode = userCode\n                    setUser({...currentUser})\n                    setPassword('')\n                    setNewPassword('')\n                    setEdit(false)\n                    setUpdatePassword(false)\n                } else if (error === 'unauthorized' || errorCode === 10006) {\n                    setPasswordError('Wrong password')\n                } else if (errorCode === 10002) {\n                    setPassword('')\n                    setNewPassword('')\n                    setUpdatePassword(false)\n                    setEdit(false)\n                }\n            })\n\n        }\n\n\n    }\n\n    const uploadImage = (event) => {\n        let form = new FormData()\n        form.append('logo', event.target.files[0])\n        PUT(`client/logo`, {}, Authorization, form).then(({error, logoUrl}) => {\n            if (!error) {\n                currentUser.logoUrl = logoUrl\n                setUser({...currentUser})\n            }\n        })\n    }\n\n    const deleteProfilePicture = () => {\n        DELETE(`client/logo`, {}, Authorization).then(({error}) => {\n            if (!error) {\n                currentUser.logoUrl = '/logo/default.png'\n                setUser({...currentUser})\n            }\n        })\n    }\n\n    const dm = (bool) => {\n        PUT(`client/dmable`, {dmFromEveryone:bool}, Authorization).then(({error}) => {\n            if(!error){\n                currentUser.dm = bool\n                setUser({...currentUser})\n            }\n        })\n    }\n\n    return (\n        <div className={style.handler}>\n            <div className={style.titleExit}>\n                <p className={style.title}>MY ACCOUNT</p>\n                <div className={style.exitButton} onClick={exit}>\n                    <FontAwesomeIcon icon={faTimes}/>\n                </div>\n            </div>\n            {(!edit) ?\n                <div className={style.userContainer}>\n                    <div style={{margin: '0 10px 0 0'}}>\n                        <UserLogo width={128} src={currentUser.logoUrl}/>\n                    </div>\n                    <div className={style.userInfo}>\n                        <div className={style.userInfoHandler}>\n                            <div className={style.userInfoTitle}>USERNAME</div>\n                            <div className={style.userInfoText}>{(currentUser.username) ? (currentUser.username.length > 30) ? `${currentUser.username.substr(0, 30)}...` : currentUser.username : 'loading'}#{(currentUser.userCode) ? currentUser.userCode.toString().padStart(4, '0'): '#0000'}</div>\n                        </div>\n                        <div className={style.userInfoHandler}>\n                            <div className={style.userInfoTitle}>E-MAIL</div>\n                            <div className={style.userInfoText}>{(currentUser.email)?currentUser.email:'loading...'}</div>\n                        </div>\n                    </div>\n                    <div className={style.end}>\n                        <button className={style.edit} onClick={() => setEdit(true)}>EDIT</button>\n                    </div>\n                </div>\n                :\n                <form onSubmit={updateProfile}>\n                    <div className={style.userContainer}>\n                        <div style={{margin: '0 10px 0 0', display:'flex', alignItems:'center', flexDirection:'column'}}>\n                            <label>\n                                <input type={\"file\"} className={style.imageInput} onChange={uploadImage}/>\n                                <UserLogo width={128} src={currentUser.logoUrl}/>\n                                <div className={style.changeAvatar}>\n                                    <p>CHANGE</p>\n                                    <p>AVATAR</p>\n                                </div>\n                            </label>\n                            <div className={style.deleteProfilePicture} onClick={deleteProfilePicture}>REMOVE</div>\n                        </div>\n                        <div className={style.userInfo}>\n                            <div className={style.userInfoHandler}>\n                                <div className={style.userInfoTitle}>USERNAME</div>\n                                <div className={`${style.inputHandler} ${(usernameError) ? style.errorBorder : null}`}>\n                                    <input autoComplete=\"false\" type={'text'} className={style.input} value={username} onChange={(e) => setUsername(e.target.value)} maxLength={100}/>\n                                </div>\n                                {(usernameError) ? <div className={style.errorText}>{usernameError}</div> : null}\n                            </div>\n                            <div className={style.userInfoHandler}>\n                                <div className={style.userInfoTitle}>E-MAIL</div>\n                                <div className={`${style.inputHandler} ${(emailError) ? style.errorBorder : null}`}>\n                                    <input autoComplete=\"false\" type={'text'} className={style.input} value={email} onChange={(e) => setEmail(e.target.value)}/>\n                                </div>\n                                {(emailError) ? <div className={style.errorText}>{emailError}</div> : null}\n                            </div>\n                            {(updatePassword) ?\n                                <div className={style.userInfoHandler}>\n                                    <div className={style.userInfoTitle}>NEW PASSWORD</div>\n                                    <div className={style.inputHandler}>\n                                        <input autoComplete={'new-password'} type={'password'} className={style.input} value={newPassword} onChange={(e) => setNewPassword(e.target.value)}/>\n                                    </div>\n                                </div>\n                                : null}\n                            <div className={style.userInfoHandler}>\n                                <div className={style.userInfoTitle}>CURRENT PASSWORD</div>\n                                <div className={`${style.inputHandler} ${(passwordError) ? style.errorBorder : null}`}>\n                                    <input autoComplete={'new-password'} type={'password'} className={style.input} value={password} onChange={(e) => setPassword(e.target.value)}/>\n                                </div>\n                                {(passwordError) ? <div className={style.errorText}>{passwordError}</div> : null}\n\n                            </div>\n\n                            <div style={{padding: '5px 0', display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center'}}>\n                                <div>\n                                    <button type={\"button\"} className={style.changePassword} onClick={() => setUpdatePassword(!updatePassword)}>{(!updatePassword) ? 'Change password' : 'Cancel'}</button>\n                                    <button type={\"button\"} className={`${(currentUser.dm)?style.canReceiveDM:style.changePassword}`} onClick={() => dm(!currentUser.dm)}>{(!currentUser.dm) ? 'DM: close' : 'DM: open'}</button>\n                                </div>\n                                <div>\n                                    <button type={\"button\"} className={style.cancelButton} onClick={() => {\n                                        setEdit(false)\n                                        setUpdatePassword(false)\n                                    }}><p>Cancel</p></button>\n                                    <button className={style.updateButton} type={\"submit\"}>Update</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            }\n        </div>\n    );\n}\n\nexport default MyAccount;","import React, {useContext, useEffect} from 'react';\nimport Settings from \"../../Settings/Settings\";\nimport style from './UserSettings.module.css'\nimport MyAccount from \"./MyAccount\";\nimport {useCookies} from \"react-cookie\";\nimport {useHistory} from 'react-router-dom'\nimport UserContext from \"../../ContextProvider/CurrentUser\";\nimport ServerListContext from \"../../ContextProvider/ServerList\";\nimport ServerContext from \"../../ContextProvider/CurrentServer\";\n\nfunction UserSettings({exit}) {\n    const [,,deleteCookie] = useCookies();\n    const {setUser} = useContext(UserContext);\n    const {setServers} = useContext(ServerListContext);\n    const {setServer} = useContext(ServerContext);\n\n    const history = useHistory()\n    useEffect(() => {\n        const exitSettings = (event) =>  {\n            if(event.keyCode === 27){\n                exit()\n            }\n        }\n        window.addEventListener('keyup', exitSettings);\n        return () => {\n            window.removeEventListener('keyup', exitSettings);\n        };\n    }, [exit]);\n    return (\n        <Settings\n            title={'USER SETTINGS'}\n            NavBar={\n                <>\n                    <button className={style.navButton}>My account</button>\n                    <div className={style.navSeparator}/>\n                    <button className={style.logout} onClick={() => {\n                        exit()\n                        setServers({})\n                        setServer({})\n                        setUser({})\n                        deleteCookie(\"Authorization\")\n                        history.push('/login')\n                    }}>Logout</button>\n                </>\n            }\n            content={\n                <MyAccount exit={exit}/>\n            }\n        />\n    );\n}\n\nexport default UserSettings;","import React, { useState } from \"react\";\r\n\r\nconst VoiceChannelContext = React.createContext({});\r\n\r\n\r\nexport const CurrentVoiceChannel = ({ children }) => {\r\n    const [currentVoiceChannel, setCurrentVoiceChannel] = useState({});\r\n    const setVoiceChannel = (values) => {\r\n        setCurrentVoiceChannel(values)\r\n    };\r\n    return (\r\n        <VoiceChannelContext.Provider value={{ activeVoiceChannel: currentVoiceChannel, setVoiceChannel }} >\r\n            {children}\r\n        </VoiceChannelContext.Provider>\r\n    );\r\n};\r\n\r\nexport const VoiceChannelConsumer = VoiceChannelContext.Consumer;\r\n\r\nexport default VoiceChannelContext;","import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport style from \"./VoiceStatus.module.css\";\nimport VoiceChannelContext from \"../ContextProvider/CurrentVoiceChannel\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPhoneSlash} from \"@fortawesome/free-solid-svg-icons\";\nimport {GET} from \"../Util/fetcher\";\nimport {useCookies} from \"react-cookie\";\nimport socket from \"socket.io-client\";\nimport {Device} from \"mediasoup-client\";\n\nconst voiceConnected = new Map()\n\nfunction VoiceStatus({voiceSocket,setVoiceSocket }) {\n    const {activeVoiceChannel, setVoiceChannel} = useContext(VoiceChannelContext);\n    const [currentState, setCurrentState] = useState(0);\n  //  const [voiceSocket, setVoiceSocket] = useState();\n    const [currentVoiceChannel, setCurrentVoiceChannel] = useState();\n\n\n    const [isDisconnecting, setIsDisconnecting] = useState(false);\n    const [{Authorization}] = useCookies();\n\n\n\n    const disconnect = useCallback(() => {\n        setIsDisconnecting(true)\n        if (voiceSocket) voiceSocket.disconnect()\n        setVoiceSocket(null)\n        setVoiceChannel({})\n        setCurrentState(0)\n        setIsDisconnecting(false)\n\n    }, [voiceSocket, setVoiceSocket, setVoiceChannel])\n\n    useEffect(() => {\n        (async () => {\n            let receiver;\n            let sender;\n            if (voiceSocket && activeVoiceChannel.id !== activeVoiceChannel) {\n                voiceSocket.emit(\"joinChannel\", {\n                    serverId: activeVoiceChannel.serverID,\n                    channelId: activeVoiceChannel.id,\n                    authorizationToken: Authorization,\n                });\n                voiceSocket.on(\"problem\", \"[VOICE SOCKET ERROR]: \" + console.log);\n\n                voiceSocket.removeListener(\"rtpCapabilities\");\n                voiceSocket.on(\"rtpCapabilities\", async ({routerRtpCapabilities, receiverTransportOption, senderTransportOption}) => {\n                    let device = new Device()\n                    await device.load({routerRtpCapabilities});\n                    receiver = await device.createRecvTransport(receiverTransportOption);\n                    sender = await device.createSendTransport(senderTransportOption);\n                    sender.on(\"connect\", ({dtlsParameters}, callback) => {\n                        voiceSocket.emit(\"connectMe\", {type: 0, dtlsParameters});\n                        voiceSocket.on(\"transportConnected\", callback);\n                    });\n                    sender.on(\"produce\", (producerOptions, callback) => {\n                        voiceSocket.emit(\"produceMe\", {producerOptions});\n                        voiceSocket.on(\"transportProduced\", callback);\n                    });\n                    receiver.on(\"connect\", ({dtlsParameters}, callback) => {\n                        voiceSocket.emit(\"connectMe\", {type: 1, dtlsParameters});\n                        voiceSocket.on(\"transportConnected\", callback);\n                    });\n\n\n                    voiceSocket.removeListener(\"statusUpdate\");\n                    voiceSocket.on(\"statusUpdate\", (status) => {\n                        if (status === 3) {\n                            setCurrentState(1)\n                            voiceSocket.emit(\"producerList\");\n                        }\n                    });\n\n                    voiceSocket.removeListener(\"producerList\");\n                    voiceSocket.on(\"producerList\", ([map, myId]) => {\n                        map.forEach((id) => {\n                            if (id !== myId)\n                                voiceSocket.emit(\"consumeMe\", {rtpCapabilities: device.rtpCapabilities, producerId: id})\n                        });\n                    });\n\n                    let stream = await navigator.mediaDevices.getUserMedia({\n                        audio: {\n                            echoCancellation: false,\n                        },\n                    });\n\n                    await sender.produce({\n                        track: stream.getTracks()[0],\n                    });\n                    voiceSocket.removeListener(\"newUser\");\n                    voiceSocket.on(\"newUser\", ([user, id]) => {\n                        voiceSocket.emit(\"consumeMe\", {rtpCapabilities: device.rtpCapabilities, producerId: id});\n                    });\n\n                    voiceSocket.removeListener(\"consumerProduced\");\n                    voiceSocket.on(\"consumerProduced\", async (ConsumerOptions) => {\n                        let consumer = await receiver.consume(ConsumerOptions);\n                        let audio = document.createElement(\"audio\");\n                        audio.srcObject = new MediaStream([consumer.track]);\n                        await audio.play();\n                        voiceConnected.set(ConsumerOptions.producerId, audio)\n                    });\n\n                    voiceSocket.removeListener(\"removeProducer\");\n                    voiceSocket.on(\"removeProducer\", (id) => {\n                        voiceConnected.delete(id)\n\n                    });\n\n                })\n            }\n        })()\n\n    }, [voiceSocket, setCurrentState, activeVoiceChannel, Authorization])\n\n    useEffect(() => {\n        if (!voiceSocket && !isDisconnecting && currentVoiceChannel !== activeVoiceChannel.id) {\n            GET(`channels/${activeVoiceChannel.serverID}/${activeVoiceChannel.id}/voice/connect`, {}, Authorization).then(({ip, port, error}) => {\n                if (!error) {\n                    setCurrentVoiceChannel(activeVoiceChannel.id)\n                    setVoiceSocket(socket(`https://${ip}:${port}`));\n                    setCurrentState(0)\n                }\n            })\n        } else if (voiceSocket && currentVoiceChannel !== activeVoiceChannel.id && !isDisconnecting) {\n            voiceSocket.disconnect()\n            voiceConnected.clear()\n            GET(`channels/${activeVoiceChannel.serverID}/${activeVoiceChannel.id}/voice/connect`, {}, Authorization).then(({ip, port, error}) => {\n                if (!error) {\n                    setCurrentVoiceChannel(activeVoiceChannel.id)\n                    setVoiceSocket(socket(`https://${ip}:${port}`));\n                    setCurrentState(0)\n                }\n            })\n\n        }\n    }, [setVoiceSocket, activeVoiceChannel, setVoiceChannel, Authorization, voiceSocket, setCurrentState, currentVoiceChannel, isDisconnecting]);\n\n    return (\n        <div className={style.handler}>\n            <div>\n                {currentState ? <div className={style.connected}>Connected</div> : <div className={style.connecting}>Connecting...</div>}\n                <div className={style.channelName}>@{activeVoiceChannel ? activeVoiceChannel.name : null}</div>\n            </div>\n            <div>\n                <div className={style.disconnect} onClick={disconnect}>\n                    <FontAwesomeIcon icon={faPhoneSlash}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default VoiceStatus;\n","import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport style from './UserContainer.module.css';\r\nimport UserLogo from \"../UserLogo/UserLogo\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMicrophone, faVolumeUp, faCog, faVolumeMute, faMicrophoneSlash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/dist/tippy.css';\r\nimport '../tippy.css';\r\nimport UserContext from \"../ContextProvider/CurrentUser\";\r\nimport StatusChanger from \"../StatusChanger/StatusChanger\";\r\nimport {GET, PUT} from \"../Util/fetcher\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport UserSettings from \"./UserSettings/UserSettings\";\r\nimport VoiceChannelContext from \"../ContextProvider/CurrentVoiceChannel\";\r\nimport VoiceStatus from \"../VoiceStatus/VoiceStatus\";\r\n\r\nconst UserContainer = () => {\r\n    const {currentUser, setUser} = useContext(UserContext);\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [{Authorization}] = useCookies();\r\n    const [changeStatus, setChangeStatus] = useState(false)\r\n    const [userSettings, setUserSettings] = useState(false)\r\n    const {activeVoiceChannel} = useContext(VoiceChannelContext);\r\n\r\n    const [voiceSocket, setVoiceSocket] = useState();\r\n\r\n\r\n    if (!loaded && currentUser.id) {\r\n        setLoaded(true)\r\n    }\r\n\r\n    const [isDeaf, setIsDeaf] = useState(false)\r\n    const [isMute, setIsMute] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (!currentUser.id) {\r\n            GET(`client`, {}, Authorization).then(({id, username, logoUrl, userCode, status, email, dm, error}) => {\r\n                if (!error) {\r\n                    setUser({id, username, logoUrl, userCode, status, email, dm})\r\n                }\r\n            })\r\n        }\r\n    }, [currentUser.id, Authorization, setUser])\r\n\r\n    const statusChanger = (stat) => {\r\n        PUT(`client/status`, {status: stat}, Authorization).then(({error}) => {\r\n            if (!error) {\r\n                currentUser.status = stat\r\n                setUser({...currentUser})\r\n            }\r\n            setChangeStatus(!changeStatus)\r\n        })\r\n    }\r\n\r\n    const muteMe = useCallback(() => {\r\n        setIsMute(!isMute)\r\n        if (voiceSocket) {\r\n            if (isMute) {\r\n                voiceSocket.emit('unmuteMe')\r\n            } else {\r\n                voiceSocket.emit('muteMe')\r\n            }\r\n        }\r\n    }, [setIsMute, isMute, voiceSocket])\r\n    const deafMe = useCallback(() => {\r\n        setIsDeaf(!isDeaf)\r\n        if (voiceSocket) {\r\n            if (isDeaf) {\r\n                voiceSocket.emit('undeafMe')\r\n            } else {\r\n                if (!isMute) muteMe()\r\n                voiceSocket.emit('deafMe')\r\n            }\r\n        }\r\n    }, [setIsDeaf, isDeaf, isMute, muteMe, voiceSocket])\r\n\r\n\r\n    return (\r\n        <>\r\n            {(activeVoiceChannel.id) ?\r\n                <VoiceStatus voiceSocket={voiceSocket} setVoiceSocket={setVoiceSocket}/>\r\n                : null}\r\n            {(changeStatus) ? <StatusChanger statusChanger={statusChanger} status={currentUser.status}/> : null}\r\n            {(userSettings) ? <UserSettings exit={() => setUserSettings(false)}/> : null}\r\n\r\n            <div className={style.handler}>\r\n                <div className={style.userLogo} onClick={() => setChangeStatus(!changeStatus)}>\r\n                    <UserLogo\r\n                        src={(loaded) ? currentUser.logoUrl : '/logo/default.png'}\r\n                        status={currentUser.status} bgcolor={\"#222222\"}/>\r\n                </div>\r\n                <div className={style.infoWrapper}>\r\n                    <div className={style.userInfo}>\r\n                        <p className={style.username}>{(loaded) ? (currentUser.username) : 'loading'}</p>\r\n                        <p className={style.usercode}>#{(loaded) ? (currentUser.userCode) ? (currentUser.userCode.toString().padStart(4, '0')) : '0000' : '0000'}</p>\r\n                    </div>\r\n                </div>\r\n                <div className={style.controller}>\r\n                    <Tippy content={\"Mute\"} placement={'top'} className={\"serverTips\"} animation={false} arrow={true}>\r\n                        <button className={style.controlButton} onClick={muteMe}>\r\n                            <FontAwesomeIcon color={\"white\"} icon={(!isMute) ? faMicrophone : faMicrophoneSlash}/>\r\n                        </button>\r\n                    </Tippy>\r\n                    <Tippy content={\"Deaf\"} placement={'top'} className={\"serverTips\"} animation={false} arrow={true}>\r\n                        <button className={style.controlButton} onClick={deafMe}>\r\n                            <FontAwesomeIcon color={\"white\"} icon={(!isDeaf) ? faVolumeUp : faVolumeMute}/>\r\n                        </button>\r\n                    </Tippy>\r\n                    <Tippy content={\"Settings\"} placement={'top'} className={\"serverTips\"} animation={false} arrow={true}>\r\n                        <button className={style.controlButton} onClick={() => setUserSettings(true)}>\r\n                            <FontAwesomeIcon color={\"white\"} icon={faCog}/>\r\n                        </button>\r\n                    </Tippy>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserContainer;","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faUserFriends} from '@fortawesome/free-solid-svg-icons'\r\nimport style from './FriendChannelButton.module.css'\r\n\r\nconst FriendButton = () => {\r\n\r\n    return (\r\n            <div>\r\n                <FontAwesomeIcon icon={faUserFriends} color={\"#999999\"} fontSize={18} className={style.friendsButton}/>\r\n                <p className={style.friendsText}>Friends</p>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default FriendButton;","import React, {useContext} from 'react';\r\nimport UserLogo from \"../UserLogo/UserLogo\";\r\nimport style from './FriendChannelButton.module.css'\r\nimport FriendButton from \"../FriendChannelButton/FriendButton\";\r\nimport {Link} from 'react-router-dom'\r\nimport ChannelContext from '../ContextProvider/CurrentChannel'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {DELETE} from \"../Util/fetcher\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport ChannelsContext from \"../ContextProvider/Server/ChannelsList\";\r\n\r\nconst FriendChannelButton = ({friendChannel, id, src, active, name, status, userCode}) => {\r\n    const {activeChannel, setChannel} = useContext(ChannelContext);\r\n    const [{Authorization}] = useCookies();\r\n    const history = useHistory()\r\n    const { channelsList, setChannels } = useContext(ChannelsContext);\r\n\r\n    const onClick = () => {\r\n        let channelObject = {id: id, name}\r\n        if (userCode) channelObject.code = userCode\r\n        setChannel(channelObject)\r\n    };\r\n    const removeDM = (e) => {\r\n        e.preventDefault()\r\n        DELETE(`client/dm/${id}`, {}, Authorization).then(({error}) => {\r\n            if (!error) {\r\n                if(activeChannel.id === id) setChannel({ id: \"@me\"})\r\n                setChannels([...channelsList.filter(item => item.id !== id)])\r\n            }\r\n            if (active) history.push('/@me')\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Link to={(friendChannel) ? '/@me' : '/@me/' + id} style={{textDecoration: 'none'}}>\r\n            <div onClick={onClick} className={`${((active) ? style.active : \"\")} ${style.handler} `}>\r\n                {(friendChannel) ?\r\n                    <FriendButton/>\r\n                    :\r\n                    <>\r\n                        <div className={style.nameLogo}>\r\n                            <div className={style.logo}>\r\n                                <UserLogo src={src} status={status} bgcolor={\"#343434\"}/>\r\n                            </div>\r\n                            <div className={style.username}>{name}</div>\r\n                        </div>\r\n                        <div className={style.remove} onClick={removeDM}>\r\n                            <FontAwesomeIcon icon={faTimes}/>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default FriendChannelButton;","import React from 'react';\r\nimport style from \"./ChannelList.module.css\";\r\nimport {Scrollbars} from \"react-custom-scrollbars\";\r\nimport FriendChannelButton from \"../FriendChannelButton/FriendChannelButton\";\r\nconst FriendsChannels = ({ChannelID, channels}) => {\r\n    return (\r\n        <>\r\n                <FriendChannelButton id={\"@me\"} key={0} friendChannel active={ChannelID === undefined}/>\r\n                <div className={style.dmSeparator}>\r\n                    <p>DIRECT MESSAGE: </p>\r\n                </div>\r\n                <div className={style.channelList}>\r\n                    <Scrollbars autoHide style={{height: \"100%\"}}>\r\n                        {(channels)?channels.map(({id, name, logoUrl, status, code},i) => (\r\n                            <FriendChannelButton userCode={code} key={i} name={name} active={(ChannelID === id)} id={id} src={logoUrl} status={status}/>\r\n                        )):null\r\n\r\n                        }\r\n                    </Scrollbars>\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FriendsChannels;","import React, {useContext, useState} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faAt, faHashtag, faCog} from \"@fortawesome/free-solid-svg-icons\";\r\nimport style from './ServerCategory.module.css'\r\nimport channelContext from '../ContextProvider/CurrentChannel'\r\nimport VoiceChannelContext from '../ContextProvider/CurrentVoiceChannel'\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport ServerContext from \"../ContextProvider/CurrentServer\";\r\nimport Tippy from \"@tippyjs/react/headless\";\r\nimport Popup from \"../Popup/Popup\";\r\nimport {DELETE} from \"../Util/fetcher\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport ChannelsContext from \"../ContextProvider/Server/ChannelsList\";\r\nimport VoiceUsersContext from \"../ContextProvider/Server/VocieUsers\";\r\nimport UserLogo from \"../UserLogo/UserLogo\";\r\n\r\n//Type: 0:text, 1:voice\r\n//Admin: If user  is admin show the cog for edit it.\r\n\r\nconst ServerChannel = ({channelId, type, name, categoryId, setSettings}) => {\r\n    const [{Authorization}] = useCookies();\r\n    const {activeChannel, setChannel} = useContext(channelContext);\r\n    const {activeServer} = useContext(ServerContext);\r\n    const {activeVoiceChannel, setVoiceChannel} = useContext(VoiceChannelContext);\r\n    const {ServerID} = useParams()\r\n    const [deleteCha, setDeleteCha] = useState(false)\r\n    const [instance, setInstance] = useState()\r\n    const {channelsList, setChannels} = useContext(ChannelsContext);\r\n    const {voiceUserList} = useContext(VoiceUsersContext);\r\n\r\n    const deleteChannel = () => {\r\n        DELETE(`channels/${ServerID}/${channelId}`, {}, Authorization).then(({error}) => {\r\n            if (!error) {\r\n                channelsList.some((x, i) => {\r\n                    if (x.categoryId === categoryId) {\r\n                        x.channelsList.some((z, y) => {\r\n                            if (z.id === channelId) {\r\n                                x.channelsList.splice(y, 1)\r\n                                setChannels([...channelsList])\r\n                                setDeleteCha(false)\r\n                                return true\r\n                            }\r\n                            return false\r\n                        })\r\n                        return true\r\n                    }\r\n                    return false\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const onClick = () => {\r\n        (!type) ? setChannel({id: channelId, name}) : setVoiceChannel({id: channelId, name, serverID: activeServer.id})\r\n    }\r\n\r\n\r\n    const voiceUser = (logo, username, id, key) => {\r\n        return (\r\n            <div key={key} className={style.voiceUser}>\r\n                <UserLogo src={logo} width={32} />\r\n                <div className={style.voiceUsername}>{username}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const button = () => {\r\n        return (\r\n            <div>\r\n                <div className={`${style.channel} ${((activeChannel.id === channelId || activeVoiceChannel.id === channelId) ? style.activeChannel : style.nonactiveChannel)}`}>\r\n                    <Link to={(!type) ? `/${ServerID}/${channelId}` : '#'} className={`${((activeChannel.id === channelId || activeVoiceChannel.id === channelId) ? style.activeChannel : style.nonactiveChannel)}`}>\r\n                        <div onClick={onClick} style={{height: '30px', display: 'flex', flexDirection: 'row', alignItems: 'center', textDecoration: 'none'}}>\r\n                            <FontAwesomeIcon color={'#999999'} icon={(type) ? faAt : faHashtag}/>\r\n                            <div className={style.channelName}>{name}</div>\r\n                        </div>\r\n                    </Link>\r\n                    {\r\n                        (activeServer.isAdmin) ?\r\n                            <div className={style.channelOption} onClick={(e) => {\r\n                                e.preventDefault()\r\n                                setSettings({id: channelId, type: 0, name, categoryId})\r\n                            }}>\r\n                                <FontAwesomeIcon icon={faCog}/>\r\n                            </div>\r\n                            : null\r\n                    }\r\n\r\n                </div>\r\n                <div className={style.userList}>\r\n                    {(type)?\r\n                        (voiceUserList && voiceUserList[channelId])?\r\n                            voiceUserList[channelId].map((x,i) => voiceUser(x.logoUrl, x.username, x.id, i))\r\n                            :null\r\n                    :null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    if (type) {\r\n        if (activeServer.isAdmin) {\r\n            return (\r\n                <>\r\n                    {(deleteCha) ?\r\n                        <Popup\r\n                            top={\r\n                                <p style={{color: '#FFFFFF', fontWeight: '200'}}>Are you sure you want to delete <span style={{fontWeight: 700}}>'{(name.length > 30) ? `${name.substr(0, 30)}...` : name}'</span></p>\r\n                            }\r\n                            bottom={\r\n                                <>\r\n                                    <button onClick={deleteChannel} className={style.deleteButton}>\r\n                                        <p>Delete channel</p>\r\n                                    </button>\r\n                                    <button className={style.cancelButton} onClick={() => setDeleteCha(false)}>\r\n                                        <p>Cancel</p>\r\n                                    </button>\r\n                                </>\r\n                            }\r\n                            outside={() => setDeleteCha(false)}\r\n                        />\r\n                        : null}\r\n                    <div className={`${((activeChannel.id === channelId || activeVoiceChannel.id === channelId) ? null : style.nonactiveChannel)}`}>\r\n                        <Tippy\r\n                            trigger={'contextmenu'}\r\n                            placement={'bottom'}\r\n                            offset={[5, 5]}\r\n                            arrow={false}\r\n                            hideOnClick={true}\r\n                            interactive={true}\r\n                            onTrigger={((instance, event) => {\r\n                                setInstance(instance)\r\n                                instance.show();\r\n                            })}\r\n                            render={(attrs, content) => (\r\n                                <div className={style.contextMenu}>\r\n                                    <button className={`${style.leave} ${style.contextButton}`} onClick={() => {\r\n                                        instance.hide()\r\n                                        setDeleteCha(true)\r\n                                    }}>Delete channel\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        >\r\n                            {button()}\r\n                        </Tippy>\r\n                    </div>\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                button()\r\n            );\r\n        }\r\n    } else {\r\n        if (activeServer.isAdmin) {\r\n            return (\r\n                <>\r\n                    {(deleteCha) ?\r\n                        <Popup\r\n                            top={\r\n                                <p style={{color: '#FFFFFF', fontWeight: '200'}}>Are you sure you want to delete <span style={{fontWeight: 700}}>'{(name.length > 30) ? `${name.substr(0, 30)}...` : name}'</span></p>\r\n                            }\r\n                            bottom={\r\n                                <>\r\n                                    <button onClick={deleteChannel} className={style.deleteButton}>\r\n                                        <p>Delete channel</p>\r\n                                    </button>\r\n                                    <button className={style.cancelButton} onClick={() => setDeleteCha(false)}>\r\n                                        <p>Cancel</p>\r\n                                    </button>\r\n                                </>\r\n                            }\r\n                            outside={() => setDeleteCha(false)}\r\n                        />\r\n                        : null}\r\n                    <div className={`${((activeChannel.id === channelId || activeVoiceChannel.id === channelId) ? null : style.nonactiveChannel)}`}>\r\n                        <Tippy\r\n                            trigger={'contextmenu'}\r\n                            placement={'bottom'}\r\n                            offset={[0, 5]}\r\n                            arrow={false}\r\n                            hideOnClick={true}\r\n                            interactive={true}\r\n                            onTrigger={((instance, event) => {\r\n                                setInstance(instance)\r\n                                instance.show();\r\n                            })}\r\n                            render={(attrs, content) => (\r\n                                <div className={style.contextMenu}>\r\n                                    <button className={`${style.leave} ${style.contextButton}`} onClick={() => {\r\n                                        instance.hide()\r\n                                        setDeleteCha(true)\r\n                                    }}>Delete channel\r\n                                    </button>\r\n                                </div>\r\n                            )}\r\n                        >\r\n                            {button()}\r\n                        </Tippy>\r\n                    </div>\r\n                </>\r\n            );\r\n        } else {\r\n            return button()\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ServerChannel;","import React, { useState} from 'react';\nimport Popup from \"../Popup/Popup\";\nimport style from './AddChannel.module.css'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAt, faHashtag} from \"@fortawesome/free-solid-svg-icons\";\nimport {useParams} from \"react-router-dom\";\nimport {POST} from \"../Util/fetcher\";\nimport {useCookies} from \"react-cookie\";\n\nfunction AddChannel({outside, categoryName, categoryId}) {\n    const [{Authorization}] = useCookies();\n    const [type, setType] = useState(0)\n    const [name, setName] = useState('')\n    const [error, setError] = useState('')\n\n\n    const {ServerID} = useParams();\n\n    const createChannel = (e) => {\n        e.preventDefault()\n        if (!name) return setError('Channel name required')\n        POST(`server/${ServerID}/${categoryId}/channels`, {name, type}, Authorization).then(() => {\n            outside()\n        })\n\n    }\n\n    return (\n        <Popup outside={outside}\n               bottom={\n                   <>\n                       <button onClick={createChannel} className={style.createButton}>\n                           <p>Create channel</p>\n                       </button>\n                       <button className={style.cancelButton} onClick={outside}>\n                           <p>Cancel</p>\n                       </button>\n                   </>\n               }\n               top={\n                   <div className={style.content}>\n                       <form onSubmit={createChannel}>\n                       <div className={style.titleHandler}>\n                           <p className={style.title}>CREATE {(type) ? 'voice' : 'text'} CHANNEL</p>\n                           <div className={style.categoryName}><span>in {categoryName}</span></div>\n                       </div>\n                       <div className={style.form}>\n                           <p className={style.subTitle}>CHANNEL TYPE</p>\n                           <div className={`${style.channelType} ${(!type) ? style.activeType : null}`} onClick={() => (type) ? setType(0) : null}>\n                               <label className={style.checkbox}>\n                                   <input type={\"radio\"} name={\"checkbox\"} checked={type === 0} onChange={() => (type) ? setType(0) : null}/>\n                                   <span className={style.checkboxSpan}/>\n                               </label>\n                               <FontAwesomeIcon className={style.channelTypeFa} icon={faHashtag}/>\n                               <p>Text Channel</p>\n                           </div>\n                           <div className={`${style.channelType} ${(type) ? style.activeType : null}`} onClick={() => (!type) ? setType(1) : null}>\n                               <label className={style.checkbox}>\n                                   <input type={\"radio\"} name={\"checkbox\"} checked={type} onChange={() => (!type) ? setType(1) : null}/>\n                                   <span className={style.checkboxSpan}/>\n                               </label>\n                               <FontAwesomeIcon className={style.channelTypeFa} icon={faAt}/>\n                               <p>Voice Channel</p>\n                           </div>\n                       </div>\n\n                       <div className={style.form}>\n                           <p className={style.subTitle}>CHANNEL NAME</p>\n                           <div className={style.inputText}>\n                               <input value={name} onChange={(e) => setName(e.target.value)} maxLength={100} type={'text'} className={`${style.channelName} ${(error) ? style.borderError : null}`}/>\n                               {(error) ? <p className={style.error}>{error}</p> : null}\n                           </div>\n                       </div>\n                       </form>\n                   </div>\n               }\n\n        />\n    );\n}\n\nexport default AddChannel;","import React, {useContext, useState} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faAngleDown, faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport style from './ServerCategory.module.css'\r\nimport Tippy from '@tippyjs/react';\r\nimport Tippy2 from '@tippyjs/react/headless';\r\nimport 'tippy.js/dist/tippy.css';\r\nimport '../tippy.css';\r\nimport ServerChannel from \"./ServerChannel\";\r\nimport ServerContext from \"../ContextProvider/CurrentServer\";\r\nimport AddChannel from \"../AddChannel/AddChannel\";\r\nimport Popup from \"../Popup/Popup\";\r\nimport {DELETE} from \"../Util/fetcher\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport ChannelsContext from \"../ContextProvider/Server/ChannelsList\";\r\n\r\nconst ServerCategory = ({name, channels, id, setSettings}) => {\r\n    const [{Authorization}] = useCookies();\r\n    const [extended, setExtended] = useState(true)\r\n    const {activeServer} = useContext(ServerContext);\r\n    const [addServer, setAddServer] = useState(false)\r\n    const [deleteCat, setDeleteCat] = useState(false)\r\n    const { channelsList, setChannels } = useContext(ChannelsContext);\r\n\r\n\r\n    const [instance, setInstance] = useState()\r\n    const {ServerID} = useParams();\r\n\r\n    const onClick = () => {\r\n        setExtended(!extended)\r\n    }\r\n\r\n    const deleteCategory = () => {\r\n        DELETE(`server/${ServerID}/${id}`, {}, Authorization).then(({id: deletedId, error}) => {\r\n            if (!error) {\r\n                channelsList.some((x, i) => {\r\n                    if (x.categoryId === deletedId) {\r\n                        channelsList.splice(i, 1)\r\n                        setChannels([...channelsList])\r\n                        setDeleteCat(false)\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    if (activeServer.isAdmin) {\r\n        return (<>\r\n            {(addServer) ?\r\n                <AddChannel categoryId={id} categoryName={name} outside={() => setAddServer(false)}/>\r\n                : null\r\n            }\r\n            {(deleteCat) ?\r\n                <Popup\r\n                    outside={() => setDeleteCat(false)}\r\n                    top={\r\n                        <p style={{color: '#FFFFFF'}}>Are you sure you want to delete <span style={{fontWeight: 700}}>'{(name.length > 30) ? `${name.substr(0, 30)}...` : name}'</span></p>\r\n                    }\r\n                    bottom={\r\n                        <>\r\n                            <button onClick={deleteCategory} className={style.deleteButton}>\r\n                                <p>Delete category</p>\r\n                            </button>\r\n                            <button className={style.cancelButton} onClick={() => setDeleteCat(false)}>\r\n                                <p>Cancel</p>\r\n                            </button>\r\n                        </>\r\n                    }\r\n                />\r\n                : null\r\n            }\r\n\r\n            <div className={style.category}>\r\n                <div>\r\n                    <div className={style.name}>\r\n                        <div>\r\n                            <Tippy2\r\n                                trigger={'contextmenu'}\r\n                                placement={'bottom'}\r\n                                offset={[15, 5]}\r\n                                arrow={false}\r\n                                hideOnClick={true}\r\n                                interactive={true}\r\n                                onTrigger={((instance, event) => {\r\n                                    setInstance(instance)\r\n                                    instance.show();\r\n                                })}\r\n                                render={(attrs, content) => (\r\n                                    <div className={style.contextMenu}>\r\n                                        <button className={`${style.leave} ${style.contextButton}`} onClick={() => {\r\n                                            instance.hide()\r\n                                            setDeleteCat(true)\r\n                                        }}>Delete category\r\n                                        </button>\r\n                                        <button className={`${style.settings} ${style.contextButton}`} onClick={() => {\r\n                                            instance.hide()\r\n                                            setSettings({id, name, type:1})\r\n                                        }}>Category settings\r\n                                        </button>\r\n\r\n                                    </div>\r\n                                )}\r\n                            >\r\n                                <div className={style.nameDiv} onClick={onClick}>\r\n                                    <FontAwesomeIcon icon={faAngleDown} rotation={(extended) ? 0 : 270} className={style.arrow}/>\r\n                                    <div className={style.categoryName}><span>{name}</span></div>\r\n                                </div>\r\n                            </Tippy2>\r\n                        </div>\r\n                        <Tippy\r\n                            content=\"Add channel\"\r\n                            placement={'top'}\r\n                            className={\"serverTips\"}\r\n                            arrow={true}\r\n                            animation={false}\r\n                        >\r\n                            <div className={style.addChannel} onClick={() => setAddServer(true)}>\r\n                                <FontAwesomeIcon icon={faPlus}/>\r\n                            </div>\r\n                        </Tippy>\r\n                    </div>\r\n                </div>\r\n                <div className={(!extended) ? style.hidden : null} style={{marginLeft: 15}}>\r\n                    {(channels) ? (channels.length) ?\r\n                        channels.map(channel => (\r\n                            <ServerChannel setSettings={setSettings} categoryId={id} key={channel.id} channelId={channel.id} type={channel.type} name={channel.name}/>\r\n                        ))\r\n                        : null\r\n                        : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>)\r\n    } else {\r\n        return (\r\n            <>\r\n                {(addServer) ?\r\n                    <AddChannel categoryId={id} categoryName={name} outside={() => setAddServer(false)}/>\r\n                    : null\r\n                }\r\n                <div className={style.category}>\r\n                    <div className={style.name}>\r\n                        <div className={style.nameDiv} onClick={onClick}>\r\n                            <FontAwesomeIcon icon={faAngleDown} rotation={(extended) ? 0 : 270} className={style.arrow}/>\r\n                            <div className={style.categoryName}><span>{name}</span></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={(!extended) ? style.hidden : null} style={{marginLeft: 15}}>\r\n                        {(channels) ? (channels.length) ?\r\n                            channels.map((channel, i) => {\r\n                                return  <ServerChannel key={i} categoryId={id} channelId={channel.id} type={channel.type} name={channel.name}/>\r\n                            })\r\n                            : null\r\n                            : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ServerCategory;","import React, {useContext, useState} from 'react';\nimport style from './Overview.module.css'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {useCookies} from \"react-cookie\";\nimport ServerContext from \"../../ContextProvider/CurrentServer\";\nimport {PUT} from \"../../Util/fetcher\";\nimport channelContext from \"../../ContextProvider/CurrentChannel\";\nimport ChannelsContext from \"../../ContextProvider/Server/ChannelsList\";\n\nfunction Overview({settings, exit}) {\n    const [channelName, setChannelName] = useState(settings.name)\n    const [channelNameErr, setChannelNameErr] = useState('')\n    const {activeChannel, setChannel} = useContext(channelContext);\n    const { channelsList, setChannels } = useContext(ChannelsContext);\n\n    const [{Authorization}] = useCookies();\n    const {activeServer} = useContext(ServerContext);\n\n    const save = (e) => {\n        e.preventDefault()\n        if (channelName === settings.name) return true;\n        if (!channelName) return setChannelNameErr('Name is required')\n        if (channelNameErr) setChannelNameErr('')\n        PUT(`channels/${activeServer.id}/${settings.id}`, {name: channelName}, Authorization).then(({error}) => {\n            channelsList.some(x => {\n                if (x.categoryId === settings.categoryId) {\n                    x.channelsList.some(j => {\n                        if (j.id === settings.id) {\n                            if(activeChannel.id === settings.id) {\n                                activeChannel.name = channelName\n                                settings.name = channelName\n                                setChannel({...activeChannel})\n                            }\n                            j.name = channelName\n                            setChannels([...channelsList])\n                            return true\n                        }\n                        return false\n                    })\n                    return true\n                }\n                return false\n            })\n        })\n    }\n\n    return (\n        <div className={style.handler}>\n            <div className={style.titleExit}>\n                <p className={style.title}>OVERVIEW</p>\n                <div className={style.exitButton} onClick={exit}>\n                    <FontAwesomeIcon icon={faTimes}/>\n                </div>\n            </div>\n            <div className={style.overview}>\n                <form onSubmit={save} action={\"#\"}>\n                    <div className={style.subTitle}>CHANNEL NAME:</div>\n                    <div className={style.inputHandler}>\n                        <input value={channelName} onChange={(e) => setChannelName(e.target.value)} type={'text'} className={style.input}/>\n                    </div>\n                    {(channelNameErr) ? <div style={{color: '#EB5757'}}>{channelNameErr}</div> : null}\n                    <div className={style.buttonHandler}>\n                        <button className={style.saveButton} type={\"submit\"}>SAVE</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Overview;","import React, {useEffect} from 'react';\nimport Settings from \"../../Settings/Settings\";\nimport style from './ChannelSettings.module.css'\nimport Overview from \"./Overview\";\nfunction ChannelSettings({exit, settings}) {\n\n    useEffect(() => {\n        const exitSettings = (event) => {\n            if (event.keyCode === 27) {\n                exit()\n            }\n        }\n        window.addEventListener('keyup', exitSettings);\n        return () => {\n            window.removeEventListener('keyup', exitSettings);\n        };\n    }, [exit]);\n\n    return (\n        <Settings\n            NavBar={\n                <button className={style.navButton}>Overview</button>\n            }\n            content={\n                <Overview exit={exit} settings={settings}/>\n            }\n            title={\n                settings.name\n            }/>\n    );\n}\n\nexport default ChannelSettings;","import React, {useContext, useState} from 'react';\nimport style from '../ChannelSettings/Overview.module.css'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\nimport {useCookies} from \"react-cookie\";\nimport ServerContext from \"../../ContextProvider/CurrentServer\";\nimport {PUT} from \"../../Util/fetcher\";\n\nfunction Overview({settings, exit}) {\n    const [categoryName, setCategoryName] = useState(settings.name)\n    const [categoryNameErr, setCategoryNameErr] = useState('')\n\n    const [{Authorization}] = useCookies();\n    const {activeServer} = useContext(ServerContext);\n\n    const save = (e) => {\n        e.preventDefault();\n        if (categoryName === settings.name) return true;\n        if (!categoryName) return setCategoryNameErr('Name is required')\n        if (categoryNameErr) setCategoryNameErr('')\n        PUT(`server/${activeServer.id}/${settings.id}`, {name: categoryName}, Authorization).then()\n    }\n\n\n    return (\n        <div className={style.handler}>\n            <div className={style.titleExit}>\n                <p className={style.title}>OVERVIEW</p>\n                <div className={style.exitButton} onClick={exit}>\n                    <FontAwesomeIcon icon={faTimes}/>\n                </div>\n            </div>\n            <div className={style.overview}>\n                <form onSubmit={save} action={\"#\"}>\n                    <div className={style.subTitle}>CATEGORY NAME:</div>\n                    <div className={`${style.inputHandler} ${(categoryNameErr) ? style.errorBorder : null}`}>\n                        <input value={categoryName} onChange={(e) => setCategoryName(e.target.value)} type={'text'} className={style.input}/>\n                    </div>\n                    {(categoryNameErr) ? <div style={{color: '#EB5757'}}>{categoryNameErr}</div> : null}\n                    <div className={style.buttonHandler}>\n                        <button className={style.saveButton} type={\"submit\"}>SAVE</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Overview;","import React, {useEffect} from 'react';\nimport Settings from \"../../Settings/Settings\";\nimport style from '../ChannelSettings/ChannelSettings.module.css'\nimport Overview from \"./Overview\";\n\nfunction CategorySettings({exit, settings}) {\n    useEffect(() => {\n        const exitSettings = (event) =>  {\n            if(event.keyCode === 27){\n                exit()\n            }\n        }\n        window.addEventListener('keyup', exitSettings);\n        return () => {\n            window.removeEventListener('keyup', exitSettings);\n        };\n    }, [exit]);\n\n    return (\n        <Settings\n            NavBar={\n                <button className={style.navButton}>Overview</button>\n            }\n            content={\n                <Overview exit={exit} settings={settings}/>\n            }\n            title={\n                settings.name\n            } />\n    );\n}\n\nexport default CategorySettings;","import React, {useState} from 'react';\r\nimport style from \"./ChannelList.module.css\";\r\nimport {Scrollbars} from \"react-custom-scrollbars\";\r\nimport ServerCategory from \"../ServerCategory/ServerCategory\";\r\nimport ChannelSettings from \"./ChannelSettings/ChannelSettings\";\r\nimport CategorySettings from \"./CategorySettings/CategorySettings\";\r\nconst ServerChannels = ({channels}) => {\r\n    //const [settings, setSettings] = useState({})\r\n    //Settings type: Channel:0, category: 1\r\n    const [settings, setSettings] = useState({})\r\n    return (\r\n        <>\r\n            {(settings.id) ? (settings.type) ? <CategorySettings exit={() => setSettings({})} settings={settings} /> : <ChannelSettings exit={() => setSettings({})} settings={settings}/> : null}\r\n            <div className={style.channelList}>\r\n                <Scrollbars autoHide style={{height: \"100%\"}}>\r\n                    {\r\n                        (channels) ? channels.map(({channelsList, categoryName, categoryId}, i) => (\r\n                            <ServerCategory setSettings={setSettings} key={i} id={categoryId} name={categoryName} channels={channelsList}/>\r\n                        )) : null\r\n                    }\r\n                </Scrollbars>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ServerChannels;","import ChannelsContext from \"../ContextProvider/Server/ChannelsList\";\r\nimport React, {useContext} from \"react\";\r\nimport ServerName from \"../ServerName/ServerName\";\r\nimport style from \"./ChannelList.module.css\";\r\nimport UserContainer from \"../UserContainer/UserContainer\";\r\nimport FriendsChannels from \"./FriendsChannels\";\r\nimport ServerChannels from \"./ServerChannels\";\r\nimport {useParams, useHistory} from \"react-router-dom\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport {DELETE} from \"../Util/fetcher\";\r\nimport ServerContext from \"../ContextProvider/CurrentServer\";\r\nimport ServerListContext from \"../ContextProvider/ServerList\";\r\nimport config from \"../config\";\r\n//Type: 0=UserFriendList, 1=Server channels\r\nconst ChannelList = ({type}) => {\r\n    const [{Authorization}] = useCookies();\r\n    const {activeServer} = useContext(ServerContext);\r\n    const {channelsList} = useContext(ChannelsContext);\r\n\r\n    const {serverList, setServers} = useContext(ServerListContext);\r\n    const {ServerID, FriendID} = useParams();\r\n    const history = useHistory();\r\n\r\n    const deleteServer = () => {\r\n        DELETE(`server/${ServerID}`, {}, Authorization).then(({error}) => {\r\n            if (!error) {\r\n                serverList.some((x, i) => {\r\n                    if (x.id === ServerID) {\r\n                        serverList.splice(i, 1);\r\n                        setServers(serverList);\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                history.push(\"/@me\");\r\n            }\r\n        });\r\n    };\r\n\r\n    const leaveServer = () => {\r\n        DELETE(`server/${ServerID}/leave/`, {}, Authorization).then(({error}) => {\r\n            if (!error) {\r\n                serverList.some((x, i) => {\r\n                    if (x.id === ServerID) {\r\n                        serverList.splice(i, 1);\r\n                        setServers(serverList);\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                });\r\n                history.push(\"/@me\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className={`${style.handler} ${config.TopBar ? style.handlerBR : null}`}>\r\n            <div className={style.top}>\r\n                <ServerName\r\n                    type={type}\r\n                    deleteServer={deleteServer}\r\n                    leaveServer={leaveServer}\r\n                    name={!type ? \"DIRECT MESSAGES\" : ServerID === activeServer.id ? activeServer.name : \"loading\"}\r\n                />\r\n            </div>\r\n\r\n            {type ? (\r\n                <ServerChannels channels={channelsList ? channelsList : []}/>\r\n            ) : (\r\n                <FriendsChannels ChannelID={FriendID} channels={channelsList ? channelsList : []}/>\r\n            )}\r\n\r\n                <UserContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChannelList;\r\n","import React from 'react';\r\nimport style from \"./TopBar.module.css\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst ContextButton = ({id, fa}) => {\r\n    return (\r\n        <div id={id}  className={`${style.menuButton} ${style[id]}`}>\r\n            <FontAwesomeIcon icon={fa}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContextButton;","import React from 'react';\r\nimport style from './TopBar.module.css';\r\nimport ContextButton from './ContextButton'\r\nimport {faMinus, faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport {faSquare} from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst TopBar = () => {\r\n\r\n    return (\r\n        <div className={`${style.topBar} selectRemover`}>\r\n            <p className={style.appName}>COPYSCORD</p>\r\n            <div className={style.controlMenu}>\r\n                <ContextButton id={\"reduce\"} fa={faMinus} hoverColor={\"#343434\"}/>\r\n                <ContextButton id={\"enlarge\"} fa={faSquare} hoverColor={\"#343434\"}/>\r\n                <ContextButton id={\"exit\"} fa={faTimes} hoverColor={\"#c0392b\"}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default TopBar;","import React from 'react';\r\nimport style from './ChannelName.module.css'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faUserFriends, faHashtag, faAt} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// Type: 0=DM, 1=Server chat channel, 2=Friends list,\r\nconst ChannelType = [faAt, faHashtag, faUserFriends]\r\nconst ServerName = ({type, name, children, userCode}) => {\r\n\r\n    return (\r\n        <div className={style.handler}>\r\n            <div className={style.channelInfo} >\r\n                <FontAwesomeIcon className={style.channelLogo} icon={ChannelType[type]} color={\"#999999\"}/>\r\n                <div className={style.channelName}>{(name)? (name.length > 30) ? `${name.substr(0, 30)}...` : name :null}{(userCode)?<span className={style.userCode}>#{userCode.toString().padStart(4, '0')}</span>:null}</div>\r\n                {(children) ? children : null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServerName;","import React, {useState} from 'react';\r\nimport style from \"./FriendList.module.css\";\r\nimport UserLogo from \"../UserLogo/UserLogo\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCommentAlt, faEllipsisV, faPlus, faMinus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Link} from 'react-router-dom'\r\nimport Tippy from '@tippyjs/react/headless';\r\nimport Popup from \"../Popup/Popup\";\r\n\r\nconst FriendListButton = ({removeFriend, sent, src, status, username, id, request, acceptFriend, removeRequest, userCode}) => {\r\n    const [instance, setInstance] = useState();\r\n    const [friendDeletePopup, setFriendDeletePopup] = useState(false)\r\n\r\n    const removeFriendPopup = () => {\r\n        instance.hide()\r\n        setFriendDeletePopup(true)\r\n    }\r\n\r\n    if (request) {\r\n        return (\r\n            <div className={style.user}>\r\n                <div className={style.separator}>\r\n                    <div className={style.userLogo}>\r\n                        <UserLogo src={src} status={status} bgcolor={\"#4A4A4A\"}/>\r\n                    </div>\r\n                    <p className={style.username}>{username}<span className={style.userCode}>#{userCode.toString().padStart(4, '0')}</span></p>\r\n\r\n                </div>\r\n                <div className={style.separator}>\r\n                    {(sent) ? <div className={style.action} onClick={() => acceptFriend(id)}>\r\n                        <FontAwesomeIcon icon={faPlus}/>\r\n                    </div> : null}\r\n                    <div className={style.action} onClick={() => removeRequest(id, sent)}>\r\n                        <FontAwesomeIcon icon={faMinus}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            {(friendDeletePopup) ?\r\n                <Popup outside={() => setFriendDeletePopup(false)}\r\n                       top={\r\n                           <p style={{color: '#FFFFFF'}}>Are you sure you want to delete <span style={{fontWeight: 700}}>'{(username.length > 30) ? `${username.substr(0, 30)}...` : username}' </span>from your friends</p>\r\n                       }\r\n                       bottom={\r\n                           <>\r\n                               <button onClick={() => removeFriend(id)} className={style.deleteButton}>\r\n                                   <p>Remove</p>\r\n                               </button>\r\n                               <button className={style.cancelButton} onClick={() => setFriendDeletePopup(false)}>\r\n                                   <p>Cancel</p>\r\n                               </button>\r\n                           </>\r\n                       }\r\n                />\r\n                : null}\r\n            <div className={style.user}>\r\n                <div className={style.separator}>\r\n                    <div className={style.userLogo}>\r\n                        <UserLogo src={src} status={status} bgcolor={\"#4A4A4A\"}/>\r\n                    </div>\r\n                    <div className={style.username}>{username}<span className={style.userCode}>#{userCode.toString().padStart(4, '0')}</span></div>\r\n                </div>\r\n                <div className={style.separator}>\r\n                    <Link to={`/@me/${id}`} style={{textDecoration: 'none'}}>\r\n                        <div className={style.action}>\r\n                            <FontAwesomeIcon icon={faCommentAlt}/>\r\n                        </div>\r\n                    </Link>\r\n                    <Tippy\r\n                        placement={'bottom'}\r\n                        trigger={'click'}\r\n                        interactive={true}\r\n                        onTrigger={((instance, event) => {\r\n                            setInstance(instance)\r\n                            instance.show();\r\n                        })}\r\n                        render={(attrs, content) => {\r\n                            return (\r\n                                <div className={style.contextMenu}>\r\n                                    <button onClick={removeFriendPopup} className={`${style.delete} ${style.contextButton}`}>Remove friend</button>\r\n                                </div>\r\n                            )\r\n                        }}\r\n                    >\r\n                        <div className={style.action}>\r\n                            <FontAwesomeIcon icon={faEllipsisV}/>\r\n                        </div>\r\n                    </Tippy>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FriendListButton;","import React, {useState} from 'react';\nimport style from './AddFriend.module.css'\nimport {POST} from \"../Util/fetcher\";\nimport {useCookies} from \"react-cookie\";\n\nfunction AddFriend() {\n    const [input, setInput] = useState('')\n    const [error, setError] = useState(\"\")\n    const [success, setSuccess] = useState(\"\")\n    const [{Authorization}] = useCookies()\n\n    const splitter = (input) => {\n        if (!input) {\n            setError('No username')\n            return {error}\n        }\n        input = input.split('#')\n        let userCode = input[input.length - 1]\n        if (input.length === 1) {\n            setError('No user code')\n            return {error}\n        }\n        if (isNaN(userCode) || parseInt(userCode) > 9999 || parseInt(userCode) < 0 || !userCode) {\n            setError('Invalid user tag')\n            return {error}\n        }\n        input.pop()\n        let username = input.join('#')\n        if (error) setError('')\n        if (success) setSuccess('')\n        return {userCode, username}\n    }\n\n    const addFriendFnct = (e) => {\n        e.preventDefault()\n        let {userCode, username, error} = splitter(input)\n        if (!error) {\n            POST(`friends`, {username, userCode}, Authorization).then(({error}) => {\n                if (error) return setError(`${(error[0]) ? error[0].toUpperCase() : 'error'}${(error[0]) ? error.slice(1, error.length) : ''}`)\n\n                setSuccess(`Successfully added ${username}#${userCode.toString().padStart(4, '0')} to friend`)\n            })\n        }\n    }\n\n    return (\n        <>\n            {(error) ?\n                <div className={`${style.alert}`}>\n                    <span className={style.closebtn} onClick={() => setError('')}>&times;</span>\n                    {error}\n                </div>\n                : null\n            }\n            {(success) ?\n                <div className={`${style.success}`}>\n                    <span className={style.closebtn} onClick={() => setSuccess('')}>&times;</span>\n                    {success}\n                </div>\n                : null\n            }\n            <form onSubmit={addFriendFnct}>\n                <div className={style.addFriend}>\n                    <input value={input} onChange={(e) => setInput(e.target.value)} placeholder={\"Ex: foo#2323\"}\n                           type={'text'} className={style.input}/>\n                    <button className={style.button} type={\"submit\"}>Add to friend</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default AddFriend;","import React, { useState } from \"react\";\n\nconst FriendsListContext = React.createContext([]);\n\n\nexport const FriendsList = ({ children }) => {\n    const [friendsList, setFriendsListS] = useState([]);\n    const setFriendsList = (values) => {\n        setFriendsListS(values)\n    };\n    return (\n        <FriendsListContext.Provider value={{ friendsList, setFriendsList }} >\n            {children}\n        </FriendsListContext.Provider>\n    );\n};\n\nexport const FriendsListConsumer = FriendsListContext.Consumer;\n\nexport default FriendsListContext;","import React, {useContext, useEffect, useState} from 'react';\r\nimport style from \"./FriendList.module.css\";\r\nimport FriendListButton from \"./FriendListButton\";\r\nimport {Scrollbars} from \"react-custom-scrollbars\";\r\nimport {DELETE, GET, POST} from \"../Util/fetcher\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport AddFriend from \"./AddFriend\";\r\nimport FriendsListContext from \"../ContextProvider/FriendsList\";\r\n\r\n//Type: 0=Online, 1=All, 2=Request\r\nconst category = [\"ONLINE\", \"ALL\", \"REQUEST\", \"ADD FRIEND\"]\r\n\r\nconst ListPane = ({type}) => {\r\n    const [{Authorization}] = useCookies()\r\n    const [currentType, setType] = useState(2)\r\n    const {friendsList, setFriendsList} = useContext(FriendsListContext);\r\n\r\n\r\n\r\n    const acceptFriend = (id) => {\r\n        POST(`friends`, {userId: id}, Authorization).then(({error}) => {\r\n            if (!error) {\r\n                friendsList.received.some((x, i) => {\r\n                    if (x.id === id) {\r\n                        friendsList.received.splice(i, 1)\r\n                        return true\r\n                    }\r\n                    return false\r\n                })\r\n                setFriendsList({received: friendsList.received, sent: friendsList.sent})\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const removeRequest = (id, sent) => {\r\n        DELETE(`friends/request/${id}`, {}, Authorization).then(({error}) => {\r\n            if (!error) {\r\n                if (sent) {\r\n                    friendsList.received.some((x, i) => {\r\n                        if (x.id === id) {\r\n                            friendsList.received.splice(i, 1)\r\n                            return true\r\n                        }\r\n                        return false\r\n                    })\r\n                    setFriendsList({received: friendsList.received, sent: friendsList.sent})\r\n                } else {\r\n                    friendsList.sent.some((x, i) => {\r\n                        if (x.id === id) {\r\n                            friendsList.sent.splice(i, 1)\r\n                            return true\r\n                        }\r\n                        return false\r\n                    })\r\n                    setFriendsList({received: friendsList.received, sent: friendsList.sent})\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const removeFriend = (id) => {\r\n        DELETE(`friends`, {userId: id}, Authorization).then(({error}) => {\r\n            if (!error) {\r\n                friendsList.some((x, i) => {\r\n                    if (x.id === id) {\r\n                        friendsList.splice(i, 1)\r\n                        setFriendsList([...friendsList])\r\n                        return true\r\n                    }\r\n                    return false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (type === 0 || type === 1) {\r\n            if (currentType !== 1 && currentType !== 0) {\r\n                GET(`friends`, {}, Authorization).then((list) => {\r\n                    setType(type);\r\n                    setFriendsList(list)\r\n                }).catch(() => {\r\n                    setType(type)\r\n                })\r\n            }\r\n        } else if (type === 2) {\r\n            if (currentType !== 2) {\r\n                GET(`friends/request`, {}, Authorization).then((request) => {\r\n                    setType(type);\r\n                    setFriendsList(request)\r\n                })\r\n            }\r\n        } else if (type === 3) {\r\n            if (currentType !== 3) {\r\n                setType(type)\r\n            }\r\n        }\r\n    }, [type, currentType, Authorization, setFriendsList])\r\n    return (\r\n        <Scrollbars style={{height: \"100%\"}}>\r\n            <div className={style.list}>\r\n                <div className={style.title}>\r\n                    <p>{category[type]}</p>\r\n                </div>\r\n                {(type === 2) ? <p className={style.subTitle}>Sent: </p> : null}\r\n                {(type === 3) ? <AddFriend/> : (friendsList && friendsList[0] && friendsList[0].id) ? (type !== 2) ?\r\n                    friendsList.map(({id, logoUrl, status, name, code}) => {\r\n                        if (!type && status !== 0) {\r\n                            return <FriendListButton removeFriend={removeFriend} userCode={code} key={id} id={id}\r\n                                                     src={logoUrl} username={name} status={status}/>\r\n                        }\r\n                        if (type) {\r\n                            return <FriendListButton removeFriend={removeFriend} userCode={code} key={id} id={id}\r\n                                                     src={logoUrl} username={name} status={status}/>;\r\n                        }\r\n                        return false;\r\n                    }) : null\r\n                    : (friendsList.sent && friendsList.sent[0] && friendsList.sent[0].id) ? friendsList.sent.map(({id, logoUrl, name, code}, i) => {\r\n                        return <FriendListButton acceptFriend={acceptFriend} userCode={code}\r\n                                                 removeRequest={removeRequest} request\r\n                                                 username={name} key={i} id={id} src={logoUrl}/>\r\n                    }) : null}\r\n                {(type === 2) ?\r\n                    <>\r\n                        <p className={style.subTitle}>Received: </p>\r\n                        {(friendsList.received && friendsList.received[0] && friendsList.received[0].id) ? friendsList.received.map(({id, logoUrl, name, code}, i) => {\r\n                            return <FriendListButton acceptFriend={acceptFriend} userCode={code}\r\n                                                     removeRequest={removeRequest} request sent\r\n                                                     username={name} key={i} id={id} src={logoUrl}/>\r\n                        }) : null}\r\n                    </>\r\n                    : null\r\n                }\r\n            </div>\r\n        </Scrollbars>\r\n    );\r\n}\r\n\r\nexport default ListPane;","import React, {useState} from \"react\";\r\n\r\nconst FriendsPanelContext = React.createContext({\r\n    type: \"online\"\r\n});\r\n\r\n\r\nexport const CurrentFriendsPanel = ({children}) => {\r\n    const [currentFriendsPanel, setCurrentFriendsPanel] = useState({\r\n        type: \"online\"\r\n    });\r\n\r\n    const setFriendsPanel = (values) => {\r\n        setCurrentFriendsPanel(values)\r\n    };\r\n    return (\r\n        <FriendsPanelContext.Provider value={{activeFPanel: currentFriendsPanel, setFriendsPanel}}>\r\n            {children}\r\n        </FriendsPanelContext.Provider>\r\n    );\r\n};\r\n\r\nexport const SettingsConsumer = FriendsPanelContext.Consumer;\r\n\r\nexport default FriendsPanelContext;","import React, {useContext} from 'react';\r\nimport FriendsPanelContext from '../ContextProvider/CurrentFriendsPanel'\r\nimport style from './FriendsTypeSwitcher.module.css';\r\n\r\nconst FriendsTypeButton = ({type, className, text, callback}) => {\r\n    const {activeFPanel, setFriendsPanel} = useContext(FriendsPanelContext)\r\n    const onClick = () => {\r\n        callback(type)\r\n        setFriendsPanel({type: type})\r\n    }\r\n    return (\r\n        <div className={style.switcher}>\r\n            <p className={`${className} ${((activeFPanel.type === type) ? style.active : null)}`} onClick={onClick}>{text}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendsTypeButton;","import React from 'react';\r\nimport FriendsTypeButton from './FriendsTypeButton.js'\r\nimport style from './FriendsTypeSwitcher.module.css';\r\nimport {CurrentFriendsPanel} from \"../ContextProvider/CurrentFriendsPanel\";\r\n\r\nconst FriendsTypeSwitcher = ({callback}) => {\r\n\r\n    const onClick = (type) => {\r\n        callback(type)\r\n    }\r\n\r\n    return (\r\n        <div className={style.switch}>\r\n            <CurrentFriendsPanel activeChannel={{type: \"online\"}}>\r\n                <FriendsTypeButton callback={() => onClick(0)} type={\"online\"} text={\"Online\"} className={style.switcherText} active/>\r\n                <FriendsTypeButton callback={() => onClick(1)} type={\"all\"} text={\"All\"} className={style.switcherText}/>\r\n                <FriendsTypeButton callback={() => onClick(2)} type={\"request\"} text={\"Request\"} className={style.switcherText}/>\r\n                <FriendsTypeButton callback={() => onClick(3)} type={\"add\"} text={\"Add friend\"} className={`${style.switcherText} ${style.addFriendButton}`}/>\r\n            </CurrentFriendsPanel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendsTypeSwitcher;","import React, {useState} from 'react';\r\nimport ChannelName from \"../ChannelName/ChannelName\";\r\nimport ListPane from './ListPane'\r\nimport style from \"./FriendList.module.css\";\r\nimport FriendsTypeSwitcher from \"../FriendsTypeSwitcher/FriendsTypeSwitcher\";\r\n\r\n\r\nconst FriendList = () => {\r\n    const [type, setType] = useState(0)\r\n    const callback = (type) => {\r\n        setType(type)\r\n    }\r\n\r\n    return (\r\n            <div className={style.handler}>\r\n                <div className={style.top}>\r\n                    <ChannelName type={2} name=\"Friends\">\r\n                        <div className={style.verticalSeparator}/>\r\n                        <FriendsTypeSwitcher callback={callback} />\r\n                    </ChannelName>\r\n                </div>\r\n                <ListPane type={type}/>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default FriendList;","import React, {useContext, useEffect, useState} from 'react';\r\nimport style from './Chat.module.css'\r\nimport {Scrollbars} from \"react-custom-scrollbars\";\r\nimport TextareaAutosize from 'react-autosize-textarea';\r\nimport {POST, PUT} from \"../Util/fetcher\";\r\nimport {useParams} from 'react-router-dom'\r\nimport {useCookies} from \"react-cookie\";\r\nimport MessageContext from \"../ContextProvider/currentMessages\";\r\nimport UserContext from \"../ContextProvider/CurrentUser\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport serverContext from \"../ContextProvider/CurrentServer\";\r\nimport ChannelsContext from \"../ContextProvider/Server/ChannelsList\";\r\n\r\nconst ChatBox = ({type, channel, content, setEditMessage}) => {\r\n    const [{Authorization}] = useCookies();\r\n    const {activeServer, setServer} = useContext(serverContext);\r\n    const {messages, setMessages} = useContext(MessageContext);\r\n    const {currentUser} = useContext(UserContext);\r\n    const {ChannelID, ServerID, FriendID} = useParams()\r\n    const history = useHistory()\r\n    const [textValue, setTextValue] = useState('')\r\n    const [editing, setEditing] = useState('')\r\n    const { channelsList, setChannels } = useContext(ChannelsContext);\r\n\r\n    const disableEdit = () => {\r\n        setEditing('')\r\n        setTextValue('')\r\n        setEditMessage({})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ((!editing && content.id) || (editing !== content.id)) {\r\n            setEditing(content.id)\r\n            setTextValue(content.content)\r\n        }\r\n    }, [setEditing, content, editing])\r\n\r\n    const onKey = (event) => {\r\n        if (event.key === 'Enter') {\r\n            if (event.target.value !== '') {\r\n                if (type) {\r\n                    if (editing) {\r\n                        PUT(`channels/${ServerID}/${ChannelID}/${content.id}`, {content: textValue}, Authorization).then(({id, error}) => {\r\n                            if (!error) {\r\n                                messages.some((x) => {\r\n                                    if (x.id === id) {\r\n                                        x.content = textValue\r\n                                        return true\r\n                                    }\r\n                                    return false\r\n                                })\r\n                                setMessages([...messages])\r\n                            }\r\n                            setEditMessage({})\r\n                            setTextValue('')\r\n                            setEditing('')\r\n                        })\r\n                    } else {\r\n                        POST(`channels/${ServerID}/${ChannelID}/messages`, {content: event.target.value}, Authorization).then(({id, content, date}) => {\r\n                            if (messages.error) {\r\n                                setMessages([{\r\n                                    id,\r\n                                    content,\r\n                                    date,\r\n                                    username: currentUser.username,\r\n                                    userLogo: currentUser.logoUrl,\r\n                                    authorId: currentUser.id\r\n                                }])\r\n                            } else {\r\n                                setMessages([...messages, {\r\n                                    id,\r\n                                    content,\r\n                                    date,\r\n                                    username: currentUser.username,\r\n                                    userLogo: currentUser.logoUrl,\r\n                                    authorId: currentUser.id\r\n                                }])\r\n\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    if (editing) {\r\n                        PUT(`client/dm/${FriendID}/${content.id}`, {content: textValue}, Authorization).then(({id, error}) => {\r\n                            if (!error) {\r\n                                messages.some((x) => {\r\n                                    if (x.id === id) {\r\n                                        x.content = textValue\r\n                                        return true\r\n                                    }\r\n                                    return false\r\n                                })\r\n                                setMessages([...messages])\r\n\r\n                            }\r\n                            channelsList.some(x => {\r\n                                if (x.id === FriendID) {\r\n                                    x.lastMessage = Date.now()\r\n                                    return true\r\n                                }\r\n                                return false\r\n                            })\r\n                            channelsList.sort((i, j) => j.lastMessage-i.lastMessage)\r\n                            setEditMessage({})\r\n                            setTextValue('')\r\n                            setEditing('')\r\n                            setServer({...activeServer})\r\n                        })\r\n                    } else {\r\n                        POST(`client/dm/${FriendID}`, {content: event.target.value}, Authorization).then(({id, content, date, error}) => {\r\n                            if (error) history.push('/@me')\r\n                            if (messages.error) {\r\n                                if (!channelsList.some(dude => dude.id === FriendID)) {\r\n                                    setServer({})\r\n                                }\r\n                            } else {\r\n                                if (!channelsList.some(dude => dude.id === FriendID)) {\r\n                                    setServer({})\r\n                                }\r\n                                let newMessage = {id, content, date, username: currentUser.username, userLogo: currentUser.logoUrl, authorId: currentUser.id}\r\n                                setMessages((messages[0]) ? [...messages, newMessage] : [newMessage])\r\n                                channelsList.some(x => {\r\n                                    if (x.id === FriendID) {\r\n                                        x.lastMessage = Date.now()\r\n                                        return true\r\n                                    }\r\n                                    return false\r\n                                })\r\n                                channelsList.sort((i,j) => j.lastMessage - i.lastMessage)\r\n                                setChannels([...channelsList])\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            setTextValue(\"\")\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.chatInput}>\r\n            <div className={style.border}>\r\n                <div style={{width: 28, height: 28, backgroundColor: \"#C4C4C4\", borderRadius: '50%'}}/>\r\n            </div>\r\n            <Scrollbars autoHeight style={{width: \"calc(100% - 50px)\"}}>\r\n                <div className={style.boxContainer}>\r\n                    <TextareaAutosize\r\n                        placeholder={\"Send a message to \" + ((type) ? \"#\" : \"@\") + ((channel) ? (channel.length > 30) ? `${channel.substring(0, 30)}...` : channel : '')}\r\n                        onKeyPress={onKey} spellCheck={\"false\"} onChange={(e) => setTextValue(e.target.value)}\r\n                        value={textValue}\r\n                        maxLength={2000} className={style.textbox}/>\r\n\r\n                </div>\r\n                {(editing) ? <p className={style.cancel} onClick={disableEdit}>Cancel</p> : null}\r\n            </Scrollbars>\r\n            <div className={style.border}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatBox;","import React, {useContext, useEffect, useState} from 'react';\nimport UserLogo from \"../UserLogo/UserLogo\";\nimport style from './UserTippyProfile.module.css'\nimport UserContext from \"../ContextProvider/CurrentUser\";\nimport {useHistory} from 'react-router-dom'\nimport {POST} from \"../Util/fetcher\";\nimport {useCookies} from \"react-cookie\";\n\nfunction UserTippyProfile({id, logo, bot, userCode, name, left, showProfile}) {\n    const {currentUser} = useContext(UserContext);\n    const [dmMessage, setDmMessage] = useState('')\n    const history = useHistory()\n    const [{Authorization}] = useCookies();\n\n    const [dmError, setDmError] = useState('')\n\n    const sendDm = (e) => {\n        e.preventDefault()\n        POST(`client/dm/${id}`, {content: dmMessage}, Authorization).then(({error}) => {\n            if (error) {\n                if (error === 'user not found') return setDmError(`User can only receive message from friends`)\n                return setDmError(`${error[0].toUpperCase()}${error.slice(1, error.length)}`)\n            } else {\n                if (dmError) setDmError('')\n                history.push(`/@me/${id}`)\n            }\n        })\n    }\n    useEffect(() => {\n        if (!dmMessage && dmError) setDmError('')\n    }, [dmMessage, dmError])\n\n    return (\n        <div className={`${style.profile} ${(left) ? style.slideLeft : style.slideRight}`}>\n            <div className={style.profileTop}>\n                <div className={style.profileLogo} onClick={() => showProfile(id)}>\n                    <UserLogo src={logo} width={85}/>\n                </div>\n                <div className={style.profileUsername}>\n                    <p>{(name.length > 20) ? `${name.substr(0, 20)}...` : name}</p>\n                    <p className={style.profileUsernameID}>#{(userCode) ? userCode.toString().padStart(4, '0') : '#0000'}</p>\n                </div>\n            </div>\n            <div className={style.profileBot}>\n                {bot}\n                {(currentUser.id !== id) ? <div className={style.dmHandler}>\n                    <div className={`${style.dmInputHandler} ${(dmError) ? style.errorBorder : null}`}>\n                        <form onSubmit={sendDm}>\n                            <input value={dmMessage} onChange={(e) => setDmMessage(e.target.value)} placeholder={`Message @${(name.length > 30) ? `${name.substr(0, 20)}...` : name}`} className={style.dmInput}/>\n                        </form>\n                    </div>\n                    <div style={{color: '#EB5757', fontSize: '13px'}}>{dmError}</div>\n                </div> : null}\n            </div>\n        </div>\n    );\n}\n\nexport default UserTippyProfile;","import React from 'react';\nimport style from './Common.module.css'\nimport UserLogo from \"../../UserLogo/UserLogo\";\nimport {Scrollbars} from \"react-custom-scrollbars\";\n\nfunction CommonFriends(mutualFriends, profileRedirect) {\n\n    return (\n        <div className={style.handler}>\n            <Scrollbars autoHide autoHeight>\n                {(mutualFriends && mutualFriends[0]) ? mutualFriends.map((x, i) => (\n                        <div key={i} className={style.listUser} onClick={() => profileRedirect(x.id)}>\n                            <UserLogo status={x.status} src={x.logoUrl} bgcolor={'#434343'} width={35}/>\n                            <div className={style.name}>{(x.username.length > 30) ? `${x.username.substr(0, 30)}...` : x.username}</div>\n                            <div className={style.userCode}>#{x.userCode.toString().padStart(4, '0')}</div>\n                        </div>\n                    )) :\n                    <div style={{color: '#FFFFFF'}}>\n                        You have no mutual friends\n                    </div>\n                }</Scrollbars>\n        </div>\n    );\n}\n\nexport default CommonFriends;","import React from 'react';\nimport style from \"./Common.module.css\";\nimport {Scrollbars} from \"react-custom-scrollbars\";\nimport UserLogo from \"../../UserLogo/UserLogo\";\n\nfunction CommonServer(mutualServers, serverRedirect) {\n    return (\n        <div className={style.handler}>\n            <Scrollbars autoHide autoHeight>\n                {(mutualServers && mutualServers[0]) ? mutualServers.map((x, i) => (\n                        <div key={i} className={style.listUser}  onClick={() => serverRedirect(x.id)}>\n                            {\n                                (x.logoUrl === 'default') ?\n                                    <>\n                                        <div className={style.serverLogo}>\n                                            {x.name[0].toUpperCase()}\n                                        </div>\n                                    </> :\n                                    <UserLogo width={35} src={x.logoUrl}/>\n                            }\n\n                            <div className={style.name}>{(x.name.length > 45) ? `${x.name.substr(0, 45)}...` : x.name}</div>\n                        </div>\n                    )) :\n                    <div style={{color: '#FFFFFF'}}>\n                        You have no mutual servers\n                    </div>\n                }</Scrollbars>\n        </div>\n    );\n}\n\nexport default CommonServer;","import React, {useContext, useEffect, useState} from 'react';\nimport style from './PopupUserProfile.module.css'\nimport UserLogo from \"../UserLogo/UserLogo\";\nimport CommonFriends from \"./Sub/CommonFriends\";\nimport CommonServer from \"./Sub/CommonServer\";\nimport {GET, POST} from \"../Util/fetcher\";\nimport {useCookies} from \"react-cookie\";\nimport UserContext from \"../ContextProvider/CurrentUser\";\nimport {useHistory} from 'react-router-dom'\n\nfunction PopupUserProfile({outside, id, username, logoUrl, userCode}) {\n    const [currentTab, setCurrentTab] = useState(0)\n    const [addedToFriend, setAddedToFriend] = useState(false)\n    const {currentUser} = useContext(UserContext);\n    const [{Authorization}] = useCookies();\n\n    const [stateId, setId] = useState('')\n    const [user, setUser] = useState({id, username, logoUrl, userCode, commonServer: [], commonFriends: [], friendRequested: false})\n\n    const history = useHistory()\n\n    useEffect(() => {\n        if (currentUser.id === user.id && (stateId !== user.id)) {\n            setId(currentUser.id)\n            return setUser({id: currentUser.id, username: currentUser.username, userCode: currentUser.userCode, logoUrl: currentUser.logoUrl, friendRequested: false, commonServer: [], commonFriends: []})\n        }\n        if ((stateId !== user.id)) GET(`user/${user.id}`, {}, Authorization).then((userInfo) => {\n            if (!userInfo.error) {\n                if (userInfo.friendRequested) setAddedToFriend(true)\n                setId(userInfo.id)\n                setUser(userInfo)\n            } else {\n                GET(`friends/request`, {}, Authorization).then(({sent}) => {\n                    if (sent.some(x => x.id === user.id)) {\n                        setAddedToFriend(true)\n                    }\n                    setId(user.id)\n                })\n            }\n        })\n    }, [Authorization, user, stateId, currentUser])\n\n    const serverRedirect = (id) => {\n        outside()\n        history.push(`/${id}`)\n    }\n\n    const profileRedirect = (id) => {\n        user.id = id\n        setUser({...user})\n        setCurrentTab(0)\n    }\n\n    const addToFriend = () => {\n        setAddedToFriend(true)\n        if (!addedToFriend) {\n            return POST(`friends`, {userId: id}, Authorization)\n        }\n    }\n\n    const sendMessage = () => {\n        outside()\n        history.push(`/@me/${id}`)\n    }\n    return (\n        <div className={style.popup} onClick={(e) => {\n            e.preventDefault();\n            if (e.currentTarget === e.target) {\n                outside()\n            }\n        }}>\n            <div className={style.handler}>\n                <div className={style.top}>\n                    <div className={style.topContent}>\n                        <div className={style.space}>\n                            <UserLogo src={user.logoUrl} width={100}/>\n                            <div className={style.userNameCode}>\n                                <div className={style.username}>{(user.username) ? (user.username.length > 30) ? `${user.username.substr(0, 30)}...` : user.username : null}</div>\n                                <div className={style.userCode}>#{(user.userCode) ? user.userCode.toString().padStart(4, '0') : '0000'}</div>\n                            </div>\n                        </div>\n                        <div className={style.space}>\n                            {(currentUser.id === user.id) ? null :\n                                (!addedToFriend) ?\n                                    <button className={style.addFriend} onClick={(user.areFriends) ? sendMessage : addToFriend}>{(user.areFriends) ? 'Send a message' : 'Add to friend'}</button>\n                                    : <button className={style.addedFriend} disabled>Friendship requested</button>\n                            }\n                        </div>\n                    </div>\n                </div>\n                {(currentUser.id !== user.id) ?\n                    <>\n                        <div className={style.navBar}>\n                            <div className={style.navBarContent}>\n                                <div className={`${style.navButton} ${(currentTab === 0) ? style.navActive : null}`} onClick={() => (currentTab !== 0) ? setCurrentTab(0) : null}>Mutual Server</div>\n                                <div className={`${style.navButton} ${(currentTab === 1) ? style.navActive : null}`} onClick={() => (currentTab !== 1) ? setCurrentTab(1) : null}>Mutual Friends</div>\n                            </div>\n                        </div>\n                        <div className={style.bot}>\n                            <div className={style.botContent}>\n                                {[CommonServer(user.commonServers, serverRedirect), CommonFriends(user.commonFriends, profileRedirect)][currentTab]}\n                            </div>\n                        </div>\n                    </>\n                    : <div className={style.bot} style={{height: 50}}/>}\n            </div>\n        </div>\n    );\n}\n\nexport default PopupUserProfile;","import React, { useContext, useState } from \"react\";\r\nimport UserLogo from \"../UserLogo/UserLogo\";\r\nimport style from \"./Message.module.css\";\r\nimport Tippy from \"@tippyjs/react/headless\";\r\nimport Popup from \"../Popup/Popup\";\r\nimport UserContext from \"../ContextProvider/CurrentUser\";\r\nimport ServerContext from \"../ContextProvider/CurrentServer\";\r\nimport UserTippyProfile from \"../UserTippyProfile/UserTippyProfile\";\r\nimport PopupUserProfile from \"../PopupUserProfile/PopupUserProfile\";\r\nimport UsersListContext from \"../ContextProvider/Server/UsersList\";\r\n\r\nconst Message = ({ messageID, logo, author, authorId, date, content, setEdit, deleteMsg, userCode }) => {\r\n  const [popup, setPopup] = useState(false);\r\n  const [instance, setInstance] = useState();\r\n  const [instanceProfile, setInstanceProfile] = useState();\r\n  const { currentUser } = useContext(UserContext);\r\n  const { activeServer } = useContext(ServerContext);\r\n  const [userProfile, setUserProfile] = useState(\"\");\r\n  const { usersList } = useContext(UsersListContext);\r\n\r\n  const editMessage = () => {\r\n    instance.hide();\r\n    setEdit({ id: messageID, content });\r\n  };\r\n\r\n  const hidePopup = () => {\r\n    setPopup(false);\r\n  };\r\n\r\n  const deletePopup = () => {\r\n    instance.hide();\r\n    setPopup(true);\r\n  };\r\n  const deleteMessage = () => {\r\n    deleteMsg(messageID);\r\n    setPopup(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {userProfile ? (\r\n        <PopupUserProfile\r\n          username={author}\r\n          logoUrl={logo}\r\n          userCode={userCode}\r\n          id={userProfile}\r\n          outside={() => setUserProfile(false)}\r\n        />\r\n      ) : null}\r\n      <div>\r\n        {popup ? (\r\n          <Popup\r\n            top={<p style={{ color: \"#FFFFFF\", fontSize: \"15px\", fontWeight: 600 }}>Delete message ?</p>}\r\n            bottom={\r\n              <>\r\n                <button className={style.leaveButton} onClick={deleteMessage}>\r\n                  <p>Delete</p>\r\n                </button>\r\n                <button className={style.cancelButton} onClick={hidePopup}>\r\n                  <p>Cancel</p>\r\n                </button>\r\n              </>\r\n            }\r\n            outside={hidePopup}\r\n          />\r\n        ) : null}\r\n\r\n        <Tippy\r\n          trigger={\"contextmenu\"}\r\n          placement={\"auto\"}\r\n          arrow={false}\r\n          interactive={true}\r\n          hideOnClick={true}\r\n          onTrigger={(instance, event) => {\r\n            setInstance(instance);\r\n            instance.setProps({\r\n              getReferenceClientRect: () => ({\r\n                width: 0,\r\n                height: 0,\r\n                top: event.clientY,\r\n                bottom: event.clientY,\r\n                left: event.clientX,\r\n                right: event.clientX,\r\n              }),\r\n            });\r\n            instance.show();\r\n          }}\r\n          render={(attrs, content) => {\r\n            if (currentUser.id === authorId || activeServer.isAdmin) {\r\n              return (\r\n                <div className={style.contextMenu}>\r\n                  {currentUser.id !== authorId ? null : (\r\n                    <button className={`${style.edit} ${style.contextButton}`} onClick={editMessage}>\r\n                      Edit message\r\n                    </button>\r\n                  )}\r\n                  <button className={`${style.delete} ${style.contextButton}`} onClick={deletePopup}>\r\n                    Delete message\r\n                  </button>\r\n                </div>\r\n              );\r\n            } else {\r\n              return <></>;\r\n            }\r\n          }}\r\n        >\r\n          <div className={style.message}>\r\n            <Tippy\r\n              appendTo={() => document.getElementById(\"root\")}\r\n              interactive={true}\r\n              onTrigger={(i) => {\r\n                setInstanceProfile(i);\r\n              }}\r\n              render={() => {\r\n                if (activeServer.id !== \"@me\") {\r\n                  let role;\r\n                  //Got some problems without any real reason, so i check if there's members before search the user\r\n                  let user = usersList ? usersList.find((x) => x.id === authorId) : { role: 0 };\r\n                  if (user) role = user.role;\r\n                  else role = \"none\";\r\n                  return (\r\n                    <UserTippyProfile\r\n                      showProfile={(id) => {\r\n                        instanceProfile.hide();\r\n                        setUserProfile(id);\r\n                      }}\r\n                      id={authorId}\r\n                      userCode={userCode}\r\n                      name={author}\r\n                      logo={logo}\r\n                      bot={\r\n                        <p className={style.profileRank}>\r\n                          Rank: {role === \"none\" ? \"No more member\" : role === 0 ? \"User\" : role === 1 ? \"Admin\" : \"Owner\"}\r\n                        </p>\r\n                      }\r\n                    />\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <UserTippyProfile\r\n                      showProfile={(id) => {\r\n                        instanceProfile.hide();\r\n                        setUserProfile(id);\r\n                      }}\r\n                      id={authorId}\r\n                      userCode={userCode}\r\n                      name={author}\r\n                      logo={logo}\r\n                    />\r\n                  );\r\n                }\r\n              }}\r\n              trigger={\"click\"}\r\n              placement={\"right\"}\r\n            >\r\n              <div className={style.logo}>\r\n                <UserLogo width={40} src={logo} />\r\n              </div>\r\n            </Tippy>\r\n            <div className={style.content}>\r\n              <div>\r\n                <div className={style.author}>{author.length > 30 ? `${author.substr(0, 30)}...` : author}</div>\r\n                <p className={style.date}>{date}</p>\r\n              </div>\r\n\r\n              <div className={style.messageContent}>{content}</div>\r\n            </div>\r\n          </div>\r\n        </Tippy>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport Message from \"./Message\";\r\nimport style from './Chat.module.css'\r\nimport {Scrollbars} from \"react-custom-scrollbars\";\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {GET, DELETE} from \"../Util/fetcher\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport MessageContext from \"../ContextProvider/currentMessages\";\r\nimport channelContext from \"../ContextProvider/CurrentChannel\";\r\n\r\nconst MainChat = ({setEditMessage}) => {\r\n    const {ChannelID, ServerID, FriendID} = useParams()\r\n    const [channel, setChannelState] = useState('')\r\n    const {activeChannel} = useContext(channelContext);\r\n    const {messages, setMessages} = useContext(MessageContext);\r\n    const [{Authorization}] = useCookies();\r\n    const history = useHistory();\r\n    const [noMoreMsg, setNoMoreMsg] = useState(false)\r\n    const [scroll, setScroll] = useState()\r\n    const [scrollHeight, setScrollHeight] = useState()\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    const deleteMsg = (id) => {\r\n        let request = (FriendID) ? `client/dm/${FriendID}/${id}` : `channels/${ServerID}/${ChannelID}/${id}`\r\n        DELETE(request, {}, Authorization).then(() => {\r\n            messages.some((x, i) => {\r\n                if (x.id === id) {\r\n                    messages.splice(i, 1)\r\n                    setMessages([...messages])\r\n                    return true;\r\n                }\r\n                return false\r\n            })\r\n        })\r\n        return true;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (activeChannel && (activeChannel.id !== channel) && ChannelID) {\r\n            setChannelState(activeChannel.id)\r\n            GET(`channels/${ServerID}/${ChannelID}/messages`, {limit: 50}, Authorization).then((message) => {\r\n                if (message[0] !== 'error') {\r\n                    setMessages(message.reverse())\r\n                }\r\n            }).catch(() => {\r\n                history.push('/@me')\r\n            })\r\n        } else if (FriendID && (FriendID !== channel)) {\r\n            setChannelState(FriendID)\r\n            GET(`client/dm/${FriendID}`, {limit: 50}, Authorization).then((message) => {\r\n                if (message[0] !== 'error') {\r\n                    setMessages(message.reverse())\r\n                }\r\n            }).catch(() => {\r\n                history.push('/@me')\r\n            })\r\n        }\r\n    }, [activeChannel, ChannelID, channel, FriendID, ServerID, Authorization, setMessages, history])\r\n\r\n    const loadMessages = (scrolled) => {\r\n        if (scrolled.top === 0 && messages.length >= 50 && !noMoreMsg && loaded) {\r\n            if (FriendID) {\r\n                if (scroll) scroll.scrollTop(scrolled.scrollHeight - scrollHeight)\r\n                setScrollHeight(scrolled.scrollHeight)\r\n                if (messages.length >= 50 && !noMoreMsg) {\r\n                    GET(`client/dm/${FriendID}`, {limit: 50, from: messages[0].id}, Authorization).then((message) => {\r\n                        if (!message.length) {\r\n                            setNoMoreMsg(true)\r\n                        } else {\r\n                            setMessages(message.reverse().concat(messages))\r\n\r\n                        }\r\n                    }).catch(() => {\r\n                        history.push('/@me')\r\n                    })\r\n                }\r\n            } else {\r\n                if (scroll) scroll.scrollTop(scrolled.scrollHeight - scrollHeight)\r\n                setScrollHeight(scrolled.scrollHeight)\r\n                GET(`channels/${ServerID}/${ChannelID}/messages`, {limit: 50, from: messages[0].id}, Authorization).then((message) => {\r\n                    if (message[0] !== 'error') {\r\n                        if (!message.length) {\r\n                            setNoMoreMsg(true)\r\n                        } else {\r\n                            setMessages(message.reverse().concat(messages))\r\n                        }\r\n                    }\r\n                }).catch(() => {\r\n                    history.push('/@me')\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.MainChat}>\r\n            <Scrollbars\r\n                autoHide\r\n                style={{height: \"100%\", display: 'flex'}}\r\n                ref={(ref) => {\r\n                    if (ref && !scrollHeight) {\r\n                        ref.scrollToBottom()\r\n                        setScroll(ref)\r\n                        setLoaded(true)\r\n                    }\r\n                }\r\n                }\r\n                onUpdate={loadMessages}\r\n            >\r\n                <div style={{flex: \"1\", display: 'flex', flexDirection: 'column'}}>\r\n                    {(messages[0]) ?\r\n                        messages.map(({date, username, id, content, userLogo, authorId, userCode}, i) => {\r\n                            let time = new Date(date).toLocaleDateString('en-EN', {\r\n                                day: 'numeric',\r\n                                month: 'numeric',\r\n                                year: 'numeric',\r\n                                hour: 'numeric',\r\n                                hour12: false,\r\n                                minute: 'numeric',\r\n                                second: 'numeric'\r\n                            })\r\n                            return (\r\n                                < Message\r\n                                    messageID={id}\r\n                                    setEdit={setEditMessage}\r\n                                    deleteMsg={deleteMsg}\r\n                                    content={content}\r\n                                    key={i}\r\n                                    authorId={authorId}\r\n                                    author={username}\r\n                                    date={time}\r\n                                    logo={userLogo}\r\n                                    userCode={userCode}\r\n                                />\r\n                            )\r\n                        }) : null}\r\n                </div>\r\n            </Scrollbars>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainChat;","import React, {useContext, useState} from 'react';\r\nimport style from \"./UserList.module.css\";\r\nimport UserLogo from \"../UserLogo/UserLogo\";\r\nimport Tippy from \"@tippyjs/react/headless\";\r\nimport UserTippyProfile from \"../UserTippyProfile/UserTippyProfile\";\r\nimport serverContext from \"../ContextProvider/CurrentServer\";\r\nimport {POST, PUT} from \"../Util/fetcher\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport {useParams} from 'react-router-dom'\r\nimport Popup from \"../Popup/Popup\";\r\nimport PopupUserProfile from \"../PopupUserProfile/PopupUserProfile\";\r\nimport UsersListContext from \"../ContextProvider/Server/UsersList\";\r\n\r\nconst MemberButton = ({logo, name, userCode, rank, userId, status}) => {\r\n    const [{Authorization}] = useCookies()\r\n    const [instance, setInstance] = useState()\r\n    const [instanceProfile, setInstanceProfile] = useState()\r\n    const [userProfile, setUserProfile] = useState()\r\n    const {activeServer} = useContext(serverContext);\r\n    const [active, setActive] = useState(false)\r\n    const [banPopup, setBanPopup] = useState(false)\r\n    const {ServerID} = useParams()\r\n    const { usersList, setUsersList } = useContext(UsersListContext);\r\n\r\n\r\n\r\n    const onClick = () => {\r\n        setActive(true)\r\n    }\r\n    const hide = () => {\r\n        setActive(false)\r\n    }\r\n\r\n    const rankUpdate = (rank) => {\r\n        PUT(`server/${ServerID}/members/${userId}`, {role: rank}, Authorization).then(({error}) => {\r\n            if (!error) {\r\n                usersList.some((x) => {\r\n                    if (x.id === userId) {\r\n                        x.role = rank\r\n                        setUsersList([...usersList])\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const ban = () => {\r\n        POST(`server/${activeServer.id}/bans/${userId}`, {}, Authorization).then(({error}) => {\r\n            if (!error) {\r\n                usersList.some((x, i) => {\r\n                    if (x.id === userId) {\r\n                        usersList.splice(i, 1)\r\n                        setUsersList([...usersList])\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    if (!activeServer.isAdmin) {\r\n        return (\r\n            <div>\r\n                {(userProfile)? <PopupUserProfile username={name} logoUrl={logo} userCode={userCode} id={userProfile} outside={() => setUserProfile(false)} />:null}\r\n\r\n                <Tippy\r\n                    appendTo={() => document.getElementById('root')}\r\n                    interactive={true}\r\n                    onTrigger={(i) => setInstanceProfile(i)}\r\n                    render={() => (\r\n                        <UserTippyProfile showProfile={(id) => {\r\n                            instanceProfile.hide()\r\n                            setUserProfile(id)\r\n                        }} id={userId} left userCode={userCode} name={name} logo={logo} bot={\r\n                            <p className={style.profileRank}>Rank: {(rank === 0) ? 'User' : (rank === 1) ? 'Admin' : 'Owner'}</p>\r\n                        }/>\r\n                    )}\r\n                    onHide={hide}\r\n                    trigger={'click'}\r\n                    placement={'left'}\r\n                >\r\n                    <div onClick={onClick} className={`${style.member} ${(active) ? style.active : null}`}>\r\n                        <UserLogo bgcolor={'#343434'} src={logo} status={status}/>\r\n                        <p className={style.memberName}>{name}</p>\r\n                    </div>\r\n                </Tippy>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                {(userProfile)? <PopupUserProfile username={name} logoUrl={logo} userCode={userCode} id={userProfile} outside={() => setUserProfile(false)} />:null}\r\n\r\n                {(banPopup) ?\r\n                    <Popup\r\n                        outside={() => setBanPopup(false)}\r\n                        top={\r\n                            <p style={{color: '#FFFFFF', fontSize: '15px', fontWeight: 400}}>\r\n                                Are you sure to <span style={{color: '#EB5757'}}>BAN </span>\r\n                                {(name.length > 30) ? `${name.substr(0, 30)}...` : name}\r\n                            </p>\r\n                        }\r\n                        bottom={\r\n                            <>\r\n                                <button className={style.leaveButton}\r\n                                        onClick={() => {\r\n                                            setBanPopup(false)\r\n                                            ban()\r\n                                        }}\r\n                                >\r\n                                    <p>BAN</p>\r\n                                </button>\r\n\r\n                                <button className={style.cancelButton} onClick={() => setBanPopup(false)}>\r\n                                    <p>Cancel</p>\r\n                                </button>\r\n                            </>\r\n                        }\r\n                    />\r\n\r\n                    : null}\r\n                <Tippy\r\n                    trigger={'contextmenu'}\r\n                    placement={'bottom'}\r\n                    offset={[15, 5]}\r\n                    arrow={false}\r\n                    hideOnClick={true}\r\n                    interactive={true}\r\n                    onTrigger={((instance, event) => {\r\n                        setInstance(instance)\r\n                        instance.setProps({\r\n                            getReferenceClientRect: () => ({\r\n                                width: 0,\r\n                                height: 0,\r\n                                top: event.clientY,\r\n                                bottom: event.clientY,\r\n                                left: event.clientX,\r\n                                right: event.clientX,\r\n                            }),\r\n                        });\r\n                        instance.show();\r\n                    })}\r\n                    render={(attrs, content) => (\r\n                        <div className={style.contextMenu}>\r\n                            <button className={`${(rank === 2) ? null : style.normalContext} ${style.contextButton}`} onClick={() => {\r\n                                if (rank !== 2) {\r\n                                    rankUpdate((!rank) ? 1 : 0)\r\n                                    instance.hide()\r\n                                }\r\n                            }} disabled={(rank === 2)}> Set {(!rank) ? 'admin' : 'user'}\r\n                            </button>\r\n                            <button className={`${(rank !== 2) ? style.banButton : null} ${style.contextButton}`} onClick={() => {\r\n                                if (rank !== 2) {\r\n                                    instance.hide()\r\n                                    setBanPopup(true)\r\n                                }\r\n                            }}>Ban\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                >\r\n                    <Tippy\r\n                        appendTo={() => document.getElementById('root')}\r\n                        interactive={true}\r\n                        onTrigger={i => setInstanceProfile(i)}\r\n                        render={() => (\r\n                            <UserTippyProfile showProfile={(id) => {\r\n                                instanceProfile.hide()\r\n                                setUserProfile(id)\r\n                            }} id={userId} left userCode={userCode} name={name} logo={logo} bot={\r\n                                <p className={style.profileRank}>Rank: {(rank === 0) ? 'User' : (rank === 1) ? 'Admin' : 'Owner'}</p>\r\n                            }/>\r\n                        )}\r\n                        onHide={hide}\r\n                        trigger={'click'}\r\n                        placement={'left'}\r\n                    >\r\n                        <div onClick={onClick} className={`${style.member} ${(active) ? style.active : null}`}>\r\n                            <UserLogo bgcolor={'#343434'} src={logo} status={status}/>\r\n                            <p className={style.memberName}>{(name.length > 20) ? `${name.substr(0, 20)}...` : name}</p>\r\n                        </div>\r\n                    </Tippy>\r\n                </Tippy>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MemberButton;","import React from 'react';\r\nimport style from \"./UserList.module.css\";\r\nimport MemberButton from \"./MemberButton\";\r\n\r\nconst RankSeparator = ({name, users}) => {\r\n    return (\r\n        <div className={style.userList}>\r\n            <div className={style.rankSeparator}>\r\n                <p className={style.rankName}>{name}</p>\r\n            </div>\r\n            {(users[0]) ? users.map((user,i) => (\r\n                <MemberButton status={user.status} userId={user.id} rank={user.role} key={i} name={user.username} userCode={user.userCode} logo={user.logoUrl}/>\r\n            )): null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RankSeparator;","import React, {useContext} from 'react';\r\nimport RankSeparator from \"./RankSeparator\";\r\nimport {Scrollbars} from \"react-custom-scrollbars\";\r\nimport UsersListContext from \"../ContextProvider/Server/UsersList\";\r\n\r\nconst UserList = () => {\r\n    const { usersList } = useContext(UsersListContext);\r\n\r\n    return (\r\n        <>\r\n            <Scrollbars autoHide style={{height: \"100%\"}}>\r\n                <RankSeparator name={\"Members\"} users={(usersList)?usersList:[]}/>\r\n            </Scrollbars>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserList;","import React, {useContext, useState} from 'react';\r\nimport style from \"./Chat.module.css\";\r\nimport ChannelName from \"../ChannelName/ChannelName\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport MainChat from \"./MainChat\";\r\nimport UserList from \"../UserList/UserList\";\r\nimport channelContext from \"../ContextProvider/CurrentChannel\";\r\nimport {useParams} from \"react-router-dom\";\r\n//type: 0: DM, 1: Server channel\r\n//status= 0: Offline, 1: Online, 2: idle, 3: DnD,\r\nconst statusColor = ['#BDBDBD', '#27AE60', '#F2994A', '#EB5757']\r\n\r\nconst Chat = ({type, status, user}) => {\r\n    const {activeChannel} = useContext(channelContext);\r\n    const [editMessage, setEditMessage] = useState({})\r\n    const {FriendID, ChannelID} = useParams();\r\n    return (\r\n        <div className={style.handler}>\r\n            <div className={style.top}>\r\n                <ChannelName type={((activeChannel.id === ChannelID || FriendID))? type: 1} name={((activeChannel.id === ChannelID || FriendID))? activeChannel.name : 'No text channel'} userCode={((FriendID))? activeChannel.code : null}>\r\n                    <div style={{\r\n                        width: 10,\r\n                        height: 10,\r\n                        backgroundColor: statusColor[status],\r\n                        display: \"flex\",\r\n                        marginLeft: \"10px\",\r\n                        borderRadius: 50\r\n                    }}/>\r\n                </ChannelName>\r\n            </div>\r\n            <div className={style.content}>\r\n                <div className={style.chatFlex}>\r\n                    {((activeChannel.id !== ChannelID && !FriendID)) ? null :\r\n                        <>\r\n                            <MainChat setEditMessage={setEditMessage}/>\r\n                            <div style={{display: 'flex', width: \"100%\", justifyContent: 'center', alignSelf: 'flex-end', zIndex: 20}}>\r\n                                <ChatBox setEditMessage={setEditMessage} content={editMessage} channel={activeChannel.name} type={type}/>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n                {(user != null) ?\r\n                    <div className={style.userList}>\r\n                        <UserList/>\r\n                    </div>\r\n                    : null}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Chat;","import React, {useRef, useState} from 'react';\r\nimport style from \"./Login.module.css\"\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {GET} from '../Util/fetcher'\r\nimport {useCookies} from 'react-cookie';\r\n\r\nconst Login = () => {\r\n    const [error, setError] = useState(\"\")\r\n    // eslint-disable-next-line\r\n    const [, setCookie] = useCookies();\r\n    const email = useRef()\r\n    const password = useRef()\r\n    const history = useHistory()\r\n    const logMe = (e) => {\r\n        e.preventDefault();\r\n        GET(\"authorize\", {email: email.current.value, password: password.current.value}).then(({error, errorCode, loginToken}) => {\r\n            if (errorCode === 2001) return setError(\"Wrong email or password\")\r\n            if (!error) {\r\n                if (loginToken) {\r\n                    setCookie(\"Authorization\", loginToken);\r\n                    history.push(`/@me`)\r\n                } else {\r\n                    setError('Unknown error')\r\n                }\r\n            }\r\n        }).catch(() => {\r\n            setError('Unknown error')\r\n        })\r\n        return true\r\n    }\r\n    const hideError = () => {\r\n        setError(\"\")\r\n    }\r\n    return (\r\n        <div className={style.handler}>\r\n            {(error) ?\r\n                <div className={`${style.alert}`}>\r\n                    <span className={style.closebtn} onClick={(hideError)}>&times;</span>\r\n                    {error}\r\n                </div>\r\n                : null\r\n            }\r\n\r\n            <div className={`${style.login} ${style.slideInTop}`}>\r\n                <form onSubmit={logMe}>\r\n                    <div className={style.input}>\r\n                        <p className={style.inputText}>E-MAIL</p>\r\n                        <input type={\"email\"} className={style.inputForm} ref={email} required/>\r\n                    </div>\r\n                    <div className={style.input}>\r\n                        <p className={style.inputText}>PASSWORD</p>\r\n                        <input type={\"password\"} className={style.inputForm} ref={password} required/>\r\n                    </div>\r\n                    <input type={\"submit\"} className={style.inputButton} value=\"Login\"/>\r\n                    <div className={style.bottom}>\r\n                        <p className={style.redirect}>Need an account ? </p>\r\n                        <Link to={\"/register\"} style={{textDecoration: 'none'}}><p className={style.switch}>Register</p></Link>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport style from \"./Register.module.css\";\r\nimport {Link} from 'react-router-dom'\r\nimport {POST} from \"../Util/fetcher\";\r\nimport {useCookies} from \"react-cookie\";\r\n\r\nconst Register = () => {\r\n    const [, setCookie] = useCookies();\r\n    //Data\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    //Error\r\n    const [usernameError, setUsernameError] = useState('')\r\n    const [passwordError, setPasswordError] = useState('')\r\n    const [emailError, setEmailError] = useState('')\r\n\r\n\r\n\r\n    const register = (e) => {\r\n        e.preventDefault()\r\n        POST(`user`, {email, username, password}, null).then(({error, errorCode, authorization}) => {\r\n            if(errorCode === 5005){\r\n                if(usernameError) setPasswordError('')\r\n                if(emailError) setEmailError('')\r\n                return setPasswordError(error)\r\n            }else if(errorCode === 5008){\r\n                if(usernameError) setPasswordError('')\r\n                if(passwordError) setPasswordError('')\r\n                return setEmailError(error)\r\n            }else if(errorCode === 5006){\r\n                if(passwordError) setPasswordError('')\r\n                if(emailError) setEmailError('')\r\n                return setUsernameError(error)\r\n            }else{\r\n                setCookie(\"Authorization\", authorization);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`${style.login} ${style.slideInTop}`}>\r\n            <form onSubmit={register}>\r\n            <div className={style.input}>\r\n                <p className={style.inputText}>E-MAIL</p>\r\n                <input value={email} onChange={(e) => setEmail(e.target.value)} type={\"email\"} className={`${style.inputForm} ${(emailError)?style.errorBorder:null}`} required/>\r\n                {(emailError)?<div style={{color:\"#EB5757\"}}>{emailError}</div>:null}\r\n            </div>\r\n            <div className={style.input}>\r\n                <p className={style.inputText}>USERNAME</p>\r\n                <input value={username} onChange={(e) => setUsername(e.target.value)} type={\"text\"} className={`${style.inputForm} ${(usernameError)?style.errorBorder:null}`} required/>\r\n                {(usernameError)?<div style={{color:\"#EB5757\"}}>{usernameError}</div>:null}\r\n            </div>\r\n            <div className={style.input}>\r\n                <p className={style.inputText}>PASSWORD</p>\r\n                <input value={password} onChange={(e) => setPassword(e.target.value)} type={\"password\"} className={`${style.inputForm} ${(passwordError)?style.errorBorder:null}`} required/>\r\n                {(passwordError)?<div style={{color:\"#EB5757\"}}>{passwordError}</div>:null}\r\n            </div>\r\n            <input type=\"submit\" className={style.inputButton} value=\"Register\"/>\r\n            <div className={style.bottom}>\r\n                <p className={style.redirect}>Already an account ? </p>\r\n                <Link to={\"/login\"} style={{textDecoration: 'none'}}><p className={style.switch}> Login</p></Link>\r\n            </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport ServerList from './ServerList/ServerList';\r\nimport ChannelList from \"./ChannelList/ChannelList\";\r\nimport TopBar from \"./TopBar/TopBar\";\r\nimport style from \"./App.module.css\";\r\nimport FriendList from \"./FriendList/FriendList\";\r\nimport Chat from \"./Chat/Chat\";\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom'\r\nimport Login from \"./Login/Login\";\r\nimport Register from \"./Login/Register\";\r\nimport config from \"./config\";\r\nimport {useCookies} from 'react-cookie';\r\n\r\n\r\nconst Copyscord = () => {\r\n    const [{Authorization}] = useCookies();\r\n\r\n    if (!Authorization) {\r\n        return (\r\n            <div className={style.handler}>\r\n                <div className={style.container}>\r\n                    <Router>\r\n                        <Switch>\r\n                            <Route path={\"/login\"}>\r\n                                {(Authorization) ?\r\n                                    <Redirect to={'/@me'}/> : <Login/>\r\n                                }\r\n                            </Route>\r\n                            <Route path={\"/register\"}>\r\n                                {(Authorization) ?\r\n                                    <Redirect to={'/@me'}/> : <Register/>\r\n                                }\r\n                            </Route>\r\n                            <Route path={\"/\"}>\r\n                                <Redirect push to={\"/login\"}/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </Router>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n\r\n\r\n        return (\r\n            <div className={style.handler}>\r\n                {(config.TopBar) ? <TopBar/> : null}\r\n                <div className={style.container}>\r\n                    <Router>\r\n                        <Switch>\r\n                            <Route path=\"/@me/:FriendID\">\r\n                                <ServerList/>\r\n                                <ChannelList type={0} name={\"DIRECT MESSAGES\"}/>\r\n                                <Chat type={0}/>\r\n                            </Route>\r\n                            <Route path=\"/@me\">\r\n                                <ServerList/>\r\n                                <ChannelList type={0} name={\"DIRECT MESSAGES\"}/>\r\n                                <FriendList/>\r\n                            </Route>\r\n                            <Route path={\"/:ServerID/:ChannelID\"}>\r\n                                <ServerList/>\r\n                                <ChannelList type={1}/>\r\n                                <Chat user type={1}/>\r\n                            </Route>\r\n                            <Route path={\"/:ServerID\"}>\r\n                                <ServerList/>\r\n                                <ChannelList type={1}/>\r\n                                <Chat user type={1}/>\r\n                            </Route>\r\n                            <Route path={\"/\"}>\r\n                                <Redirect push to={\"/@me\"}/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </Router>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Copyscord","import socket from \"socket.io-client\";\nimport {useCallback, useContext, useEffect, useState} from \"react\";\nimport MessageContext from \"./App/ContextProvider/currentMessages\";\nimport UserContext from \"./App/ContextProvider/CurrentUser\";\nimport serverContext from \"./App/ContextProvider/CurrentServer\";\nimport channelContext from \"./App/ContextProvider/CurrentChannel\";\nimport ServerListContext from \"./App/ContextProvider/ServerList\";\nimport {useCookies} from \"react-cookie\";\nimport config from \"./App/config\";\nimport UsersListContext from \"./App/ContextProvider/Server/UsersList\";\nimport ChannelsContext from \"./App/ContextProvider/Server/ChannelsList\";\nimport VoiceUsersContext from \"./App/ContextProvider/Server/VocieUsers\";\nimport FriendsListContext from \"./App/ContextProvider/FriendsList\";\n\nconst io = socket(config.eventSocket);\n\nconst SocketEvent = ({children}) => {\n    const [{Authorization}] = useCookies();\n    const {messages, setMessages} = useContext(MessageContext);\n    const {activeServer, setServer} = useContext(serverContext);\n    const {activeChannel, setChannel} = useContext(channelContext);\n    const {currentUser} = useContext(UserContext);\n    const {serverList, setServers} = useContext(ServerListContext);\n    const { usersList, setUsersList } = useContext(UsersListContext);\n    const { channelsList, setChannels } = useContext(ChannelsContext);\n    const {voiceUserList, setVoiceUsers} = useContext(VoiceUsersContext);\n    const {friendsList, setFriendsList} = useContext(FriendsListContext);\n\n    const [subServer, setSubServer] = useState('')\n    const [subUser, setSubUser] = useState('')\n\n    const addUser = useCallback((user, channel) => {\n        if(!voiceUserList[channel]) voiceUserList[channel] = []\n        voiceUserList[channel].push(user)\n        setVoiceUsers({...voiceUserList})\n    }, [voiceUserList, setVoiceUsers])\n\n    const removeUser = useCallback((user, channel) => {\n        if(voiceUserList&&voiceUserList[channel]) voiceUserList[channel].some((x,i) => {\n            if(x.id === user){\n                voiceUserList[channel].splice(i, 1)\n                setVoiceUsers({...voiceUserList})\n                return true\n            }\n            return false\n        })\n    }, [voiceUserList, setVoiceUsers])\n\n\n    useEffect(() => {\n\n        if (subServer !== activeServer.id && activeServer.id !== undefined) {\n            io.emit(\"unsubscribeServer\", subServer);\n            if(activeServer !== '@me')io.emit(\"subscribeServer\", {Authorization: Authorization, serverID: activeServer.id});\n            setSubServer(activeServer.id)\n        }\n\n        if (subUser !== currentUser.id) {\n            io.emit(\"unsubscribeMyself\", subUser)\n            io.emit(\"subscribeMyself\",  {Authorization: Authorization})\n            setSubUser(currentUser.id)\n        }\n\n\n    }, [currentUser, activeServer, activeChannel, subServer, subUser, setSubUser, setSubServer, Authorization])\n\n    useEffect(() => {\n        io.removeListener(\"newMessage\");\n        io.on(\"newMessage\", ({channelID, messageID, content, authorID, authorName, authorLogo, authorCode, date, serverID}) => {\n            if (activeServer.id === serverID && channelID === activeChannel.id) {\n                if (currentUser.id !== authorID)\n                    setMessages([\n                        ...messages,\n                        {\n                            authorId: authorID,\n                            channel: channelID,\n                            content,\n                            date,\n                            id: messageID,\n                            userCode: authorCode,\n                            userLogo: authorLogo,\n                            username: authorName,\n                            server: serverID,\n                        },\n                    ]);\n            }\n        });\n        io.removeListener(\"updateMessage\");\n        io.on(\"updateMessage\", ({serverID, messageID, newContent, authorID}) => {\n            if (activeServer.id === serverID) {\n                if (currentUser.id !== authorID)\n                    messages.some((message) => {\n                        if (message.id === messageID) {\n                            message.content = newContent;\n                            return true;\n                        }\n                        return false;\n                    });\n                setMessages([...messages]);\n            }\n        });\n        io.removeListener(\"deleteMessage\");\n        io.on(\"deleteMessage\", ({messageID, authorID, serverID}) => {\n            if (activeServer.id === serverID) {\n                if (currentUser.id !== authorID)\n                    messages.some((message, i) => {\n                        if (message.id === messageID) {\n                            messages.splice(i, 1);\n                            return true;\n                        }\n                        return false;\n                    });\n                setMessages([...messages]);\n            }\n        });\n\n        io.removeListener(\"newDM\");\n        io.on(\"newDM\", ({channelID, messageID, content, authorID, authorStatus, authorName, authorLogo, authorCode, date, serverID}) => {\n            if (activeServer.id === serverID) {\n                if (currentUser.id !== authorID && activeChannel.id === authorID) {\n                    setMessages([\n                        ...messages,\n                        {\n                            authorId: authorID,\n                            channel: channelID,\n                            content,\n                            date,\n                            id: messageID,\n                            userCode: authorCode,\n                            userLogo: authorLogo,\n                            username: authorName,\n                            server: serverID,\n                        },\n                    ]);\n                }\n                if (!channelsList.some(x => x.id === authorID)) {\n                    channelsList.push({\n                        id: authorID,\n                        name: authorName,\n                        logoUrl: authorLogo,\n                        status: authorStatus,\n                        code: authorCode,\n                        lastMessage: Date.now()\n                    })\n                    channelsList.sort((i, j) => j.lastMessage - i.lastMessage)\n                    setChannels([...channelsList])\n                }\n            }\n        });\n\n        io.removeListener(\"updateDM\");\n        io.on(\"updateDM\", ({serverID, channelID, messageID, newContent, authorID}) => {\n            if (activeServer.id === serverID && activeChannel.id === authorID) {\n                if (currentUser.id !== authorID) {\n                    messages.some((message) => {\n                        if (message.id === messageID) {\n                            message.content = newContent;\n                            return true;\n                        }\n                        return false;\n                    });\n                    setMessages([...messages]);\n                }\n            }\n        });\n\n\n        io.removeListener(\"deleteDM\");\n        io.on(\"deleteDM\", ({messageID, authorID, serverID}) => {\n                if (activeServer.id === serverID && activeChannel.id === authorID) {\n                    if (currentUser.id !== authorID) {\n                        messages.some((message, i) => {\n                            if (message.id === messageID) {\n                                messages.splice(i, 1);\n                                return true;\n                            }\n                            return false;\n                        });\n                        setMessages([...messages]);\n                    }\n                }\n            }\n        );\n\n    }, [messages, currentUser, setMessages, activeServer, activeChannel, setServer, channelsList, setChannels]);\n\n    useEffect(() => {\n        io.removeListener(\"newChannel\");\n        io.on(\"newChannel\", ({serverID, categoryID, channelID, channelName, type}) => {\n            if (activeServer.id === serverID) {\n                channelsList.some((category) => {\n                    if (category.categoryId === categoryID) {\n                        category.channelsList.push({id: channelID, name: channelName, type});\n                        return true;\n                    }\n                    return false;\n                });\n                setChannels([...channelsList]);\n            }\n        });\n        io.removeListener(\"updateChannel\");\n        io.on(\"updateChannel\", ({serverID, channelID, newChannelName}) => {\n            if (activeServer.id === serverID) {\n                channelsList.some((category) => {\n                    return category.channelsList.some((channel, i) => {\n                        if (channel.id === channelID) {\n                            channel.name = newChannelName;\n                            return true;\n                        }\n                        return false;\n                    });\n                });\n                setChannels([...channelsList]);\n            }\n        });\n        io.removeListener(\"deleteChannel\");\n        io.on(\"deleteChannel\", ({serverID, channelID}) => {\n            if (activeServer.id === serverID) {\n                channelsList.some((category) => {\n                    return category.channelsList.some((channel, i) => {\n                        if (channel.id === channelID) {\n                            category.channelsList.splice(i, 1);\n                            return true;\n                        }\n                        return false;\n                    });\n                });\n                if (activeChannel.id === channelID) {\n                    setChannel({});\n                }\n                setChannels([...channelsList])\n            }\n        });\n        io.removeListener(\"newVoiceUser\");\n        io.on(\"newVoiceUser\", (user) => {\n            addUser(user, user.channelID)\n        });\n\n        io.removeListener(\"removeVoiceUser\");\n        io.on(\"removeVoiceUser\", (user) => {\n            removeUser(user.id, user.channelID)\n        });\n\n\n        io.removeListener(\"newCategory\");\n        io.on(\"newCategory\", ({serverID, categoryID, categoryName}) => {\n            if (activeServer.id === serverID) {\n                channelsList.push({categoryId: categoryID, categoryName, channelsList: []});\n                setChannels([...channelsList]);\n            }\n        });\n        io.removeListener(\"updateCategory\");\n        io.on(\"updateCategory\", ({serverID, categoryID, newCategoryName}) => {\n            if (activeServer.id === serverID) {\n                channelsList.some((category, i) => {\n                    if (category.categoryId === categoryID) {\n                        category.categoryName = newCategoryName;\n                        return true;\n                    }\n                    return false;\n                });\n                setChannels([...channelsList]);\n            }\n        });\n        io.removeListener(\"deleteCategory\");\n        io.on(\"deleteCategory\", ({serverID, categoryID}) => {\n            if (activeServer.id === serverID) {\n                if (\n                    channelsList.some((x) => x.categoryId === categoryID && x.channelsList.some((y) => activeChannel.id === y.id))\n                )\n                    setChannel({});\n\n                channelsList.some((category, i) => {\n                    if (category.categoryId === categoryID) {\n                        channelsList.splice(i, 1);\n                        return true;\n                    }\n                    return false;\n                });\n                setChannels([...channelsList]);\n            }\n        });\n\n        io.removeListener(\"newUser\");\n        io.on(\"newUser\", ({serverID, userID, username, userCode, logoUrl, status}) => {\n            if (activeServer.id === serverID) {\n                if (currentUser.id !== userID) {\n                    usersList.push({id: userID, username, userCode, logoUrl, status, role: 0});\n                    setUsersList([...usersList])\n                }\n            }\n        });\n        io.removeListener(\"updateUser\");\n        io.on(\"updateUser\", ({serverID, userID, username, userCode, logoUrl, status, role}) => {\n            if (serverID === activeServer.id) {\n                if (currentUser.id === userID) {\n                    if (role === 1) {\n                        activeServer.isAdmin = true\n                    } else if (role === 0) {\n                        activeServer.isAdmin = false\n                    }\n                }\n                usersList.some((x) => {\n                    if (x.id === userID) {\n                        if (username) x.username = username;\n                        if (userCode) x.userCode = userCode;\n                        if (logoUrl) x.logoUrl = logoUrl;\n                        if (status !== undefined) x.status = status;\n                        if (role !== undefined) x.role = role;\n                        setUsersList([...usersList])\n                        return true;\n                    }\n                    return false;\n                });\n            }else if(currentUser.id === serverID &&  activeServer.id === '@me'){\n                channelsList.some((x) => {\n                    if (x.id === userID) {\n                        if (username) x.name = username;\n                        if (userCode) x.code = userCode;\n                        if (logoUrl) x.logoUrl = logoUrl;\n                        if (status !== undefined) x.status = status;\n                        setChannels([...channelsList])\n                        return true;\n                    }\n                    return false;\n                });\n\n                friendsList.some((x) => {\n                    if (x.id === userID) {\n                        if (username) x.name = username;\n                        if (userCode) x.code = userCode;\n                        if (logoUrl) x.logoUrl = logoUrl;\n                        if (status !== undefined) x.status = status;\n                        setFriendsList([...friendsList])\n                        return true;\n                    }\n                    return false;\n                });\n\n            }\n        });\n\n        io.removeListener(\"deleteUser\");\n        io.on(\"deleteUser\", ({serverID, userID}) => {\n            usersList.some((x, i) => {\n                if (x.id === userID) {\n                    usersList.splice(i, 1);\n                    return true;\n                }\n                return false;\n            });\n\n            if (currentUser.id === userID) {\n                setServer({id: '/@me'})\n                serverList.some((x, i) => {\n                    if (x.id === serverID) {\n                        serverList.splice(i, 1);\n                        setServers([...serverList]);\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            setUsersList([...usersList])\n        });\n    }, [setFriendsList, friendsList, addUser, removeUser, activeServer, setServer, activeChannel, setChannel, currentUser, serverList, setServers, channelsList, setChannels, setUsersList, usersList]);\n\n    useEffect(() => {\n        io.removeListener(\"updateServer\");\n        io.on(\"updateServer\", ({serverID, name, logoUrl}) => {\n            if (activeServer.id === serverID) {\n                if (name) activeServer.name = name;\n                setServer({...activeServer});\n            }\n            serverList.some((x) => {\n                if (x.id === serverID) {\n                    if (name) x.name = name;\n                    if (logoUrl) x.logoUrl = logoUrl;\n                    setServers([...serverList]);\n                    return true;\n                }\n                return false;\n            });\n\n        });\n        io.removeListener(\"deleteServer\");\n        io.on(\"deleteServer\", ({deleteServer}) => {\n            if (activeServer.id === deleteServer) {\n                setServer({id: '/@me'})\n            }\n            serverList.some((x, i) => {\n                if (x.id === deleteServer) {\n                    serverList.splice(i, 1);\n                    setServers([...serverList]);\n                    return true;\n                }\n                return false;\n            });\n        });\n    }, [activeServer, setServer, serverList, setServers]);\n\n    return children;\n};\n\nexport default SocketEvent;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Copyscord from \"./App/App\";\nimport {CookiesProvider} from \"react-cookie\";\nimport \"./index.css\";\nimport {CurrentChannel} from \"./App/ContextProvider/CurrentChannel\";\nimport {CurrentVoiceChannel} from \"./App/ContextProvider/CurrentVoiceChannel\";\nimport {CurrentMessage} from \"./App/ContextProvider/currentMessages\";\nimport {CurrentUser} from \"./App/ContextProvider/CurrentUser\";\nimport {CurrentServer} from \"./App/ContextProvider/CurrentServer\";\nimport {ServersList} from \"./App/ContextProvider/ServerList\";\nimport SocketEvent from \"./SocketEvent\";\nimport {UsersList} from \"./App/ContextProvider/Server/UsersList\";\nimport {ChannelsList} from \"./App/ContextProvider/Server/ChannelsList\";\nimport {VoiceUsers} from \"./App/ContextProvider/Server/VocieUsers\";\nimport {FriendsList} from \"./App/ContextProvider/FriendsList\";\n\nReactDOM.render(\n    <CurrentUser>\n        <FriendsList>\n            <ServersList>\n                <CurrentServer>\n                    <VoiceUsers>\n                        <ChannelsList>\n                            <UsersList>\n                                <CurrentChannel>\n                                    <CurrentVoiceChannel>\n                                        <CurrentMessage>\n                                            <CookiesProvider>\n                                                <SocketEvent>\n                                                    <Copyscord/>\n                                                </SocketEvent>\n                                            </CookiesProvider>\n                                        </CurrentMessage>\n                                    </CurrentVoiceChannel>\n                                </CurrentChannel>\n                            </UsersList>\n                        </ChannelsList>\n                    </VoiceUsers>\n                </CurrentServer>\n            </ServersList>\n        </FriendsList>\n    </CurrentUser>,\n    document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userList\":\"UserList_userList__2Fguy\",\"rankSeparator\":\"UserList_rankSeparator__3w4TL\",\"rankName\":\"UserList_rankName__3AoIv\",\"member\":\"UserList_member__3tdJI\",\"memberName\":\"UserList_memberName__-Xqiw\",\"active\":\"UserList_active__CZdKO\",\"profileRank\":\"UserList_profileRank__3wP4f\",\"contextMenu\":\"UserList_contextMenu__W1WOt\",\"contextButton\":\"UserList_contextButton__2oP-o\",\"normalContext\":\"UserList_normalContext__1ecMT\",\"banButton\":\"UserList_banButton__3rgvc\",\"leaveButton\":\"UserList_leaveButton__34ZOv\",\"cancelButton\":\"UserList_cancelButton__2fjL1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slideInTop\":\"Register_slideInTop__1x_Ss\",\"login\":\"Register_login__1flqA\",\"input\":\"Register_input__2cpJd\",\"inputText\":\"Register_inputText__TcBIf\",\"inputForm\":\"Register_inputForm__1XT3m\",\"inputButton\":\"Register_inputButton__clGmc\",\"redirect\":\"Register_redirect__1zZQ5\",\"switch\":\"Register_switch__3Gt23\",\"bottom\":\"Register_bottom__2nBcl\",\"errorBorder\":\"Register_errorBorder__2xBi1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slideInTop\":\"Login_slideInTop__3Q1ab\",\"handler\":\"Login_handler__wzSdo\",\"closebtn\":\"Login_closebtn__KZFdT\",\"login\":\"Login_login__36vhJ\",\"input\":\"Login_input__2p0_A\",\"inputText\":\"Login_inputText__1WypS\",\"inputForm\":\"Login_inputForm__3eu0m\",\"inputButton\":\"Login_inputButton__lQrC5\",\"redirect\":\"Login_redirect__3s39S\",\"switch\":\"Login_switch__12XtL\",\"bottom\":\"Login_bottom__1RvXm\",\"alert\":\"Login_alert__12aAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"Chat_handler__hOa3n\",\"top\":\"Chat_top__3faAZ\",\"boxContainer\":\"Chat_boxContainer__3ifwd\",\"textbox\":\"Chat_textbox__qSfFE\",\"border\":\"Chat_border__1-vED\",\"content\":\"Chat_content__29upD\",\"chatFlex\":\"Chat_chatFlex__3xo7C\",\"MainChat\":\"Chat_MainChat__2cdcs\",\"chatInput\":\"Chat_chatInput__2kyL1\",\"userList\":\"Chat_userList__1s6_p\",\"cancel\":\"Chat_cancel__21DMf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1L1E5\",\"logo\":\"Message_logo__3GBKO\",\"profileRank\":\"Message_profileRank__Jb1W4\",\"content\":\"Message_content__35FF7\",\"author\":\"Message_author__2i8H1\",\"date\":\"Message_date__3d8_I\",\"messageContent\":\"Message_messageContent__2or71\",\"contextMenu\":\"Message_contextMenu__24Ch2\",\"contextButton\":\"Message_contextButton__1mjjJ\",\"delete\":\"Message_delete__TlyCT\",\"edit\":\"Message_edit__PFEaN\",\"leaveButton\":\"Message_leaveButton__1x2tW\",\"cancelButton\":\"Message_cancelButton__2Hk7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ServerButton_button__w0Q1r\",\"dm\":\"ServerButton_dm___DYXH\",\"image\":\"ServerButton_image__3Walj\",\"serverButton\":\"ServerButton_serverButton__3g6Af\",\"active\":\"ServerButton_active__2n0Gh\",\"addServer\":\"ServerButton_addServer__3ST4a\",\"addServerCross\":\"ServerButton_addServerCross__WIlEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slideLeft\":\"UserTippyProfile_slideLeft__2rEq9\",\"slideRight\":\"UserTippyProfile_slideRight__24NZb\",\"profile\":\"UserTippyProfile_profile__QnSmX\",\"profileTop\":\"UserTippyProfile_profileTop__2CnVk\",\"profileBot\":\"UserTippyProfile_profileBot__1LoIw\",\"profileUsername\":\"UserTippyProfile_profileUsername__3Rens\",\"profileUsernameID\":\"UserTippyProfile_profileUsernameID__L9RIr\",\"profileLogo\":\"UserTippyProfile_profileLogo__P5GHl\",\"dmHandler\":\"UserTippyProfile_dmHandler__18FZQ\",\"dmInputHandler\":\"UserTippyProfile_dmInputHandler__i8ogx\",\"dmInput\":\"UserTippyProfile_dmInput__3Md7h\",\"errorBorder\":\"UserTippyProfile_errorBorder__1Rk4u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"BansHandler_handler__20ohm\",\"removeBan\":\"BansHandler_removeBan__1k7Ou\",\"banned\":\"BansHandler_banned__1T89w\",\"author\":\"BansHandler_author__2C6Ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"CreateJoinServer_popup__MAkFE\",\"popupHandler\":\"CreateJoinServer_popupHandler__3-TVJ\",\"title\":\"CreateJoinServer_title__2D5Rs\",\"content\":\"CreateJoinServer_content__2zaSj\",\"joinCreate\":\"CreateJoinServer_joinCreate__3XRJq\",\"icons\":\"CreateJoinServer_icons__2JwqA\",\"join\":\"CreateJoinServer_join__3VKD-\",\"create\":\"CreateJoinServer_create__1i6Lc\",\"slide\":\"CreateJoinServer_slide__RxMR6\",\"slider\":\"CreateJoinServer_slider__3bw5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"UserContainer_handler__2JQNx\",\"username\":\"UserContainer_username__1km5Y\",\"userLogo\":\"UserContainer_userLogo__-3nJE\",\"usercode\":\"UserContainer_usercode__1Rp9q\",\"userInfo\":\"UserContainer_userInfo__1h770\",\"infoWrapper\":\"UserContainer_infoWrapper__xnEUN\",\"controller\":\"UserContainer_controller__21DON\",\"controlButton\":\"UserContainer_controlButton__3pP5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"FriendChannelButton_handler__34l7Q\",\"remove\":\"FriendChannelButton_remove__12htT\",\"nameLogo\":\"FriendChannelButton_nameLogo__3C0an\",\"active\":\"FriendChannelButton_active__3r207\",\"logo\":\"FriendChannelButton_logo__3jdI1\",\"username\":\"FriendChannelButton_username__3dael\",\"friendsButton\":\"FriendChannelButton_friendsButton__3urc4\",\"friendsText\":\"FriendChannelButton_friendsText__CElad\",\"leaveButton\":\"FriendChannelButton_leaveButton__i99vD\",\"cancelButton\":\"FriendChannelButton_cancelButton__26qXA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navSeparator\":\"UserSettings_navSeparator__3zDEa\",\"navButton\":\"UserSettings_navButton__erifh\",\"logout\":\"UserSettings_logout__3Z_93\",\"handler\":\"UserSettings_handler__1LS02\",\"title\":\"UserSettings_title__2T5G2\",\"userContainer\":\"UserSettings_userContainer__1R2cj\",\"userInfo\":\"UserSettings_userInfo__2eZ3H\",\"userInfoText\":\"UserSettings_userInfoText__3xV7n\",\"userInfoTitle\":\"UserSettings_userInfoTitle__1IeNm\",\"userInfoHandler\":\"UserSettings_userInfoHandler__3pWXG\",\"edit\":\"UserSettings_edit__2p9fa\",\"titleExit\":\"UserSettings_titleExit__SoGqE\",\"end\":\"UserSettings_end__1VLrI\",\"exitButton\":\"UserSettings_exitButton__3PpFo\",\"inputHandler\":\"UserSettings_inputHandler__3UoFZ\",\"input\":\"UserSettings_input__1rga9\",\"updateButton\":\"UserSettings_updateButton__jEkh5\",\"cancelButton\":\"UserSettings_cancelButton__1zg2p\",\"changePassword\":\"UserSettings_changePassword__vhPuY\",\"errorText\":\"UserSettings_errorText__3BYY8\",\"errorBorder\":\"UserSettings_errorBorder__1SYIx\",\"imageInput\":\"UserSettings_imageInput__1twOi\",\"changeAvatar\":\"UserSettings_changeAvatar__Cx8En\",\"deleteProfilePicture\":\"UserSettings_deleteProfilePicture__113or\",\"canReceiveDM\":\"UserSettings_canReceiveDM__2Nw2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"FriendsTypeSwitcher_switch__3Nrpn\",\"switcher\":\"FriendsTypeSwitcher_switcher__32AD6\",\"switcherText\":\"FriendsTypeSwitcher_switcherText__2ZlJQ\",\"active\":\"FriendsTypeSwitcher_active__1hroi\",\"addFriendButton\":\"FriendsTypeSwitcher_addFriendButton__JxoiP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"Common_handler__2nmGU\",\"listUser\":\"Common_listUser__1oyAG\",\"name\":\"Common_name__2dyaR\",\"userCode\":\"Common_userCode__TeaI7\",\"serverLogo\":\"Common_serverLogo__H32hq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"StatusChanger_handler__DdE1b\",\"select\":\"StatusChanger_select__yTvWI\",\"active\":\"StatusChanger_active__1ZdjM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"ChannelList_handler__2cTu0\",\"handlerBR\":\"ChannelList_handlerBR__3dONV\",\"top\":\"ChannelList_top__gfLtO\",\"channelList\":\"ChannelList_channelList__2i2wJ\",\"UserContainer\":\"ChannelList_UserContainer__Y4y-N\",\"dmSeparator\":\"ChannelList_dmSeparator__3tncS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addFriend\":\"AddFriend_addFriend__1cCrW\",\"input\":\"AddFriend_input__2y4Xo\",\"button\":\"AddFriend_button__243lF\",\"alert\":\"AddFriend_alert__2ofXm\",\"success\":\"AddFriend_success__570qP\",\"closebtn\":\"AddFriend_closebtn__2N4Lq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category\":\"ServerCategory_category__3v3h9\",\"name\":\"ServerCategory_name__NjS_w\",\"nameDiv\":\"ServerCategory_nameDiv__Tvgih\",\"categoryName\":\"ServerCategory_categoryName__ec-eD\",\"arrow\":\"ServerCategory_arrow__2NyB7\",\"addChannel\":\"ServerCategory_addChannel__sKG3H\",\"channel\":\"ServerCategory_channel__2keQg\",\"channelName\":\"ServerCategory_channelName__1GkDs\",\"channelOption\":\"ServerCategory_channelOption__2YZgS\",\"activeChannel\":\"ServerCategory_activeChannel__3lZws\",\"hidden\":\"ServerCategory_hidden__2TjkZ\",\"nonactiveChannel\":\"ServerCategory_nonactiveChannel__12zR5\",\"contextMenu\":\"ServerCategory_contextMenu__1pm1h\",\"contextButton\":\"ServerCategory_contextButton__11XAr\",\"leave\":\"ServerCategory_leave__2Z5pR\",\"cancelButton\":\"ServerCategory_cancelButton__22GbU\",\"deleteButton\":\"ServerCategory_deleteButton__19JBR\",\"settings\":\"ServerCategory_settings__1QS4D\",\"voiceUser\":\"ServerCategory_voiceUser__2-HyE\",\"voiceUsername\":\"ServerCategory_voiceUsername__1cf5R\",\"userList\":\"ServerCategory_userList__2zkfH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"TopBar_topBar__93y7N\",\"appName\":\"TopBar_appName__LI2xm\",\"controlMenu\":\"TopBar_controlMenu__LjqGz\",\"menuButton\":\"TopBar_menuButton__mfHQA\",\"reduce\":\"TopBar_reduce__1PsvF\",\"enlarge\":\"TopBar_enlarge__61UIY\",\"exit\":\"TopBar_exit__3ZUrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navButton\":\"ServerSettings_navButton__azKKy\",\"activeNav\":\"ServerSettings_activeNav__2mo3u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1wcNi\",\"navBar\":\"Settings_navBar__18caE\",\"buttonList\":\"Settings_buttonList__2_UwJ\",\"content\":\"Settings_content__1U6Js\",\"title\":\"Settings_title__kJDaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"VoiceStatus_handler__2u0pe\",\"connected\":\"VoiceStatus_connected__1RSt-\",\"connecting\":\"VoiceStatus_connecting__2qlzF\",\"disconnect\":\"VoiceStatus_disconnect__zek8n\",\"channelName\":\"VoiceStatus_channelName__23ZkY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cancelButton\":\"AddChannel_cancelButton__pZS6I\",\"createButton\":\"AddChannel_createButton__2Ljcc\",\"content\":\"AddChannel_content__1QcKT\",\"titleHandler\":\"AddChannel_titleHandler__sYmXx\",\"categoryName\":\"AddChannel_categoryName__3xfsy\",\"title\":\"AddChannel_title__2gnsI\",\"subTitle\":\"AddChannel_subTitle__MufKC\",\"form\":\"AddChannel_form__2VZ2c\",\"channelType\":\"AddChannel_channelType__106Sf\",\"channelTypeFa\":\"AddChannel_channelTypeFa__13BV7\",\"activeType\":\"AddChannel_activeType__2TePj\",\"checkbox\":\"AddChannel_checkbox__rzLrt\",\"checkboxSpan\":\"AddChannel_checkboxSpan__3_Bl3\",\"inputText\":\"AddChannel_inputText__3mWwA\",\"channelName\":\"AddChannel_channelName__3Sfyp\",\"error\":\"AddChannel_error__1d-5L\",\"borderError\":\"AddChannel_borderError__2hluJ\",\"deleteButton\":\"AddChannel_deleteButton__2FdmL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"ChannelName_handler__3qYKq\",\"channelInfo\":\"ChannelName_channelInfo__36POk\",\"channelLogo\":\"ChannelName_channelLogo__3cIGC\",\"channelName\":\"ChannelName_channelName__1G7rM\",\"userCode\":\"ChannelName_userCode__cDR61\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup__3m2fX\",\"popupHandler\":\"Popup_popupHandler__3KJ8W\",\"top\":\"Popup_top__SUAZz\",\"bottom\":\"Popup_bottom__242Vl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"App_handler__29cuc\",\"container\":\"App_container___P6pN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navButton\":\"ChannelSettings_navButton__KqMPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"ServerList_handler__1-b2z\",\"serverHandler\":\"ServerList_serverHandler__3b5-F\",\"serverSeparator\":\"ServerList_serverSeparator__17OXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handler\":\"ManageInvite_handler__2TAg1\",\"invite\":\"ManageInvite_invite__2iAsf\",\"delete\":\"ManageInvite_delete__3w2zj\"};"],"sourceRoot":""}